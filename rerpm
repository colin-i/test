
if [ -e ~/rerpm_extern ]; then
	echo rerpm ready\?
	read -t $((60*60*24))
	exit 0
fi

name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`

arch=`cat debian/control | grep ^Architecture | cut -d ' ' -f2`
if [ "${arch}" = "amd64" ]; then
arch=x86_64
elif [ "${arch}" = "all" ]; then
arch=noarch
fi

version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
file=${name}-${version}.${arch}.rpm

#if [ ! -e "./${file}" ]; then
id=$(gh run list --workflow=rpm.yml -b $(git rev-parse --abbrev-ref HEAD) | cut -f7 | head -1)
repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o [^/]*$`
#fi

startdir=`pwd`
cd /tmp

if [ ! -e "./${file}" ]; then
	url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
	url=${url:1:-1}
	curl -H "Authorization: token `cat ~/n/pat`" -L -o arh.zip ${url}
	#not ok on kinetic curl --netrc-file ~/n/pat2 -L -o arh.zip ${url}
	unzip arh.zip
	rpm2cpio ${file} | cpio -idmv
fi

dir=${HOME}/rpmbuild/BUILDROOT/`echo ${file} | grep -Poe ".*(?=\.)"`
# sudo docker pull fedora
# sudo docker run -ti fedora
# exit
# sudo docker ps -a
# sudo docker start ${contid}
# sudo docker attach ${contid}
#	yum install rpmrebuild
contid=`sudo docker ps -a -f ancestor=fedora -q`

sudo docker container start ${contid} && {
	sudo docker container cp ./${file} ${contid}:/ && \
	\
	sudo docker exec ${contid} rpmrebuild -s text -p ./${file} && \
	\
	sudo docker container cp ${contid}:/text text && \
	\
	if [ -e "${startdir}/arh/re" ]; then
		cp text text_cmp && \
		${startdir}/arh/re ${startdir} && \
		cat text && \
		diff text text_cmp || \
		rm text_cmp
	fi && \
	mkdir -p ${dir} && \
	mv usr ${dir}/ && \
	rpmbuild -bb --target ${arch} text && \
	#on arm this is: No compatible architectures found for build
	sudo docker exec ${contid} rm -rf /text && \
	sudo rm text && \
	rm arh.zip && \
	rm ${file}
	x=$?
	sudo docker container stop ${contid}
	exit ${x}
}