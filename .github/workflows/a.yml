
#name: appimage

on:
 # Triggers the workflow on push or pull request events but only for the main branch
 #push:
 # branches: [ main ]
 #pull_request:
 # branches: [ main ]
 # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 # This workflow contains a single job called "build"
 build:
  # The type of runner that the job will run on
  runs-on: ubuntu-18.04
  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
   - name: Create Release
     id: create_release
     uses: actions/create-release@v1
     env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
     with:
      tag_name: 1.3
      release_name: Release 1.3
      draft: false
      rerelease: false
   #- name: Upload Release Asset
   #  uses: actions/upload-release-asset@v1
   #  env:
   #   GITHUB_TOKEN: ${{ secrets.PAT }}
   #  with:
   #   upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
   #   asset_path: ./LD-.glibc2.27-x86_64.AppImage
   #   asset_name: LD-.glibc2.27-x86_64.AppImage
   #   asset_content_type: application/x-executable
