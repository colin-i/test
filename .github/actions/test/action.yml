name: 'test'
inputs:
 branch:
  description: "another branch"
#must have GITHUB_TOKEN for gh/upload
runs:
 using: "composite"
 steps:
  - name: Run a multi-line script
    shell: bash
    run: |
     #proj
     name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
     #get appimage artifact
     branch=${{ inputs.branch }}
     if [ -z "${branch}" ]; then
      branch=$(git rev-parse --abbrev-ref HEAD)
     fi
     echo ${branch}
     id=$(gh run list --workflow=appimage.yml -b ${branch} | cut -f7 | head -1)
     repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o "[^/]*$"`
     #
     url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
     url=${url:1:-1}
     echo ${url}

     curl -L -H "Authorization: token ${{ env.GITHUB_TOKEN }}" ${url} --output a.zip
     unzip ./a.zip

     sudo apt-get install -y libfuse2`if [ ${{ matrix.os }} = "ubuntu-24.04" ]; then echo -n t64; fi` #xvfb is already
     #export DISPLAY=:0

     #dependencies test, if screen was working here then no broadway
     runname=./${name}.AppImage
     sudo Xvfb :1 -screen 0 1920x1080x8 &
     xvfbid=$!
     sleep 5
     { #don't know why but strace is "Killed" but is printing through the end when & with strace
      sleep 5 & { termid=`ps -o ppid= $!`; echo termid=${termid}; echo ${termid} > 1; }
      sleep 10
      DISPLAY=:1 ${runname} &
      sleep 5
      ps -C ${name} -o pid,cmd | grep ${name} | tr -s ' ' | cut -d' ' -f2 > 2
      #pid of our prog is not related to AppImage pid ( is not a child of that ), and the parent is the terminal, not the appimage
      # -C ${name}.AppImage for appimage pid
      #id= is not working outside this {} process
      straceid=`ps -C strace -o pid,cmd | grep strace | tr -s ' ' | cut -d' ' -f2`
      # -C strace at cmd is also with args
      # cut -f1 is blank at start
      sudo kill -s 9 ${straceid}
     } &
     sleep 5
     sudo strace -e trace=prlimit64 -f -p `cat 1` -o 3 || echo killed
     sudo kill -s 9 ${xvfbid} #our program will exit without an X, and appimage at the same time
     cat 3 | grep "^`cat 2`  prlimit64"
     #if [ $? != 0 ]; then exit 1; fi #is ok at !=0 is exiting
     #can use bpftrace or execsnoop but is not a hurry
     #import -window root -display :1 -screen screenshot.png #imagemagick is on noble

     sudo apt install -y libgtk-3-bin npm libnss3
     npm install puppeteer
     cat > capture.js <<EOF
     const puppeteer = require('puppeteer');
     async function captureBroadwayScreenshot(url, outputPath) {
       const browser = await puppeteer.launch({ args: ['--no-sandbox'] });
       const page = await browser.newPage();
       await page.goto(url);
       await page.screenshot({ path: outputPath });
       await browser.close();
     }
     captureBroadwayScreenshot('http://localhost:8080', 'screenshot.png');
     EOF
     #port 8080+DISPLAY at default
     DISPLAY=:0 broadwayd -p 8080 &
     sleep 10
     GDK_BACKEND=broadway BROADWAY_DISPLAY=:0 ./${name}.AppImage -d 200x200 &
     sleep 10
     node capture.js
  - name: upload artifact
    uses: actions/upload-artifact@master
    with:
     name: screenshot-${{ matrix.os }}
     path: screenshot.png
