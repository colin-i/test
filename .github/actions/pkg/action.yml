name: 'pkg'
inputs:
 py:
  description: "is python"
 amd64:
  description: "x86_64"
 aur:
  description: "from aur"
#must have GITHUB_TOKEN for upload, and gh
runs:
 using: "composite"
 steps:
 - name: main deps
   shell: bash
   run: pacman -Sy --noconfirm --needed sudo git base-devel jq
   #this here because even actions/checkout will not make .git if no git in PATH
 - name: Checkout
   uses: actions/checkout@master
 - name: build
   shell: bash
   run: |
    name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
    if [ -n "${{ inputs.py }}" ]; then
     name=python-${name}
    fi

    #last tag can be a fedora patch and not have a release.  other options: 1.back at upload_url  2.from upload_url get id and then get tag
    #remote=`cat debian/control | grep Homepage | grep -oP "(?<=:).*"`
    #echo ${remote}
    #git config --global --add safe.directory .
    #git remote add orig ${remote}
    #tag=`git ls-remote --tags --sort='v:refname' | tail -n1 | sed 's/.*\///' | grep -o "[^^]*" | head -1`
    repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o [^/]*$`
    tag=`curl -L \
      -H "Accept: application/vnd.github+json" \
      -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/repos/colin-i/${repo_at_gh}/releases/latest | jq .tag_name`
    tag=${tag:1:-1}
    echo ${tag}
    echo "tag=${tag}" >> $GITHUB_ENV

    here=`pwd`

    useradd bot
    cd /home
    mkdir bot
    chown bot:bot bot
    cd bot

    echo "ALL ALL=(ALL) NOPASSWD: /usr/bin/*" > /etc/sudoers.d/a  #makepkg when installing/deps / yay

    if [ -n "${{ inputs.aur }}" ]; then
     su bot -c 'git clone --depth 1 https://aur.archlinux.org/yay-bin.git'
     cd yay-bin
     su bot -c 'makepkg -i --noconfirm'
     su bot -c 'yay -Sy --noconfirm --needed ${{ inputs.aur }}'
    fi

    su bot -c 'git clone -n --depth=1 --filter=tree:0 https://github.com/colin-i/pkgbuilds'
    cd pkgbuilds
    su bot -c "git sparse-checkout set --no-cone /${name}"
    su bot -c 'git checkout'
    cd ${name}

    su bot -c 'makepkg -s --noconfirm'
    nm=`ls | grep ".*\.zst$" | grep -v debug`
    if [ -z "${{ inputs.py }}" ]; then
     if [ -z "${{ inputs.amd64 }}" ]; then
      nm2=`echo ${nm} | sed s/-any/-arch-x86_64/`
     else
      nm2=`echo ${nm} | sed s/-x86_64/-arch-x86_64/`
     fi
    else
     nm2=`echo ${nm} | sed s/-any/-arch-all/`
    fi
    mv ${nm} ${here}/${nm2}

    echo "file=${nm2}" >> $GITHUB_ENV
 - name: Upload Release Asset
   uses: svenstaro/upload-release-action@master
   with:
    file: ./${{ env.file }}
    asset_name: ${{ env.file }}
    tag: ${{ env.tag }}
 #Resource not accessible by integration ? go to https://github.com/OWNER/REPO/settings/actions and in Workflow Permissions section give actions Read and Write permissions.
