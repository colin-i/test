#!/bin/bash
set -e
# makepkg -do --skipinteg # to get

edor PKGBUILD

name=`cat PKGBUILD | grep -Po "(?<=^pkgname_atsource=).*"` || {
	name=`cat PKGBUILD | grep -Po "(?<=^pkgname=).*"`
}

rel=`cat PKGBUILD | grep -Po "(?<=^pkgrel=).*"`

#if [ -z "`git remote show | grep tags`" ]; then
#	git remote add tags https://github.com/colin-i/edor
#fi
#origin is at start at /pkgbuilds/edor/edor
#tag=`git ls-remote --tags --sort='v:refname' tags | tail -n1 | sed 's/.*\///'`
#
#cd ${name} || exit 1
#tag=`git ls-remote --tags --sort='v:refname' origin | tail -n1 | sed 's/.*\///'`
#origin here is https... . when version changed remote, was not updated local at src and also here? now if only at rel>1 when makepkg is updated also at src
#how was pkgver:
#pkgver() {
#      cd "$pkgname"
#      git ls-remote --tags --sort='v:refname' > version.txt 2>&1 #it is extra: From...
#      cat version.txt | tail -n1 | sed 's/.*\///; s/\-/./'
#      rm version.txt
#}
ptag=`cat PKGBUILD | grep -Po "(?<=^pkgver=).*"`
finaltag=${ptag}
if [ ${rel} -ne 0 ]; then
	finaltag=${finaltag}.${rel}
else
	echo rel
	exit 1
fi
tag=`echo ${ptag} | sed 's/\./\-/'`

echo name=${name} tag=${tag} finaltag=${finaltag} rel=${rel}. Enter to continue
read -t $((60*60*24))

#must apply all patches
_patches="`cat ./list`"

#if [ -z "`ls src`" ]; then

#still not working: makepkg -oA
makepkg -g
tar -xf ./*tar* -C src
cd src
gname=`find -maxdepth 1 -name "${name}*" -type d` # | grep \-` when more

to=../
tof=${to}${finaltag}
newname=${name}new

#if [ ${rel} -eq 1 ]; then
#	git clone https://github.com/colin-i/${name} --branch=${tag} --depth 1 ${newname} -n && \
#	#without -n will be detached HEAD and will not be 0 return
#	cd ${newname} && \
#	git checkout && \
#	cd ..
#else
if [ ! -e ${newname} ]; then
	git clone https://github.com/colin-i/${name} --depth 1 ${newname}
else echo is cloned
fi

if [ -n "_patches" ]; then
	cd ${gname}
	for _var in ${_patches[@]}; do
		echo ${_var}
		patch --strip=1 --input=../../${_var}
	done
	cd ../${newname}
	for _var in ${_patches[@]}; do
		echo ${_var}
		patch --strip=1 --input=../../${_var}
	done
	cd ..
#else ./cln ?  if [ "${name}" = "o" ]; then rm src/obj.txt; fi
fi

#diff --exclude=".git" -ura --new-file edor edornew --color
echo -n ${newname} | xclip -sel clip
echo modif at `xclip -sel clip -o` on clip. enter
read -t $((60*60*24))
diff --exclude=".git" -ura --new-file ${gname} ${newname} > ${tof} && exit 1 #must have some differences
echo ${finaltag} >> ${to}list
rm -rf ${newname}
#sudo rm has no perm
cd ${gname}
#patch --strip=1 --input=../${tof}
cd ../../
edor ${finaltag}
git add ${finaltag}
git add list
~/test/pkg/pb ${name} ${finaltag}
