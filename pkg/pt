#!/bin/bash

name=`cat PKGBUILD | grep -Po "(?<=^pkgname=).*"`
rel=`cat PKGBUILD | grep -Po "(?<=^pkgrel=).*"`
if [ ${rel} -ne 1 ]; then
	echo this is a subrelease rel is not 1. Enter to continue
	read -t $((60*60*24))
fi
cd src/${name} || exit 1

./clean || exit 1
#this clean is only for safety
if [ -z "`git remote show | grep tags`" ]; then
	git remote add tags https://github.com/colin-i/edor
fi
#origin is at start at /pkgbuilds/edor/edor

tag=`git ls-remote --tags --sort='v:refname' tags | tail -n1 | sed 's/.*\///'`
finaltag=`echo ${tag} | sed 's/\-/./'`
if [ ${rel} -ne 1 ]; then
	finaltag=${finaltag}.${rel}
fi
to=../patches/
tof=${to}${finaltag}
newname=${name}new

cd .. && \
if [ ${rel} -eq 1 ]; then
	git clone https://github.com/colin-i/${name} --branch=${tag} --depth 1 ${newname} -n && \
	#without -n will be detached HEAD and will not be 0 return
	cd ${newname} && \
	git checkout && \
	cd ..
else
	git clone https://github.com/colin-i/${name} --depth 1 ${newname}
fi && \
#diff --exclude=".git" -ura --new-file edor edornew --color
diff --exclude=".git" -ura --new-file edor edornew > ${tof} && exit 1 #must have some differences
echo ${finaltag} >> ${to}list && \
cd ${name} && \
patch --strip=1 --input=../${tof} && \
cd ../../ && \
~/test/pkg/re && \
cd src && \
rm -rf ${newname}
#sudo rm has no perm
