Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 audapa (1-12) jammy; urgency=medium
 .
   * version bump for rpm
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-07-08

--- audapa-1.orig/.github/workflows/appimage.yml
+++ audapa-1/.github/workflows/appimage.yml
@@ -14,6 +14,7 @@ jobs:
      run: |
       name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
       name2=Audapa
+      sname=auda
       #
       mkdir -p AppDir
       file=runtime
@@ -40,8 +41,10 @@ jobs:
        OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} amd64)
        wget ${OUTPUT}/+files/${name}_${version}_all.deb -O ${name}.deb
        dpkg -x ${name}.deb AppDir
-       OUTPUT=$(python3 lp2.py ppa pyaudioo 1-2 amd64)
-       wget ${OUTPUT}/+files/pyaudioo_1-2_all.deb -O pyaudio.deb
+       mv AppDir/usr/lib/python3.10 AppDir/usr/lib/python3 #it's ok on jammy
+       pya=1-3
+       OUTPUT=$(python3 lp2.py ppa-staging pyaudioo ${pya} amd64)
+       wget ${OUTPUT}/+files/pyaudioo_${pya}_all.deb -O pyaudio.deb
        dpkg -x pyaudio.deb AppDir
       fi
       #dependencies
@@ -93,7 +96,6 @@ jobs:
        ln -s ${pngfile} .DirIcon
       fi
       #launcher
-      sname=dico
       if [ ! -e "usr/bin/${sname}" ]; then
        echo launcher
        cd usr/bin
@@ -104,7 +106,7 @@ jobs:
       cd "\$(dirname "\$0")"
       cd ../
       unset PYTHONHOME
-      LD_LIBRARY_PATH="\$(pwd)/lib:\$(pwd)/lib/x86_64-linux-gnu" \
+      LD_LIBRARY_PATH="\$(pwd)/lib/x86_64-linux-gnu" \
        PYTHONPATH="\$(pwd)/lib/python3/dist-packages" \
        python3 bin/${sname}
       EOF
@@ -128,7 +130,7 @@ jobs:
        <summary>Audio wave file manipulator</summary>
        <description>
         <ul>
-         <li>Sound effects: loudness,spread,etc</li>
+         <li>Sound effects: loudness,spread,and edit</li>
          <li>Sound player</li>
          <li>Sound recorder</li>
         </ul>
--- /dev/null
+++ audapa-1/.github/workflows/rel.yml
@@ -0,0 +1,41 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ rbuild:
+  runs-on: ubuntu-latest
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #get the version from changelog/launchpad/input
+      tag=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
+      echo "tag=${tag}" >> $GITHUB_ENV
+   - name: Create Release
+     id: create_release
+     uses: actions/create-release@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      tag_name: ${{ env.tag }}
+      release_name: Release ${{ env.tag }}
+      draft: false
+      prerelease: false
+      #this can be undone. example: git push origin :refs/tags/1.6
+   - name: Store upload url for assets
+     run: |
+      #echo straight will not escape {}
+      a=${{ steps.create_release.outputs.upload_url }}
+      echo -n ${a} > 1.txt
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      echo "proj=${name}" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: https://uploads.github.com/repos/colin-i/test/releases/67484178/assets{?name,label}
+      asset_path: ./1.txt
+      asset_name: ${{ env.proj }}
+      asset_content_type: text/plain
--- /dev/null
+++ audapa-1/.github/workflows/rpm.yml
@@ -0,0 +1,38 @@
+on:
+ workflow_dispatch:
+  inputs:
+   ppa:
+    description: "ppa sufix"
+
+jobs:
+ rpbuild:
+  runs-on: ubuntu-22.04 #focal alien is not testing ok on docker fedora
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #get deb
+      arh=`cat debian/control | grep ^Architecture | cut -d ' ' -f2` #all
+      arh_lp=amd64
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
+      #dist=`cat debian/changelog | head -1 | grep -Poe "[^ ]*(?=;)"`
+      if [ ! -e "lp2.py" ]; then
+       wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
+      fi
+      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} ${arh_lp})
+      wget ${OUTPUT}/+files/${name}_${version}_${arh}.deb -O ${name}.deb
+      #make rpm
+      mkdir out
+      cd out
+      #sudo apt update
+      sudo apt install alien
+      sudo alien -rk ../${name}.deb
+      fname=`ls`
+      mv ${fname} ../
+      echo "file=${fname}" >> $GITHUB_ENV
+   - name: artifact
+     uses: actions/upload-artifact@v3
+     with:
+      name: rpm
+      path: ./${{ env.file }}
--- /dev/null
+++ audapa-1/.github/workflows/upapp.yml
@@ -0,0 +1,40 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ uabuild:
+  runs-on: ubuntu-latest
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #proj
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      #get up_url
+      wget https://github.com/colin-i/test/releases/download/1.5/${name} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+      #get appimage artifact
+      id=$(gh run list --workflow=appimage.yml -b $(git rev-parse --abbrev-ref HEAD) | cut -f7 | head -1)
+      repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o [^/]*$`
+      #
+      url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
+      url=${url:1:-1}
+      echo ${url}
+      curl -L -H "Authorization: token ${{ secrets.PAT }}" ${url} --output a.zip
+      #to env
+      unzip ./a.zip
+      echo "file=${name}.AppImage" >> $GITHUB_ENV
+      echo "fullfile=${name}.amd64.AppImage" >> $GITHUB_ENV
+     env:
+      #for gh
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.file }}
+      asset_name: ${{ env.fullfile }}
+      asset_content_type: application/x-executable
--- /dev/null
+++ audapa-1/.github/workflows/uprpm.yml
@@ -0,0 +1,24 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ urbuild:
+  runs-on: ubuntu-18.04
+  steps:
+   - name: Run a multi-line script
+     run: |
+      if [ -n "${{ env.init }}" ]; then
+       exit 1
+      fi
+      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.file }}
+      asset_name: ${{ env.file }}
+      asset_content_type: application/x-rpm
--- /dev/null
+++ audapa-1/arh/re
@@ -0,0 +1,13 @@
+
+#Requires:      libportaudio2\n
+#Requires:      gir1.2-gtk-4.0\nRequires:      gir1.2-glib-2.0\nRequires:      python3-gi\n
+
+ver=`cat ${1}/v2`
+name=audapa
+
+sed '/^#Requires.*CompressedFileNames.*$/i Requires:      libgtk-4.so.1\nRequires:      python3-appdirs\nRequires:      python3-pyaudio\nRequires:      python3-cairo\n' text > text2 && \
+mkdir -p ./usr/lib64/python3.10/site-packages && \
+sed "/^%doc.*copyright.*$/a %ghost \"/usr/lib64/python3.10/site-packages/${name}-${ver}.egg-info\"\n%ghost \"/usr/lib64/python3.10/site-packages/${name}\"\n" text2 > text3 && \
+printf "\n%%post\nln -s /usr/lib/python3.10/dist-packages/${name}-${ver}.egg-info /usr/lib64/python3.10/site-packages/${name}-${ver}.egg-info\nln -s /usr/lib/python3.10/dist-packages/${name} /usr/lib64/python3.10/site-packages/${name}\n" >> text3 && \
+rm text2 && \
+sudo mv text3 text
--- audapa-1.orig/setup.py
+++ audapa-1/setup.py
@@ -10,10 +10,11 @@ pkname='audapa'
 import pathlib
 HERE = pathlib.Path(__file__).parent
 README = (HERE / "info.md").read_text()
+ver=(HERE / "v2").read_text()
 
 from setuptools import setup
 setup(name=pkname,
-	version='1.0.8',
+	version=ver,
 	packages=[pkname],
 	#optionals
 	python_requires='>=3.8',
--- /dev/null
+++ audapa-1/v2
@@ -0,0 +1 @@
+1.0.10
\ No newline at end of file
