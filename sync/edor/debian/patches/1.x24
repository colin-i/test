Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 edor (1-x24) focal; urgency=medium
 .
   * mkdir for .config
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2023-04-05

--- edor-1.orig/configure.ac
+++ edor-1/configure.ac
@@ -20,7 +20,7 @@ AC_PROG_CC
 
 # Checks for header files. Checks for libraries.
 
-AC_CHECK_HEADERS(dirent.h errno.h fcntl.h poll.h stdio.h stdlib.h string.h unistd.h time.h)
+AC_CHECK_HEADERS(dirent.h errno.h fcntl.h poll.h stdio.h stdlib.h string.h unistd.h time.h sys/stat.h)
 AC_CHECK_HEADERS(curses.h, [AC_SUBST(CSS, "")], [AC_SUBST(CSS, "-Wno-padded")])
 AC_SUBST(UNW, "")
 
--- /dev/null
+++ edor-1/s/inc/main/sys_stat.h
@@ -0,0 +1,10 @@
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int mkdir(const char*, mode_t);
+
+#ifdef __cplusplus
+}
+#endif
--- edor-1.orig/s/main.c
+++ edor-1/s/main.c
@@ -41,6 +41,11 @@
 #else
 #include"inc/main/time.h"
 #endif
+#ifdef HAVE_SYS_STAT_H
+#include <sys/stat.h>
+#else
+#include"inc/main/sys_stat.h"
+#endif
 
 #include"sep.h"
 
@@ -2253,17 +2258,24 @@ static bool setfilebuf(char*s,char*cutbu
 	bool b=help_init(&s[i],exenamesize);
 	char*h=getenv("HOME");
 	if(h!=nullptr){
-		size_t l=strlen(h);
-		if(l!=0){
-			size_t info_sz=l+exenamesize+7;//plus separator dot info and null
+		size_t h_sz=strlen(h);
+		if(h_sz!=0){
+			size_t info_sz=h_sz+1+1+exenamesize+4+1; //+separator +dot +info +null
 			if(info_sz<=max_path_0){
-				sprintf(cutbuf_file,"%s%c.%sinfo",h,path_separator,&s[i]);
-				getfilebuf(cutbuf_file);//l-1
+			#define storeflname "%c.%sinfo"
+				sprintf(cutbuf_file,"%s" storeflname,h,path_separator,&s[i]);
+				getfilebuf(cutbuf_file);
 
 				const char*conf=".config";
 				size_t csz=strlen(conf)+1;//plus separator
 				if(info_sz+csz<=max_path_0){
-					sprintf(prefs_file,"%s%c%s%c.%sinfo",h,path_separator,conf,path_separator,&s[i]);
+					int dirsz=sprintf(prefs_file,"%s%c%s",h,path_separator,conf);
+					if(access(prefs_file,F_OK)==-1){
+						mkdir(prefs_file,0777);
+						//the mode of the created directory is (mode & ~umask & 0777)
+						//0 on success
+					}
+					sprintf(&prefs_file[dirsz],storeflname,path_separator,&s[i]);
 					getprefs();
 				}
 			}
