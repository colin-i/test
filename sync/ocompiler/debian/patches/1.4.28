Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-4.28) bionic; urgency=medium
 .
   * function in code fix
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-01-27

--- ocompiler-1.orig/makewin32
+++ ocompiler-1/makewin32
@@ -1,7 +1,13 @@
 
 #this is the new make for windows
 
-o ./src/windows/obj32.s inplace_reloc 0 && \
+OCOMP=o
+
+if [ -n "$1" ]; then
+OCOMP=$1
+fi
+
+${OCOMP} ./src/windows/obj32.s inplace_reloc 0 && \
 #argc argv?, no. gcc want -8 at rels and ld 0
 i686-w64-mingw32-ld -s -entry=_WinMain@16 ./src/windows/obj32.o -lmsvcrt -luser32 -lkernel32 -lcomdlg32 -lshell32 -o ./o.exe && \
 ounused ./src/windows/obj32.s.log && \
--- ocompiler-1.orig/src/files/functions/argument/comwrite.s
+++ ocompiler-1/src/files/functions/argument/comwrite.s
@@ -56,14 +56,12 @@ function takewithimm(sd ind,sd addr)
 	return err
 endfunction
 function writetake(sd takeindex,sd entry)
-	data p_is_object%ptrobject
-	Data ptrcodesec%ptrcodesec
 	Data errnr#1
-
 	sd take_loc;set take_loc entry#
 	sd stack
 	setcall stack stackbit(entry)
 	if stack==0
+		data p_is_object%ptrobject
 		if p_is_object#==(TRUE)
 			Data ptrextra%ptrextra
 			data relocoff#1
@@ -92,10 +90,16 @@ function writetake(sd takeindex,sd entry
 					Return errnr
 				EndIf
 				if importbit==0
-					setcall errnr unresLc(1,ptrcodesec,0)
-					If errnr!=(noerror)
-						Return errnr
-					EndIf
+					sd for_64
+					setcall for_64 is_for_64()
+					if for_64==(TRUE)
+						setcall errnr unresLc((-qwsz),ptrextra,0)
+					else
+						setcall errnr unresLc((-dwsz),ptrextra,0)
+					endelse
+					If errnr!=(noerror);Return errnr;EndIf
+					setcall errnr inplace_reloc_unres(#take_loc)
+					If errnr!=(noerror);Return errnr;EndIf
 				endif
 			endelse
 		endif
@@ -116,6 +120,7 @@ function writetake(sd takeindex,sd entry
 			set getfromstack 0x03
 		else;set getfromstack (moveatprocthemem);endelse
 		setcall errnr rex_w_if64();if errnr!=(noerror);return errnr;endif
+		Data ptrcodesec%ptrcodesec
 		SetCall errnr addtosec(ptrgetfromstack,sizegetfromstack,ptrcodesec)
 	endelse
 	Return errnr
--- ocompiler-1.orig/src/files/functions/pref/preffuncs.s
+++ ocompiler-1/src/files/functions/pref/preffuncs.s
@@ -266,3 +266,15 @@ function inplace_reloc(sd p_addend)
 		set p_addend# (i386_obj_default_reloc)
 	endif
 endfunction
+#er
+function inplace_reloc_unres(sd p)
+	sd p_inplace_reloc_pref%p_inplace_reloc_pref
+	if p_inplace_reloc_pref#!=(zero_reloc)
+		sd err
+		sd ptrcodesec%ptrcodesec
+		setcall err unresLc(1,ptrcodesec,0)
+		return err
+	endif
+	set p# (i386_obj_default_reloc)
+	return (noerror)
+endfunction
