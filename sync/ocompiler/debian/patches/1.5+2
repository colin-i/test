Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+2) xenial; urgency=medium
 .
   * fix fns bag
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-07-26

--- ocompiler-1.orig/src/files/functions/argument/comwrite.s
+++ ocompiler-1/src/files/functions/argument/comwrite.s
@@ -80,16 +80,16 @@ function writetake(sd takeindex,sd entry
 				#function in code is only at objects at the moment, is set only once at arg.s
 				#var# 0? is static bool
 				set var# 0
-				sd importbit
-				setcall importbit get_importbit(entry)
-				setcall take_loc get_function_value(importbit,entry)
+				sd impbit
+				setcall impbit importbit(entry)
+				setcall take_loc get_function_value(impbit,entry)
 				sd index
-				setcall index get_function_values(importbit,#take_loc,entry)
+				setcall index get_function_values(impbit,#take_loc,entry)
 				SetCall errnr adddirectrel_base(ptrextra,relocoff,index,take_loc)
 				If errnr!=(noerror)
 					Return errnr
 				EndIf
-				if importbit==0
+				if impbit==0
 					setcall errnr unresReloc(ptrextra)
 					If errnr!=(noerror);Return errnr;EndIf
 					setcall errnr inplace_reloc_unres(#take_loc)
--- ocompiler-1.orig/src/files/functions/dataassign.s
+++ ocompiler-1/src/files/functions/dataassign.s
@@ -253,7 +253,7 @@ Function dataassign(sd ptrcontent,sd ptr
 				return err
 			EndIf
 
-			setcall importbittest get_importbit(pointer)
+			setcall importbittest importbit(pointer)
 			setcall value get_function_value(importbittest,pointer)
 
 			Data ptrobject%ptrobject
@@ -336,7 +336,7 @@ function undefinedvar_fn()
 endfunction
 
 #import bit
-function get_importbit(sd pointer)
+function importbit(sd pointer)
 	Add pointer (maskoffset)
 	sd value
 	set value pointer#
@@ -344,8 +344,8 @@ function get_importbit(sd pointer)
 	return value
 endfunction
 #value
-function get_function_value(sd importbit,sd pointer)
-	if importbit!=0
+function get_function_value(sd impbit,sd pointer)
+	if impbit!=0
 		#imports
 		return pointer#
 	endif
@@ -355,8 +355,8 @@ function get_function_value(sd importbit
 	return value
 endfunction
 #relocindex
-function get_function_values(sd importbit,sd p_value,sd pointer)
-	If importbit==0
+function get_function_values(sd impbit,sd p_value,sd pointer)
+	If impbit==0
 		#code
 		return (codeind)
 	endif
--- ocompiler-1.orig/src/files/functions/scopes.s
+++ ocompiler-1/src/files/functions/scopes.s
@@ -1,7 +1,8 @@
 
 value scopesbag#1
-data *scopesbag_size#1
+data scopesbag_size#1
 const scopesbag_ptr^scopesbag
+const scopesbag_size_ptr^scopesbag_size
 function scopes_free()
 	sv s%scopesbag_ptr
 	if s#!=(NULL)
@@ -109,13 +110,16 @@ function scopes_store(sv scope)
 endfunction
 
 function scopes_searchinvars(sd p_err,sv p_name)
-	sv ptrfunctions%ptrfunctions
+	sd psz%scopesbag_size_ptr
+	#there are imports after fns with the two pass, and now can get number of local fns, but importbit can be rethinked for something else
+	sd sz;set sz psz#
+	div sz :
 	sd i=0
+
+	sv ptrfunctions%ptrfunctions
 	sd fns
-	sv last
-	call getcontandcontReg(ptrfunctions,#fns,#last)
-	add last fns
-	while fns!=last
+	call getcont(ptrfunctions,#fns)
+	while i!=sz
 		add fns (nameoffset)
 		sd data
 		sd scope
