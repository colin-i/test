Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+13) xenial; urgency=medium
 .
   * impXorfnX flag reset
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-08-08

--- ocompiler-1.orig/src/files/functions/actions/fn.s
+++ ocompiler-1/src/files/functions/actions/fn.s
@@ -192,8 +192,8 @@ Function parsefunction(data ptrcontent,d
 		EndIf
 		call entryscope()
 	Else
-		sd p_b;setcall p_b is_for_64_is_impX_or_fnX_p_get()
-		if p_b#==(FALSE)
+		sd bool;setcall bool is_for_64_is_impX_or_fnX_get()
+		if bool==(FALSE)
 			if sz!=zero
 				SetCall err enumcommas(ptrcontent,ptrsize,sz,declare,(TRUE)) #there are 3 more arguments but are not used
 			endif
@@ -276,10 +276,11 @@ function write_function_call(sd ptrdata,
 	sd err
 	Data code%ptrcodesec
 
-	sd b;setcall b is_for_64_is_impX_or_fnX_get()
-	if b==(TRUE)
+	sd pb;setcall pb is_for_64_is_impX_or_fnX_p_get()
+	if pb#==(TRUE)
 		setcall err function_call_64(is_callex)
 		If err!=(noerror);Return err;EndIf
+		set pb# (FALSE) #can be at start but intern function are more popular and there is also a test in addition
 	endif
 
 	Data ptrfnmask#1
