Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+66) jammy; urgency=medium
 .
   * fix win builds for sd^local
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2023-01-07

--- ocompiler-1.orig/src/files/functions/dataassign.s
+++ ocompiler-1/src/files/functions/dataassign.s
@@ -324,19 +324,19 @@ Function dataassign(sd ptrcontent,sd ptr
 			if punitsize==(NULL)
 				#init -1, 0 is local function in the right
 				if importbittest==0
-					if stack==false
-						sd p_inplace_reloc_pref%p_inplace_reloc_pref
-						if p_inplace_reloc_pref#!=(zero_reloc)
-							#at addend 0 at data must not pe resolved
+					sd p_inplace_reloc_pref%p_inplace_reloc_pref
+					#at addend 0 at data/code must not pe resolved
+					if p_inplace_reloc_pref#!=(zero_reloc)
+						if stack==false
 							setcall err unresLc(0,ptrdatasec,0)
+						else
+							#it's only an imm to reg
+							sd stack_off;setcall stack_off reloc64_offset((rampadd_value_off))
+							setcall err unresLc(stack_off,ptrcodesec,0)
+						endelse
+						if err!=(noerror)
+							return err
 						endif
-					else
-						#it's only an imm to reg
-						sd stack_off;setcall stack_off reloc64_offset((rampadd_value_off))
-						setcall err unresLc(stack_off,ptrcodesec,0)
-					endelse
-					if err!=(noerror)
-						return err
 					endif
 				endif
 				#addtocode(#test,1,code) cannot add to code for test will trick the next compiler, entry is started,will look like a bug
