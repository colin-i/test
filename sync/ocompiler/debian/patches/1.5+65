Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+65) jammy; urgency=medium
 .
   * fix data^f at inplace 0
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-12-27

--- ocompiler-1.orig/arh/pub
+++ ocompiler-1/arh/pub
@@ -37,7 +37,7 @@ sed -i '1s/)/x)/' debian/changelog && \
 ~/test/publp2 && \
 git restore debian/changelog && \
 git restore debian/files && \
-git diff
+echo git diff = `git diff && echo $?`
 #is something wrong with copy package and rebuild (maybe same with copy-package without -b)
 #restore after last lp where inside publp2 will check version
 #the xenial ostrip is not working, but was ok on edb testing here on jammy
--- ocompiler-1.orig/src/files/functions/actions/enumcomma.s
+++ ocompiler-1/src/files/functions/actions/enumcomma.s
@@ -16,15 +16,21 @@ function writevar(sd ptrvalue,sd unitsiz
 				#data
 				Data ptraddresses%ptraddresses
 				Data relocoff=0
+
 				SetCall err adddirectrel_base(ptraddresses,relocoff,relindex,ptrvalue#)
 				If err!=noerr;Return err;EndIf
 				#data a^dataB
 				if relindex==(codeind)
 					#data^functionReloc
+					#this is at relocs not at data
 					setcall err unresReloc(ptraddresses)
 					If err!=noerr;Return err;EndIf
+					#ptrvalue# it is an addresses value (nothing related to the real value)
+					#	that will be resolved and overwritten at resolve.s
 				endif
+
 				call inplace_reloc(ptrvalue)
+
 				#endif
 				SetCall err addtosec(ptrvalue,(dwsz),ptrdatasec)
 				If err==(noerror)
--- ocompiler-1.orig/src/files/functions/dataassign.s
+++ ocompiler-1/src/files/functions/dataassign.s
@@ -324,9 +324,12 @@ Function dataassign(sd ptrcontent,sd ptr
 			if punitsize==(NULL)
 				#init -1, 0 is local function in the right
 				if importbittest==0
-				#and no problems if inplace_reloc is 0 there
 					if stack==false
-						setcall err unresLc(0,ptrdatasec,0)
+						sd p_inplace_reloc_pref%p_inplace_reloc_pref
+						if p_inplace_reloc_pref#!=(zero_reloc)
+							#at addend 0 at data must not pe resolved
+							setcall err unresLc(0,ptrdatasec,0)
+						endif
 					else
 						#it's only an imm to reg
 						sd stack_off;setcall stack_off reloc64_offset((rampadd_value_off))
--- ocompiler-1.orig/src/files/functions/global/funcs.s
+++ ocompiler-1/src/files/functions/global/funcs.s
@@ -22,6 +22,7 @@ function localResolve(sd unrLc,sd unrLcR
 		add cont offset
 
 		call getcont(fns,ptr_funcs)
+
 		add funcs cont#
 		sd value
 		set value funcs#
--- ocompiler-1.orig/src/files/functions/pref/preffuncs.s
+++ ocompiler-1/src/files/functions/pref/preffuncs.s
@@ -2,11 +2,6 @@
 data nul_res_pref#1
 const p_nul_res_pref^nul_res_pref
 
-data inplace_reloc_pref#1
-const p_inplace_reloc_pref^inplace_reloc_pref
-const zero_reloc=0
-const addend_reloc=1
-
 data ignore_format_so#1
 const p_ignore_format_so^ignore_format_so
 
--- ocompiler-1.orig/src/files/headers/header.h
+++ ocompiler-1/src/files/headers/header.h
@@ -388,6 +388,11 @@ const nr_of_prefs_jumper=nr_of_prefs*:
 vdata nr_of_prefs_pointers#nr_of_prefs;vdata nr_of_prefs_strings#nr_of_prefs
 const nr_of_prefs_pointers_p^nr_of_prefs_pointers;const nr_of_prefs_strings_p^nr_of_prefs_strings
 
+data inplace_reloc_pref#1
+const p_inplace_reloc_pref^inplace_reloc_pref
+const zero_reloc=0
+const addend_reloc=1
+
 data pref_reloc_64#1
 const p_pref_reloc_64^pref_reloc_64
 
