Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+12) xenial; urgency=medium
 .
   * fix 64 0 arg call
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-08-08

--- ocompiler-1.orig/arh/pub
+++ ocompiler-1/arh/pub
@@ -19,4 +19,4 @@
 ~/test/lp && \
 ~/test/lp x && \
 ~/test/keyring && \
-~/test/del x
+~/test/del x ${2}
--- ocompiler-1.orig/src/files/functions/actions/fn.s
+++ ocompiler-1/src/files/functions/actions/fn.s
@@ -183,16 +183,23 @@ Function parsefunction(data ptrcontent,d
 		return err
 	endif
 
-	If sz!=zero
-		#declare is bool
-		if declare==true
+	If declare==true
+		If sz!=zero
 			SetCall err enumcommas(ptrcontent,ptrsize,sz,declare,fnnr) #there are 3 more arguments but are not used
-		else
-			sd p_b;setcall p_b is_for_64_is_impX_or_fnX_p_get()
-			if p_b#==(FALSE)
+			if err!=noerr
+				return err
+			endif
+		EndIf
+		call entryscope()
+	Else
+		sd p_b;setcall p_b is_for_64_is_impX_or_fnX_p_get()
+		if p_b#==(FALSE)
+			if sz!=zero
 				SetCall err enumcommas(ptrcontent,ptrsize,sz,declare,(TRUE)) #there are 3 more arguments but are not used
-			else
-				sd p;setcall p nr_of_args_64need_p_get();set p# 0
+			endif
+		else
+			sd p;setcall p nr_of_args_64need_p_get();set p# 0 #also at 0 at win will be sub all shadow space
+			if sz!=zero
 				set content ptrcontent#
 				set size ptrsize#
 				SetCall err enumcommas(ptrcontent,ptrsize,sz,declare,(FALSE)) #there are 3 more arguments but are not used
@@ -204,21 +211,17 @@ Function parsefunction(data ptrcontent,d
 						SetCall err enumcommas(ptrcontent,ptrsize,sz,declare,(TRUE)) #there are 3 more arguments but are not used
 					endif
 				endif
+			else
+				setcall err stack_align(0)
 			endelse
 		endelse
-		If err!=noerr
-			Return err
-		EndIf
-	EndIf
-
-	If declare==true
-		call entryscope()
-	else
-		setcall err write_function_call(ptrdata,boolindirect,(FALSE))
-		If err!=noerr
-			Return err
+		If err==noerr
+			setcall err write_function_call(ptrdata,boolindirect,(FALSE))
+			if err!=noerr
+				return err
+			endif
 		EndIf
-	endelse
+	EndElse
 	Call stepcursors(ptrcontent,ptrsize)
 	Return noerr
 EndFunction
