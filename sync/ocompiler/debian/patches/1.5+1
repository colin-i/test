Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+1) xenial; urgency=medium
 .
   * scopes
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-07-26

--- ocompiler-1.orig/.github/workflows/rpm.yml
+++ ocompiler-1/.github/workflows/rpm.yml
@@ -42,9 +42,9 @@ jobs:
       sudo alien -rk ../${name}.deb
       #fname first - to .
       fname=`ls`
-      fnamefinal=`echo ${fname} | sed "s/-/./"`
-      mv ${fname} ../${fnamefinal}
-      echo "file=${fnamefinal}" >> $GITHUB_ENV
+      #let prog-ver fnamefinal=`echo ${fname} | sed "s/-/./"`
+      mv ${fname} ../${fname}
+      echo "file=${fname}" >> $GITHUB_ENV
       #get up_url
       wget https://github.com/colin-i/test/releases/download/1.5/${name} -O 1.txt
       echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
--- ocompiler-1.orig/o.html
+++ ocompiler-1/o.html
@@ -31,13 +31,15 @@
 
 <h3><a href="#usingconditions">IX. Using conditions</a></h3>
 
-<h3><a href="#includingfiles">X. Including files</a></h3>
+<h3><a href="#looping">X. Looping</a></h3>
 
-<h3><a href="#exec">XI. Creating executable files</a></h3>
+<h3><a href="#includingfiles">XI. Including files</a></h3>
 
-<h3><a href="#object">XII. Creating object files</a></h3>
+<h3><a href="#exec">XII. Creating executable files</a></h3>
 
-<h3><a href="#otheroperations">XIII. Other operations</a></h3>
+<h3><a href="#object">XIII. Creating object files</a></h3>
+
+<h3><a href="#otheroperations">XIV. Other operations</a></h3>
 
 
 
@@ -275,7 +277,7 @@
 	</p>
 <br>
 	<p>
-	Operations can be performed at declarations with arithmetic (+,-,*,/,%,$) and bitwise (&,|,^,~,<,>) signs. - and ~ can prefix a number/constant.
+	Operations can be performed at declarations with arithmetic (+,-,*,/,%,$) and bitwise (&,|,^,~,&lt;,&gt;) signs. - and ~ can prefix a number/constant.
 	<br>
 	Example:
 	<br>
@@ -609,6 +611,20 @@
 	<tr><td>hEx 144;set b b#D^</td><td>#cast string to data</td></tr>
 	<tr><td>heX 144;inc b#V^</td><td>#and a one arg cast</td></tr>
 	</table>
+
+	Static variables can be used in all scopes:
+
+	<a class="code">
+        Format Elf<br>
+        Data a=3<br>
+        Function test()<br>
+&emsp;	Data b=3<br>
+&emsp;	Add b main.a<br>
+        EndFunction<br>
+        Entry main()<br>
+&emsp;	Call test()<br>
+&emsp;	Add a test.b<br>
+&emsp;	Exit a #9<br></a>
 </p>
 <h3><a name="usingfunctions">VII. Using functions</a></h3>
 <p>
@@ -722,7 +738,16 @@
         EndElseIf</a>
 	</p>
 </p>
-<h3><a name="includingfiles">X. Including files</a></h3>
+<h3><a name="looping">XI. Looping</a></h3>
+<p>
+	<a class="code">
+	sd a=3<br>
+	sd b=0<br>
+	while b&lt;a<br>
+&emsp;	inc b<br>
+	endwhile</a>
+</p>
+<h3><a name="includingfiles">XI. Including files</a></h3>
 <p>
 	The program can be formed with multiple files using the <b>Include</b> command.
 	If compiling for multiple oses add a second path at <b>INCLUDE</b>;
@@ -735,7 +760,7 @@
         Include "files\\headers_win.h" "files\\headers_lin.h"</a>
 	</p>
 </p>
-<h3><a name="exec">XI. Creating executable files</a></h3>
+<h3><a name="exec">XII. Creating executable files</a></h3>
 <p>
 	Exe files for windows will be created by default. Executable and Linking Format (ELF) files can be created for Unix - System V, operable on linux platforms. <i>format elf</i> will override the default <i>format exe</i>.
 	<p>
@@ -758,7 +783,7 @@
         #linux sys_exit with the argument 1</a>
 	</p>
 </p>
-<h3><a name="object">XII. Creating object files</a></h3>
+<h3><a name="object">XIII. Creating object files</a></h3>
 <p>
   <div>
 	Object files can be created that have elf relocatable format. The format is <b>ElfObj</b>.
@@ -807,7 +832,7 @@
 	</p>
   </div>
 </p>
-<h3><a name="otheroperations">XIII. Other operations</a></h3>
+<h3><a name="otheroperations">XIV. Other operations</a></h3>
 <p>
 	Other commands that comes with the language.
 	<br>
--- ocompiler-1.orig/readme.md
+++ ocompiler-1/readme.md
@@ -15,7 +15,7 @@ On linux distributions, <i>.AppImage</i>
 \
 On Fedora, <i>.rpm</i> file from [releases](https://github.com/colin-i/o/releases).
 ```sh
-yum install ocompiler.*.*.rpm
+yum install ocompiler-*.*.rpm
 ```
 \
 On Windows, <i>.windows.zip</i> file from [releases](https://github.com/colin-i/o/releases).
--- ocompiler-1.orig/src/files/_/cimports.h
+++ ocompiler-1/src/files/_/cimports.h
@@ -2,6 +2,7 @@
 
 
 Import "realloc" realloc
+Import "malloc" malloc
 Import "free" free
 Import "sprintf" sprintf
 Import "memcpy" memtomem
--- ocompiler-1.orig/src/files/actions/main.s
+++ ocompiler-1/src/files/actions/main.s
@@ -113,6 +113,8 @@ While includesReg!=null
 				set skipfortwoparse 1
 				add includesReg sizeofincludeset
 				set twoparse 1
+
+				setcall errormsg scopes_alloc(el_or_e)
 			EndElse
 		endif
 	endif
--- ocompiler-1.orig/src/files/actions/main/index/endfunction.s
+++ ocompiler-1/src/files/actions/main/index/endfunction.s
@@ -16,7 +16,7 @@ Else
 
 			SetCall errormsg addtoCode_set_programentrypoint(ptrreturn,sizereturn)
 			If errormsg==noerr
-				Call warnings(false,includes,nameofstoffile,#errormsg)
+				setcall errormsg scopes_store(functionTagIndex)
 				If errormsg==noerr
 					Set i zero
 					While i!=numberofvariables
@@ -28,11 +28,12 @@ Else
 						Set indexptr# zero
 						Inc i
 					EndWhile
-				endIf
+					inc functionTagIndex
+				endif
 			EndIf
 		EndIf
 	endif
 	If errormsg==noerr
 		Set innerfunction false
 	endif
-EndElse
\ No newline at end of file
+EndElse
--- ocompiler-1.orig/src/files/actions/main/index/function.s
+++ ocompiler-1/src/files/actions/main/index/function.s
@@ -14,7 +14,9 @@ ElseIf programentrypoint!=codesecReg
 	EndIf
 	Set errormsg allocerrormsg
 Else
-	sd el_or_e=FALSE;if subtype==(cENTRY);set el_or_e (TRUE);elseif subtype==(cENTRYLINUX);set el_or_e (TRUE);endelseif
+	if subtype==(cENTRY);set el_or_e (TRUE)
+	elseif subtype==(cENTRYLINUX);set el_or_e (TRUE)
+	else;set el_or_e (FALSE);endelse
 	If el_or_e==(TRUE)
 		Data referencebit=referencebit
 		Set objfnmask referencebit
--- ocompiler-1.orig/src/files/actions/terminations.s
+++ ocompiler-1/src/files/actions/terminations.s
@@ -18,7 +18,7 @@ EndIf
 
 #verify preferences
 sd err_bool
-setCall err_bool warnings(true,includes,nameofstoffile,#errormsg)
+setCall err_bool warnings(#errormsg,el_or_e)
 If errormsg!=noerr
 	if err_bool==(TRUE)
 		Call msgerrexit(errormsg)
--- ocompiler-1.orig/src/files/functions.s
+++ ocompiler-1/src/files/functions.s
@@ -48,3 +48,4 @@ Include "./functions/dataassign.s"
 Include "./functions/enumbags.s"
 Include "./functions/import.s"
 Include "./functions/override.s"
+Include "./functions/scopes.s"
--- ocompiler-1.orig/src/files/functions/actions/fn.s
+++ ocompiler-1/src/files/functions/actions/fn.s
@@ -221,7 +221,7 @@ function prepare_function_call(sd pconte
 			If p_data#==0
 				setcall p_data# vars_number(pcontent#,sz,(stackvaluenumber))
 				If p_data#==0
-					Chars unfndeferr="Undefined function/data name."
+					Chars unfndeferr="Undefined function/data call."
 					Str ptrunfndef^unfndeferr
 					Return ptrunfndef
 				EndIf
--- ocompiler-1.orig/src/files/functions/argument/arg.s
+++ ocompiler-1/src/files/functions/argument/arg.s
@@ -115,31 +115,60 @@ Function getarg(data ptrcontent,data ptr
 			setcall prefix prefix_bool()
 			set prefix# 1
 		else
-			#lower than argsize in case of a prefix
 			sd argsize_filter
-			set argsize_filter argsize
-
-			#at object var/fn,non-object var
-			sd undvar_err
-			sd possible_err
-			setcall undvar_err undefinedvariable()
-			set possible_err undvar_err
-			set ptrdata# 0
-
 			if content#==(pointerascii)
 				#prefix
 				setcall prefix prefix_bool()
 				set prefix# 1
 				inc content
+				set argsize_filter argsize
 				dec argsize_filter
+				SetCall errnr varsufix(content,argsize_filter,ptrdata,ptrlow,ptrsufix)
+				if errnr!=(noerror)
+					return errnr
+				endif
 			else
 				data ptrobject%ptrobject
-				if ptrobject#==1
+				data ptrfunctions%ptrfunctions
+				sd container_sz
+				setcall container_sz valinmem(content,argsize,(asciidot))
+				if container_sz!=argsize
+					#if is a dot
+					sd inter
+					#setcall inter vars(content,container_sz,ptrfunctions)
+					sd pos=0
+					setcall inter vars_core_ref_scope(content,container_sz,ptrfunctions,(NULL),(TRUE),#pos)
+					if inter==(NULL)
+						setcall errnr undefinedvar_fn()
+						return errnr
+					endif
+					inc container_sz
+					set argsize_filter argsize
+					call advancecursors(#content,#argsize_filter,container_sz)
+					#
+					sd scope
+					setcall scope scopes_get_scope(pos)
+					SetCall errnr varsufix_ex(content,argsize_filter,ptrdata,ptrlow,ptrsufix,scope)
+					if errnr!=(noerror)
+						return errnr
+					endif
+					sd test;setcall test stackbit(ptrdata#)
+					if test!=0
+						return "Stack variables are not relevant for scope.variable."
+					endif
+				elseif ptrobject#==1
 					#verify for function
-					data ptrfunctions%ptrfunctions
 					setcall ptrdata# vars(content,argsize,ptrfunctions)
 					if ptrdata#==0
-						setcall possible_err undefinedvar_fn()
+						SetCall errnr varsufix(content,argsize,ptrdata,ptrlow,ptrsufix)
+						if errnr!=(noerror)
+							sd undvar_err
+							setcall undvar_err undefinedvariable()
+							if errnr==undvar_err
+								setcall errnr undefinedvar_fn()
+							endif
+							return errnr
+						endif
 					else
 						set ptrlow# (FALSE)
 						set ptrsufix# (FALSE)
@@ -150,17 +179,13 @@ Function getarg(data ptrcontent,data ptr
 						setcall prefix prefix_bool()
 						set prefix# 1
 					endelse
-				endif
-			endelse
-			if ptrdata#==0
-				SetCall errnr varsufix(content,argsize_filter,ptrdata,ptrlow,ptrsufix)
-				if errnr!=(noerror)
-					if errnr==undvar_err
-						set errnr possible_err
+				else
+					SetCall errnr varsufix(content,argsize,ptrdata,ptrlow,ptrsufix)
+					if errnr!=(noerror)
+						return errnr
 					endif
-					return errnr
-				EndIf
-			endif
+				endelse
+			endelse
 		endelse
 	endelse
 	#
@@ -311,4 +336,4 @@ function prefix_bool()
 	data value#1
 	data p^value
 	return p
-endfunction
\ No newline at end of file
+endfunction
--- ocompiler-1.orig/src/files/functions/commons/base.s
+++ ocompiler-1/src/files/functions/commons/base.s
@@ -1,30 +1,45 @@
 
-#more situations: getmax getptrmax getptrcont
-
-Function getcont(data ptrstrucutre,data ptrcontainer)
+Function getcont(data ptrstructure,data ptrcontainer)
 	Data offset=containersdataoffset
-	Add ptrstrucutre offset
-	Set ptrcontainer# ptrstrucutre#
+	Add ptrstructure offset
+	Set ptrcontainer# ptrstructure#
 EndFunction
-
-Function getptrcontReg(data ptrstrucutre,data ptrptrcontainerReg)
-	Data offset=containersdataRegoffset
-	Add ptrstrucutre offset
-	Set ptrptrcontainerReg# ptrstrucutre
+function setcont(sv ptrstructure,sd value)
+	add ptrstructure (containersdataoffset)
+	set ptrstructure# value
+endfunction
+Function getptrcont(sv ptrstructure,sv ptrptrcontainer)
+	add ptrstructure (containersdataoffset)
+	set ptrptrcontainer# ptrstructure
 EndFunction
 
-Function getcontReg(data ptrstrucutre,data ptrcontainerReg)
+Function getcontReg(data ptrstructure,data ptrcontainerReg)
 	Data ptrcReg#1
 	Data ptrptrcReg^ptrcReg
-	Call getptrcontReg(ptrstrucutre,ptrptrcReg)
+	Call getptrcontReg(ptrstructure,ptrptrcReg)
 	Set ptrcontainerReg# ptrcReg#
 EndFunction
+function setcontReg(sd ptrstructure,sd value)
+	add ptrstructure (containersdataRegoffset)
+	set ptrstructure# value
+endfunction
+Function getptrcontReg(data ptrstructure,data ptrptrcontainerReg)
+	Data offset=containersdataRegoffset
+	Add ptrstructure offset
+	Set ptrptrcontainerReg# ptrstructure
+EndFunction
+
+Function getcontMax(sd ptrstructure,sd ptrcontainerMax)
+	set ptrcontainerMax# ptrstructure#
+EndFunction
+function setcontMax(sd ptrstructure,sd value)
+	set ptrstructure# value
+endfunction
 
 Function getcontandcontReg(data ptrstrucutre,data ptrcontainer,data ptrcontainerReg)
 	Call getcontReg(ptrstrucutre,ptrcontainerReg)
 	Call getcont(ptrstrucutre,ptrcontainer)
 EndFunction
-
 Function getcontplusReg(data ptrstrucutre,data ptrcontainer)
 	Call getcont(ptrstrucutre,ptrcontainer)
 	sd r
@@ -63,6 +78,14 @@ Function getstructcont(data typenumber)
 	Add dest offset
 	Return dest
 EndFunction
+#pdata
+Function getstructcont_scope(sd typenumber,sd scope)
+	sd offset
+	set offset (sizeofcontainer)
+	mult offset typenumber
+	add offset scope
+	return offset
+EndFunction
 
 #return virtual value
 Function congruentmoduloatsegments(data virtual,data offset,data modulo,data newbytes)
--- ocompiler-1.orig/src/files/functions/commons/comfn.s
+++ ocompiler-1/src/files/functions/commons/comfn.s
@@ -16,6 +16,16 @@ Function memrealloc(data ptrpointer,data
 	Data noerr=noerror
 	Return noerr
 EndFunction
+#err
+Function mem_alloc(sd size,sv p)
+	sd mem
+	setcall mem malloc(size)
+	if mem!=(NULL)
+		set p# mem
+		return (noerror)
+	endif
+	return "malloc error"
+EndFunction
 
 #err
 Function memoryalloc(data pathsize,data memptr)
--- ocompiler-1.orig/src/files/functions/commons/vars.s
+++ ocompiler-1/src/files/functions/commons/vars.s
@@ -15,8 +15,14 @@ function warn_or_log(sd type,sd return_v
 	return return_value
 endfunction
 
+function vars_core_ref(ss content,sd size,sv ptrstructure,sv warningssearch,sd setref)
+	sd data
+	setcall data vars_core_ref_scope(content,size,ptrstructure,warningssearch,setref,(NULL))
+	return data
+endfunction
+
 #null or a pointer to the constant/variable/function
-function vars_core_ref(str content,data size,data ptrstructure,data warningssearch,sd setref)
+function vars_core_ref_scope(ss content,sd size,sv ptrstructure,data warningssearch,sd setref,sd position_pointer)
 	Data zero=0
 	Data varsize#1
 	Data dwlen=dwsz
@@ -92,6 +98,9 @@ function vars_core_ref(str content,data
 					Return entrypoint
 				EndIf
 			EndIf
+			if position_pointer!=(NULL)
+				inc position_pointer#
+			endif
 		EndIf
 		Add varsize blen
 		Add container varsize
@@ -141,8 +150,7 @@ Function searchinvars(str content,data s
 	Data null=NULL
 	Data nrofvars=numberofvars
 
-	Set i null
-
+	Set i 0
 	While i<nrofvars
 		SetCall ptrcontainer getstructcont(i)
 		SetCall data varscore(content,size,ptrcontainer,warningssearch)
@@ -153,13 +161,44 @@ Function searchinvars(str content,data s
 				EndIf
 			EndIf
 			Return data
-		Else
-			Inc i
-		EndElse
+		endIf
+		Inc i
 	EndWhile
 	Return null
 EndFunction
 
+#null or a pointer to the variable
+Function searchinvars_scope(ss content,sd size,sd ptrtype,sd scope)
+	sd data
+	sd ptrcontainer
+	sd i=0
+	While i<(numberofvars)
+		SetCall ptrcontainer getstructcont_scope(i,scope)
+		SetCall data varscore(content,size,ptrcontainer,(NULL))
+		If data!=(NULL)
+			Set ptrtype# i
+			Return data
+		endIf
+		Inc i
+	EndWhile
+	Return (NULL)
+EndFunction
+#null or a pointer to the variable
+Function searchinvars_scope_warn(sd warningssearch,sd scope)
+	sd data
+	sd ptrcontainer
+	sd i=0
+	While i<(numberofvars)
+		SetCall ptrcontainer getstructcont_scope(i,scope)
+		SetCall data varscore((NULL),0,ptrcontainer,warningssearch)
+		If data!=(NULL)
+			Return data
+		endIf
+		Inc i
+	EndWhile
+	Return (NULL)
+EndFunction
+
 #searchinvars
 Function strinvars(str content,data size,data ptrtype)
 	Data pointer#1
@@ -180,7 +219,14 @@ const cast_data=asciiD
 const cast_string=asciiS
 
 #err
-Function varsufix(str content,data size,data ptrdata,data ptrlow,data ptrsufix)
+Function varsufix(ss content,sd size,sd ptrdata,sd ptrlow,sd ptrsufix)
+	sd err
+	setcall err varsufix_ex(content,size,ptrdata,ptrlow,ptrsufix,(NULL))
+	return err
+endfunction
+
+#err
+function varsufix_ex(ss content,sd size,sd ptrdata,sd ptrlow,sd ptrsufix,sd scope)
 	Data type#1
 	Data ptrtype^type
 	Data false=FALSE
@@ -194,7 +240,11 @@ Function varsufix(str content,data size,
 	Data null=NULL
 	Data data#1
 
-	SetCall data strinvars(content,size,ptrtype)
+	if scope==(NULL)
+		SetCall data strinvars(content,size,ptrtype)
+	else
+		setcall data searchinvars_scope(content,size,ptrtype,scope)
+	endelse
 	If data==null
 		SetCall err undefinedvariable()
 		Return err
--- ocompiler-1.orig/src/files/functions/enumbags.s
+++ ocompiler-1/src/files/functions/enumbags.s
@@ -2,45 +2,37 @@
 
 #err
 Function enumbags(data declare)
-	Data true=TRUE
-
-	Data containersbegin%containersbegin
-	Data containerssize=containerssize
-	Data pointer#1
-	Data size#1
-	Data dsz=dwsz
-	Data maxalloc#1
-	Data noerr=noerror
-
-	Data value#1
-	Data zero=0
-
-	Set pointer containersbegin
-	Set size containerssize
-	While size>zero
-		Set maxalloc pointer#
-		Add pointer dsz
-		Sub size dsz
-		If declare==true
-			Data err#1
-			SetCall err memoryalloc(maxalloc,pointer)
-			If err!=noerr
+	sd pointer%containersbegin
+	sd cursor=containerssize
+	add cursor pointer
+	While pointer!=cursor
+		If declare==(TRUE)
+			sd err;setcall err enumbags_alloc(pointer)
+			If err!=(noerror)
 				Return err
 			EndIf
 		Else
-			Set value pointer#
-			If value!=zero
-				Call free(value)
-			EndIf
+			call enumbags_free(pointer)
 		EndElse
-		Add pointer dsz
-		Sub size dsz
-		Add pointer dsz
-		Sub size dsz
+		add pointer (sizeofcontainer)
 	EndWhile
-	Return noerr
+	Return (noerror)
 EndFunction
 
+#err
+function enumbags_alloc(sd container)
+	sd max;call getcontMax(container,#max)
+	sd pcont;call getptrcont(container,#pcont)
+	sd err;setcall err mem_alloc(max,pcont)
+	return err
+endfunction
+function enumbags_free(sd container)
+	sd cont;call getcont(container,#cont)
+	If cont!=(NULL)
+		Call free(cont)
+	EndIf
+endfunction
+
 #no return
 Function freeclose()
 	Data value#1
@@ -72,6 +64,8 @@ Function freeclose()
 	endif
 
 	call platform_free()
+
+	call scopes_free()
 EndFunction
 
 Function msgerrexit(data msg)
--- ocompiler-1.orig/src/files/functions/pref/preffuncs.s
+++ ocompiler-1/src/files/functions/pref/preffuncs.s
@@ -11,44 +11,53 @@ data ignore_format_so#1
 const p_ignore_format_so^ignore_format_so
 
 #bool for err2
-Function warnings(sd searchInAll,sd includes,sd nameoffset,sd p_err)
+Function warnings(sd p_err,sd has_named_entry)
 	Data warningsboolptr%ptrwarningsbool
 	Data warningsbool#1
-	Data null=NULL
-	Data true=TRUE
-
 	Set warningsbool warningsboolptr#
-	If warningsbool==true
-		Data var#1
-		SetCall var searchinvars(null,null,null,p_err)
-		If var==null
-			If searchInAll==true
+	If warningsbool==(TRUE)
+		sd fn_name
+		sd var
+		setcall var scopes_searchinvars(p_err,#fn_name)
+		If var==(NULL)
+			if has_named_entry==(FALSE)
+				SetCall var searchinvars((NULL),0,(NULL),p_err)
+				if var!=(NULL)
+					set fn_name "(entry)"
+				endif
+			endif
+			if var==(NULL)
 				data ptrcodeFnObj%ptrcodeFnObj
 				if ptrcodeFnObj#!=(ignore_warn)
 					Data functionsptr%ptrfunctions
-					SetCall var varscore(null,null,functionsptr,p_err)
+					SetCall var varscore((NULL),0,functionsptr,p_err)
+					if var!=(NULL)
+						set fn_name "(function)"
+					endif
 				endif
-				if var==null
+				if var==(NULL)
 					sd cb;setcall cb constants_bool((const_warn_get))
 					if cb!=(ignore_warn)
 						data constantsptr%ptrconstants
-						SetCall var varscore(null,null,constantsptr,p_err)
+						SetCall var varscore((NULL),0,constantsptr,p_err)
+						if var!=(NULL)
+							set fn_name "(constant)"
+						endif
 					endif
 				endif
 			EndIf
 		EndIf
-		If var!=null
+		If var!=(NULL)
 			if p_err#==(noerror)
-				Chars unrefformat="Unreferenced variable/function/constant: %s. Scope Termination File: %s. To disable this warning see '.ocompiler.txt'"
+				Chars unrefformat="Unreferenced variable/function/constant: %s. Parent: %s."
 				Str ptrunrefformat^unrefformat
 
 				Data printbuffer#1
 
 				Data fileoff=nameoffset
 				Add var fileoff
-				Add includes nameoffset
-				SetCall printbuffer printbuf(ptrunrefformat,var,includes,0)
-				If printbuffer!=null
+				SetCall printbuffer printbuf(ptrunrefformat,var,fn_name,0)
+				If printbuffer!=(NULL)
 					sd pallocerrormsg%ptrallocerrormsg
 					set pallocerrormsg# printbuffer
 				EndIf
--- /dev/null
+++ ocompiler-1/src/files/functions/scopes.s
@@ -0,0 +1,133 @@
+
+value scopesbag#1
+data *scopesbag_size#1
+const scopesbag_ptr^scopesbag
+function scopes_free()
+	sv s%scopesbag_ptr
+	if s#!=(NULL)
+		sv start;set start s#
+		add s :
+		sv pointer;set pointer s#d^
+		add pointer start
+		if start!=pointer
+			sub pointer :
+			sd scps%ptrscopes
+			if pointer#!=scps
+				add pointer :
+			endif
+			#else let named entry like it was
+			while start!=pointer
+				sub pointer :
+				sv cursor_first;set cursor_first pointer#
+				sv cursor=sizeofscope
+				add cursor cursor_first
+				while cursor_first!=cursor
+				#the order is reversed but it is not a work more if all mallocs are ok
+					sub cursor (sizeofcontainer)
+					call enumbags_free(cursor)
+				endwhile
+				call free(cursor_first)
+			endwhile
+		endif
+		call free(start)
+	endif
+endfunction
+
+#err
+function scopes_alloc(sd has_named_entry)
+	sv ptrfunctions%ptrfunctions
+	sd i=0
+	sd fns
+	sv last
+	call getcontandcontReg(ptrfunctions,#fns,#last)
+	add last fns
+	while fns!=last
+		add fns (nameoffset)
+		addcall fns strlen(fns)
+		inc fns
+		inc i
+	endwhile
+	mult i :
+	sv s%scopesbag_ptr
+	setcall s# memcalloc(i)
+	sv start;set start s#
+	if start!=(NULL)
+		add s :
+		set s# i
+		sv pointer;set pointer start
+		add pointer i
+		if has_named_entry==(TRUE)
+			#entry tag is, and is last, entry. can be used in functions
+			sub pointer :
+			sd scps%ptrscopes
+			set pointer# scps
+		endif
+		#alloc some dummy values
+		while start!=pointer
+			sub pointer :
+			setcall pointer# memcalloc((sizeofscope)) #is calloc, needing reg 0, in case it is searched , and at freeings
+		endwhile
+		return (noerror)
+	endif
+	return (error)
+endfunction
+
+function scopes_get_scope(sd i)
+	sv s%scopesbag_ptr
+	set s s#
+	mult i :
+	add s i
+	return s#
+endfunction
+
+function scopes_store(sv scope)
+	sv s%scopesbag_ptr
+	mult scope :
+	add scope s#
+	set scope scope#
+	sd last=sizeofscope
+	sv pointer%ptrfnscopes
+	add last pointer
+	while pointer!=last
+		sd cont;sd contReg;call getcontandcontReg(pointer,#cont,#contReg)
+		#add new cont at fns
+		call setcontMax(pointer,(subscope))
+		sd err;setcall err enumbags_alloc(pointer)
+		if err!=(noerror)
+			return err
+		endif
+		# reg is zero outside (was from when there was only one scope)
+		#transfer cont to store
+		# max is not used
+		call setcont(scope,cont)
+		call setcontReg(scope,contReg)
+		#next
+		add scope (sizeofcontainer)
+		add pointer (sizeofcontainer)
+	endwhile
+	return (noerror)
+endfunction
+
+function scopes_searchinvars(sd p_err,sv p_name)
+	sv ptrfunctions%ptrfunctions
+	sd i=0
+	sd fns
+	sv last
+	call getcontandcontReg(ptrfunctions,#fns,#last)
+	add last fns
+	while fns!=last
+		add fns (nameoffset)
+		sd data
+		sd scope
+		setcall scope scopes_get_scope(i)
+		setcall data searchinvars_scope_warn(p_err,scope)
+		if data!=(NULL)
+			set p_name# fns
+			return data
+		endif
+		addcall fns strlen(fns)
+		inc fns
+		inc i
+	endwhile
+	return (NULL)
+endfunction
--- ocompiler-1.orig/src/files/headers/ascii.h
+++ ocompiler-1/src/files/headers/ascii.h
@@ -17,6 +17,7 @@ Const asciiast=0x2A
 Const asciiplus=0x2B
 #2c comma
 Const asciiminus=0x2D
+Const asciidot=0x2E
 Const asciislash=0x2F
 Const asciizero=0x30
 Const asciinine=0x39
--- ocompiler-1.orig/src/files/headers/commons.h
+++ ocompiler-1/src/files/headers/commons.h
@@ -43,7 +43,7 @@ Data flag_max_path=flag_MAX_PATH
 
 #more values
 Const noerror=0
-#this is win specific Const error=-1
+Const error=-1 #is also for some windows
 Const FORWARD=1
 Const BACKWARD=-1
 Const void=0
--- ocompiler-1.orig/src/files/headers/header.h
+++ ocompiler-1/src/files/headers/header.h
@@ -48,6 +48,7 @@ Const _open_write=_O_WRONLY|flag_O_BINAR
 Const shortstrsize=16
 Const includesetSz=4*dwsz+shortstrsize
 
+#Const containersdataMaxoffset=0
 Const containersdataoffset=4
 Const containersdataRegoffset=8
 Const sizeofcontainer=3*dwsz
@@ -132,6 +133,7 @@ const vnumbers=numberofvars
 Const afterscopes=numberofvars*2
 	Const constantsnumber=afterscopes+0
 	Const functionsnumber=afterscopes+1
+const sizeofscope=sizeofcontainer*numberofvars
 
 Const constantssize=10*mainscope
 #constantssize
@@ -146,6 +148,7 @@ Data *functionsReg#1
 Const ptrfunctions^functionsMax
 
 Const ptrscopes^integerMax
+Const ptrfnscopes^integerfnscopeMax
 
 #file containers
 Const sizeofsecdata=0x1000
--- ocompiler-1.orig/src/files/inits/inits.s
+++ ocompiler-1/src/files/inits/inits.s
@@ -82,3 +82,7 @@ sd rel64_blankinit%p_elf64_r_info_type
 set rel64_blankinit# (R_X86_64_32)
 
 set real_exit_end (FALSE)
+
+sd el_or_e=FALSE
+
+sd functionTagIndex=0
--- ocompiler-1.orig/src/files/inits_top.s
+++ ocompiler-1/src/files/inits_top.s
@@ -8,6 +8,7 @@ set logfile negative
 Data containersptr%containersbegin
 Data containerssize=containerssize
 
+#for reg and for freeings
 Call memset(containersptr,null,containerssize)
 
 Set allocerrormsg null
@@ -15,3 +16,5 @@ Set allocerrormsg null
 set safecurrentdirtopath (NULL)
 
 call initpreferences()
+
+set scopesbag (NULL)
--- ocompiler-1.orig/src/windows/files/prefextra.s
+++ ocompiler-1/src/windows/files/prefextra.s
@@ -1,7 +1,7 @@
 
 const variable_convention=ms_convention
 
-Const error=-1
+#Const error=-1 is at header
 
 function prefextra(ss *file,sd *ptrpreferencessize,sd *ptrpreferencescontent)
 	return (error)
--- ocompiler-1.orig/src/windows/files/winobj64imports.h
+++ ocompiler-1/src/windows/files/winobj64imports.h
@@ -2,6 +2,7 @@
 
 
 Importx "realloc" realloc
+Importx "malloc" malloc
 Importx "free" free
 Importx "sprintf" sprintf
 Importx "memcpy" memtomem
--- ocompiler-1.orig/src/windows/files/winobjimports.h
+++ ocompiler-1/src/windows/files/winobjimports.h
@@ -2,6 +2,7 @@
 #msvcrt
 
 Import "_realloc" realloc
+Import "_malloc" malloc
 Import "_free" free
 Import "_sprintf" sprintf
 Import "_memcpy" memtomem
