Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-4.27) bionic; urgency=medium
 .
   * fix inplace
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-01-26

--- ocompiler-1.orig/ReadMe.old.txt
+++ ocompiler-1/ReadMe.old.txt
@@ -35,11 +35,11 @@ make.bat
 
 - Windows bat file to compile the source for executable; the output file will be in the './build/' folder
 
-make_win32_fromLin_gnu
+makewin32
 
 - Linux shell file to compile the source and to link it with mingw-w64-i686 for linux; the output file will be 'ocompiler.zip'
 
-make_win64_fromLin_gnu
+makewin64
 
 - Linux shell file to compile the source and to link it with mingw-w64-x86-64 for linux; the output file will be in the './buildg/' folder
 
--- ocompiler-1.orig/make.bat
+++ ocompiler-1/make.bat
@@ -1,5 +1,5 @@
 
-::use make_win32_fromLin_gnu
+::use makewin32
 exit
 
 md build
--- ocompiler-1.orig/make_win32_fromLin_gnu
+++ /dev/null
@@ -1,19 +0,0 @@
-
-#this is the new make for windows
-
-o ./src/windows/obj32.s inplace_reloc 0 && \
-#argc argv?, no. gcc want -8 at rels and ld 0
-i686-w64-mingw32-ld -s -entry=_WinMain@16 ./src/windows/obj32.o -lmsvcrt -luser32 -lkernel32 -lcomdlg32 -lshell32 -o ./o.exe && \
-ounused ./src/windows/obj32.s.log && \
-\
-rm ./src/windows/obj32.o && \
-rm ./src/windows/obj32.s.log && \
-\
-mkdir ocompiler && \
-mv o.exe ocompiler && \
-cp .ocompiler.txt ocompiler && \
-\
-zip -r ocompiler.zip ocompiler && \
-rm -r ./ocompiler && \
-\
-unzip -l ocompiler.zip
\ No newline at end of file
--- ocompiler-1.orig/make_win64_fromLin_gnu
+++ /dev/null
@@ -1,51 +0,0 @@
-
-#is old staying for information
-#x86_64-w64-mingw32-ld --image-base=0 -s -entry _WinMain@16 "./obj64.o" -luser32 -lkernel32 -lcomdlg32 -lmsvcrt -o "./o64.exe"
-exit
-
-#########
-#the build is working
-#attention at GetCommandNameA to not return a 64 bit pointer and at realloc
-#modify the OPENFILENAME(needed when starting with no argument to compile):
-#       DWORD         lStructSize;       pad 0
-#QWORD  HWND          hwndOwner;         -
-#QWORD  HINSTANCE     hInstance;         -
-#QWORD  LPCTSTR       lpstrFilter;       -
-#QWORD  LPTSTR        lpstrCustomFilter; -
-#       DWORD         nMaxCustFilter;    x
-#       DWORD         nFilterIndex;      -
-#QWORD  LPTSTR        lpstrFile;         -
-#       DWORD         nMaxFile;          pad 0
-#QWORD  LPTSTR        lpstrFileTitle;    -
-#       DWORD         nMaxFileTitle;     pad 0
-#QWORD  LPCTSTR       lpstrInitialDir;   -
-#QWORD  LPCTSTR       lpstrTitle;        -
-#       DWORD         Flags;             x
-#       WORD          nFileOffset;       x
-#       WORD          nFileExtension;    -
-#QWORD  LPCTSTR       lpstrDefExt;       -
-#QWORD  LPARAM        lCustData;         -
-#QWORD  LPOFNHOOKPROC lpfnHook;          -
-#QWORD  LPCTSTR       lpTemplateName;    -
-#if (_WIN32_WINNT >= 0x0500)
-#QWORD  void          *pvReserved;       -
-#       DWORD         dwReserved;        x
-#       DWORD         FlagsEx;           -
-#endif
-
-x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/user.def -l ./fix/libuser.a
-x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/kernel.def -l ./fix/libkernel.a
-x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/comdlg.def -l ./fix/libcomdlg.a
-x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/c.def -l ./fix/libc.a
-
-./o ./src/windows/obj32_64code.s
-objcopy --input-target=elf32-i386 --output-target=elf64-x86-64 "./src/windows/obj32_64code.o" "./src/windows/obj64.o"
-mkdir ./buildg
-x86_64-w64-mingw32-ld --image-base=0 -s -nostdlib -entry _WinMain@16 "./src/windows/obj64.o" -L./fix -luser -l kernel -lcomdlg -lc -o "./buildg/o64.exe"
-cp ./.ocompiler.txt ./buildg/
-
-rm ./fix/libuser.a
-rm ./fix/libkernel.a
-rm ./fix/libcomdlg.a
-rm ./fix/libc.a
-rm ./src/windows/obj64.o
--- /dev/null
+++ ocompiler-1/makewin32
@@ -0,0 +1,19 @@
+
+#this is the new make for windows
+
+o ./src/windows/obj32.s inplace_reloc 0 && \
+#argc argv?, no. gcc want -8 at rels and ld 0
+i686-w64-mingw32-ld -s -entry=_WinMain@16 ./src/windows/obj32.o -lmsvcrt -luser32 -lkernel32 -lcomdlg32 -lshell32 -o ./o.exe && \
+ounused ./src/windows/obj32.s.log && \
+\
+rm ./src/windows/obj32.o && \
+rm ./src/windows/obj32.s.log && \
+\
+mkdir ocompiler && \
+mv o.exe ocompiler && \
+cp .ocompiler.txt ocompiler && \
+\
+zip -r ocompiler.zip ocompiler && \
+rm -r ./ocompiler && \
+\
+unzip -l ocompiler.zip
\ No newline at end of file
--- /dev/null
+++ ocompiler-1/makewin64
@@ -0,0 +1,51 @@
+
+#is old staying for information
+#x86_64-w64-mingw32-ld --image-base=0 -s -entry _WinMain@16 "./obj64.o" -luser32 -lkernel32 -lcomdlg32 -lmsvcrt -o "./o64.exe"
+exit
+
+#########
+#the build is working
+#attention at GetCommandNameA to not return a 64 bit pointer and at realloc
+#modify the OPENFILENAME(needed when starting with no argument to compile):
+#       DWORD         lStructSize;       pad 0
+#QWORD  HWND          hwndOwner;         -
+#QWORD  HINSTANCE     hInstance;         -
+#QWORD  LPCTSTR       lpstrFilter;       -
+#QWORD  LPTSTR        lpstrCustomFilter; -
+#       DWORD         nMaxCustFilter;    x
+#       DWORD         nFilterIndex;      -
+#QWORD  LPTSTR        lpstrFile;         -
+#       DWORD         nMaxFile;          pad 0
+#QWORD  LPTSTR        lpstrFileTitle;    -
+#       DWORD         nMaxFileTitle;     pad 0
+#QWORD  LPCTSTR       lpstrInitialDir;   -
+#QWORD  LPCTSTR       lpstrTitle;        -
+#       DWORD         Flags;             x
+#       WORD          nFileOffset;       x
+#       WORD          nFileExtension;    -
+#QWORD  LPCTSTR       lpstrDefExt;       -
+#QWORD  LPARAM        lCustData;         -
+#QWORD  LPOFNHOOKPROC lpfnHook;          -
+#QWORD  LPCTSTR       lpTemplateName;    -
+#if (_WIN32_WINNT >= 0x0500)
+#QWORD  void          *pvReserved;       -
+#       DWORD         dwReserved;        x
+#       DWORD         FlagsEx;           -
+#endif
+
+x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/user.def -l ./fix/libuser.a
+x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/kernel.def -l ./fix/libkernel.a
+x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/comdlg.def -l ./fix/libcomdlg.a
+x86_64-w64-mingw32-dlltool --no-leading-underscore -d ./fix/c.def -l ./fix/libc.a
+
+./o ./src/windows/obj32_64code.s
+objcopy --input-target=elf32-i386 --output-target=elf64-x86-64 "./src/windows/obj32_64code.o" "./src/windows/obj64.o"
+mkdir ./buildg
+x86_64-w64-mingw32-ld --image-base=0 -s -nostdlib -entry _WinMain@16 "./src/windows/obj64.o" -L./fix -luser -l kernel -lcomdlg -lc -o "./buildg/o64.exe"
+cp ./.ocompiler.txt ./buildg/
+
+rm ./fix/libuser.a
+rm ./fix/libkernel.a
+rm ./fix/libcomdlg.a
+rm ./fix/libc.a
+rm ./src/windows/obj64.o
--- ocompiler-1.orig/src/files/functions/actions/enumcomma.s
+++ ocompiler-1/src/files/functions/actions/enumcomma.s
@@ -40,6 +40,7 @@ function writevar(data ptrvalue,data uni
 		return (noerror)
 	endif
 
+	sd for_64;setcall for_64 is_for_64()
 	if ptrobject#==1
 		If ptrrelocbool#==true
 			#code
@@ -50,14 +51,17 @@ function writevar(data ptrvalue,data uni
 			If err!=noerr
 				Return err
 			EndIf
+			#s^dat
+			call inplace_reloc(ptrvalue)
+			setcall err addtocodefordata(ptrvalue#,for_64)
+			return err
 		EndIf
 	endif
-	sd for_64;setcall for_64 is_for_64()
 	if rightstackpointer!=(NULL)
+		#s^s
 		setcall err addtocodeforstack(rightstackpointer,for_64)
 	else
-		#sd^data
-		call inplace_reloc(ptrvalue)
+		#s=consts
 		setcall err addtocodefordata(ptrvalue#,for_64)
 	endelse
 	return err
