This file is parsed by the program to set the preferences. "nameEQUALx" must be preserved.


1. Display unreferenced variables/functions/constants warning.
0 is Hide; 1 is Show
warnings=1

2. Overflow at constants warning.
0 is Hide; 1 is Show
over_pref=1

3. Hidden whitespaces warning.
0 is Hide; 1 is Show
hidden_pref=1

4. Showed warnings as errors.
0 if False; 1 is True
w_as_e=1

5. Log file. This option creates a file with string lines.
0 is No; 1 is Yes
logfile=1

6. Take the following action at FUNCTION entries at the object format that are not referred in the object and when the reference warning is enabled.
[if warnings is 1]
0 is Ignore them; 1 is Show warning; 2 [if logfile is 1] is Write them to the logfile (this will also log import functions), else take 1
codeFnObj=2

7. CONST to unreferenced warnings, same as with FUNCTION
[if warnings is 1]
0 is Ignore them; 1 is Show warning; 2 [if logfile is 1] is Write them to the logfile (this will also log used constants), else take 1
const_warn=2

8. Log the folder path to the main file, the main file and the INCLUDE files.
[if logfile is 1]
	[if includedir is 1]: The file entries are followed by the name of the previous active folder, where the program will restore when the file is parsed.
0 is No; 1 is Yes
logincludes=1

9. Include active folder. Change the active directory when including and stepping into a file.
0 is No; 1 is Yes
includedir=1

10. Write the function names above the function in code section, useful when debugging asm instructions.
0 is No; 1 is Yes
function_name=0

11. Ignore elfobj64
0 is No,use linux convention if ocompiler was compiled for linux,else use microsoft; 1 is Yes; 2 is No,and cross-compile
conv_64=0

12. Zeroset reserved CHARS/DATA/STR
0 is No; 1 is Yes
nul_res_pref=0

13. sd as sv (old programs don't have sv and may be with 64 logic)
0 is No; 1 is Yes
sd_as_sv=0