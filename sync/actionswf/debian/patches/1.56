Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 actionswf (1-56) bionic; urgency=medium
 .
   * the next 64 migration at "for in"
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-11-12

--- actionswf-1.orig/src/Makefile
+++ actionswf-1/src/Makefile
@@ -44,16 +44,25 @@ strippy=ostriputil
 ifeq (${platform},win)
 OFLAGS += inplace_reloc 0 include_sec 1
 all: compile ounused link def
+link:
+	if [ "${conv_64}" = "1" ]; then \
+		i686-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
+	else \
+		x86_64-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
+	fi
+
 else
 OFLAGS += underscore_pref 1
 #else ifeq (${conv_64},1)
+
 ifeq (${conv_64},1)
 ATLDCOM = $(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${eobs} -shared -entry DllMain -o ${prefname} -lc -L${items_prefix}. -l:${exte} --exclude-libs ${exte}
-all: compile ${name}
+all: ${name}
+
 else
 ATLDCOM = $(CC) ${syms} ${eobs} -shared -e DllMain -o ${name} -lc -L. -l:${exte} -Wl,--exclude-libs ${exte}
-all: compile ${name} ${stripname}
-${stripname}:
+all: ${stripname}
+${stripname}: ${name}
 	$(eval strp = )
 	$(foreach var,$(expitems),$(eval strp += ${items_prefix}${var}.es.log ${items_prefix}${var}.o))
 	$(foreach var,$(items),$(eval strp += ${items_prefix}${var}.s.log ${items_prefix}${var}.o))
@@ -61,7 +70,8 @@ ${stripname}:
 	#if [ ! -e "./strip.py" ]; then wget https://raw.githubusercontent.com/colin-i/o/master/ostrip/strip.py; fi
 	${strippy} ${name} ${stripname}
 endif
-${name}:
+
+${name}: compile
 	${OLINK} ${logs}
 	@echo
 	$(AR) cr ${exte} ${obs}
@@ -80,17 +90,6 @@ ounused:
 
 compile: ${obs} ${eobs}
 
-link:
-	if [ "${platform}" = "lin" ]; then \
-		$(AR) cr ${exte} ${obs}; \
-		${ATLDCOM}; \
-	else \
-		if [ "${conv_64}" = "1" ]; then \
-			i686-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
-		else \
-			x86_64-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
-		fi \
-	fi
 #noleadingunderscore for exporting symbols
 
 #obs =   :in case it is called after an object (make bits link)
--- actionswf-1.orig/src/actioncode.s
+++ actionswf-1/src/actioncode.s
@@ -377,7 +377,7 @@ function action_code_write_conditions(sd
                 setcall codepointer action_member_loop(codepointer,:)  #to pass the pointer
             else
                 #var or set variable
-                call action_push((ap_Constant8),codepointer#,-1)
+                call action_push((ap_Constant8),codepointer#v^,-1)
                 add codepointer :   #to pass the pointer
             endelse
             #
--- actionswf-1.orig/src/m32d
+++ actionswf-1/src/m32d
@@ -1,2 +1,2 @@
 
-OFLAGSEXTRA="function_name 1" ./make32 $@ && make link syms= items_prefix=/home/bc/s/actionswf-1/src/ LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage
+OFLAGSEXTRA="function_name 1 nul_res_pref 1" ./make32 $@ && make link syms= items_prefix=/home/bc/s/actionswf-1/src/ LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage
--- actionswf-1.orig/src/m64d
+++ /dev/null
@@ -1,2 +0,0 @@
-
-OFLAGSEXTRA="function_name 1" ./make64 $@ && ./make64 syms= link debug=.d
--- actionswf-1.orig/src/m64dx
+++ /dev/null
@@ -1,2 +0,0 @@
-
-./m64d compile
