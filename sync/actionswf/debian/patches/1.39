Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 actionswf (1-39) bionic; urgency=medium
 .
   * Memory wrong code fix
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-08-16

--- actionswf-1.orig/.github/workflows/rpm.yml
+++ actionswf-1/.github/workflows/rpm.yml
@@ -25,7 +25,7 @@ jobs:
        wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
        #sudo apt install python3-launchpadlib it is on 22.04
       fi
-      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version})
+      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} ${arh})
       wget ${OUTPUT}/+files/${name}_${version}_${arh}.deb -O ${name}.deb
       #make rpm
       mkdir out
@@ -34,9 +34,8 @@ jobs:
       sudo apt install alien
       sudo alien -rk ../${name}.deb
       fname=`ls`
-      fnamefinal=`echo ${fname} | sed "s/-/./"`
-      mv ${fname} ../${fnamefinal}
-      echo "file=${fnamefinal}" >> $GITHUB_ENV
+      mv ${fname} ../${fname}
+      echo "file=${fname}" >> $GITHUB_ENV
    - name: artifact
      uses: actions/upload-artifact@v3
      with:
--- actionswf-1.orig/Makefile
+++ actionswf-1/Makefile
@@ -1,6 +1,6 @@
 TOPTARGETS := all install clean distclean uninstall test
 
-SUBDIRS := src
+SUBDIRS := src example
 
 $(TOPTARGETS): $(SUBDIRS)
 $(SUBDIRS):
--- /dev/null
+++ actionswf-1/arh/pub
@@ -0,0 +1,22 @@
+
+
+~/test/debinit "${1}" && \
+~/test/keyring2 && \
+~/test/pub deb && \
+~/test/deb && \
+~/test/publp && \
+~/test/rpm && \
+~/test/pub rpm && \
+./makewin32 && \
+~/test/del && \
+~/test/rel && \
+~/test/pub rel && \
+~/test/uponrpm && \
+~/test/up && \
+~/test/pub uponrpm && \
+~/test/pub2 && \
+~/test/publp2 && \
+~/test/lp && \
+~/test/lp x && \
+~/test/keyring && \
+~/test/del x ${2}
--- actionswf-1.orig/example/Makefile
+++ actionswf-1/example/Makefile
@@ -1,6 +1,7 @@
 
 platform = lin
 OCOMP=o
+OLINK=ounused
 syms=-s
 conv_64=1
 OFLAGS=conv_64 ${conv_64}
@@ -15,10 +16,12 @@ name=example
 linkname=actionswf
 linkfile=${linkname}.lib
 
-all: ${name} uns lib lnk exe
+all: build exe
+
+build: ${name} uns lib lnk
 
 uns:
-	ounused ${name}.s.log
+	${OLINK} ${name}.s.log
 
 lib:
 	if [ "${platform}" = "win" ]; then \
@@ -51,5 +54,15 @@ clean:
 	-rm -f ${name}.exe
 	-rm -f ${linkfile}
 
-.PHONY: all clean
-# install distclean uninstall test
+distclean: clean
+
+install: test
+
+uninstall: test
+
+test:
+	echo "Nothing"
+
+.PHONY: all install clean distclean uninstall test
+
+#LD_LIBRARY_PATH=/home/bc/s/actionswf-1/src ./example
--- actionswf-1.orig/example/example.s
+++ actionswf-1/example/example.s
@@ -28,8 +28,8 @@ call swf_sprite_placeobject(movie_preid,
 call swf_sprite_showframe(movie_preid)
 
 chars data#512
-str ac^data
-str vars="var move=20;var width=%u;var height=%u;var lat=%u;var left=move;var top=move;var right=width-lat-move;var bottom=height-lat-move"
+vstr ac^data
+vstr vars="var move=20;var width=%u;var height=%u;var lat=%u;var left=move;var top=move;var right=width-lat-move;var bottom=height-lat-move"
 call sprintf(ac,vars,(width),(height),(shape_lat))
 call action_sprite(movie_preid,ac)
 
--- /dev/null
+++ actionswf-1/example/m64d
@@ -0,0 +1,2 @@
+
+./make64 syms= $@
--- /dev/null
+++ actionswf-1/example/make64
@@ -0,0 +1,2 @@
+
+make conv_64=0 $@
--- actionswf-1.orig/readme.md
+++ actionswf-1/readme.md
@@ -13,7 +13,7 @@ sudo apt-get install actionswf
 \
 On Fedora, <i>.rpm</i> file from [releases](https://github.com/colin-i/actionswf/releases).
 ```sh
-yum install actionswf.*.*.rpm
+yum install actionswf-*.*.rpm
 ```
 \
 On Windows, <i>.windows.zip</i> file from [releases](https://github.com/colin-i/actionswf/releases) has the dll.
--- actionswf-1.orig/src/Makefile
+++ actionswf-1/src/Makefile
@@ -1,6 +1,7 @@
 
 platform = lin
 OCOMP=o
+OLINK=ounused
 syms=-s
 conv_64=1
 OFLAGS=conv_64 ${conv_64}
@@ -20,17 +21,25 @@ projname=actionswf
 name = ${projname}.so
 xname = lib${name}
 defname = ${projname}.def
+items_prefix=
+prefname=${items_prefix}${name}
 
-all: ${items} ${expitems} ounused lnk def
+logs :=
+obs :=
+eobs :=
+
+all: compile lnk def
 
 ounused:
-	ounused ${logs}
+	${OLINK} ${logs}
+
+compile: ${items} ${expitems} ounused
 
 lnk:
 	if [ "${platform}" = "lin" ]; then \
 		$(AR) cr ${exte} ${obs}; \
 		if [ "${conv_64}" = "1" ]; then \
-			$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:${exte} --exclude-libs ${exte}; \
+			$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${eobs} -shared -entry DllMain -o ${prefname} -lc -L${items_prefix}. -l:${exte} --exclude-libs ${exte}; \
 		else \
 			$(LD) ${syms} --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:${exte} --exclude-libs ${exte}; \
 		fi \
@@ -43,15 +52,21 @@ lnk:
 	fi
 #noleadingunderscore for exporting symbols
 
+#obs =   :in case it is called after an object (make bits link)
+#(make action link)
+fast:
+	$(eval obs = )
+	$(eval eobs = )
+	$(foreach var,$(items),$(eval obs += ${items_prefix}${var}.o))
+	$(foreach var,$(expitems),$(eval eobs += ${items_prefix}${var}.o))
+
+link: fast lnk
+
 def:
 	if [ "${platform}" = "win" ]; then \
 		../fix/makedef ${defname}; \
 	fi
 
-logs :=
-obs :=
-eobs :=
-
 %: %.s
 	${OCOMP} $< ${OFLAGS}
 	$(eval logs += $@.s.log)
@@ -87,3 +102,7 @@ uninstall:
 .PHONY: all install clean distclean uninstall test
 
 .NOTPARALLEL:
+
+#make compile && make link syms= items_prefix=/home/bc/s/actionswf-1/src/ LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage
+#make syms= conv_64=0
+#make syms= conv_64=0 link
--- actionswf-1.orig/src/action.es
+++ actionswf-1/src/action.es
@@ -31,7 +31,8 @@ functionX action(ss ac)
     setcall mem dupreserve_string(ac)
     sd p_action_errors
     setcall p_action_errors action_debug((TRUE))
-    set p_action_errors# (TRUE);add p_action_errors (DWORD);set p_action_errors# ac;add p_action_errors (DWORD);set p_action_errors# mem
+    set p_action_errors# (TRUE)
+	sv cursor;set cursor p_action_errors;add cursor (DWORD);set cursor# ac;add cursor :;set cursor# mem
     call escape_action(ac,mem,0)
     while mem#!=0
         setcall mem action_code_row(mem,(FALSE))
--- actionswf-1.orig/src/actioncode.s
+++ actionswf-1/src/actioncode.s
@@ -9,23 +9,23 @@ include "../include/prog.h"
 
 const totalvalues=65535
 function action_code_values_container()
-    data setofvalues=NULL
+    value setofvalues=NULL
     return #setofvalues
 endfunction
 function action_code_values()
-    sd m
+    sv m
     setcall m action_code_values_container()
     return m#
 endfunction
 function action_code_values_init()
     import "memalloc" memalloc
-    sd m
+    sv m
     setcall m action_code_values_container()
     setcall m# memalloc((totalvalues*DWORD))
 endfunction
 import "mem_free" mem_free
 function action_code_values_free()
-    sd p
+    sv p
     setcall p action_code_values_container()
     if p#!=(NULL);call mem_free(p);endif
 endfunction
@@ -39,7 +39,7 @@ function action_code_get()
     setcall nr action_code_values_index()
     sd x
     set x nr#
-    sd pointer
+    sv pointer
     setcall pointer action_code_values()
     mult x (DWORD)
     add pointer x
@@ -50,11 +50,12 @@ function action_code_set(sd value)
     setcall nr action_code_values_index()
     sd x
     set x nr#
-    if x>=(totalvalues)
+    if x==(totalvalues)
+    #was >= but when >?, here and in another 3 places
         import "error" error
         call error("size error")
     endif
-    sd pointer
+    sv pointer
     setcall pointer action_code_values()
     mult x (DWORD)
     add pointer x
@@ -66,7 +67,7 @@ function forward_values_expand(sd forwar
     sd p_currentnr
     setcall p_currentnr action_code_values_index()
     set currentnr p_currentnr#
-    sd values
+    sv values
     setcall values action_code_get()
     #
     call forward(values,data)
--- actionswf-1.orig/src/actionparse.s
+++ actionswf-1/src/actionparse.s
@@ -32,7 +32,7 @@ endfunction
 #pointer
 function action_code_row_ex(ss ac,sd a_block_detected,sd else_index)
     import "debug_code" debug_code
-    sd p_c
+    sv p_c
     setcall p_c debug_code()
     set p_c# ac
     ss atstart=NULL
@@ -488,7 +488,7 @@ function action_parse_loop(ss ac,sd p_op
     sd is_compare_ptr
     setcall is_compare_ptr compare_bool_pointer()
     #
-    str op_set^oprs
+    vstr op_set^oprs
     ss ops;setcall ops get_operations();call memcpy(op_set,ops,(operations_size))
     while 1==1
         sd op
@@ -617,7 +617,7 @@ function action_code_extended_operations
     return pointer
 endfunction
 #pointer
-function action_code_take_main(ss ac,sd p_op,ss delims)
+function action_code_take_main(ss ac,sv p_op,ss delims) #p_op is pointing at a stack variable
     #a string
     ss pointer
     setcall pointer action_code_str(ac)
@@ -759,7 +759,7 @@ function action_code_membersplit(ss ac)
     return next
 endfunction
 function action_code_member(ss ac)
-    str delims=".["
+    vstr delims=".["
     chars dot=".";chars sqbrace_start="["
     chars sqbrace_end="]"
     while ac#!=0
@@ -892,7 +892,8 @@ endfunction
 function brace_blocks_counter_inc()
     sd c
     setcall c brace_blocks_counter()
-    if c#>=(brace_blocks_max)
+    if c#==(brace_blocks_max)
+    #was >=
         call error("too many blocks: {}")
     endif
     inc c#
@@ -1158,8 +1159,8 @@ import "action_code_values_index" action
 #pointer
 function action_code_parse_function_arguments(ss pointer)
     #arguments
-    sd math_values
-    setcall math_values action_code_get()
+    # this was for what? sd math_values
+    # setcall math_values action_code_get()
     chars comma=","
     chars close=")"
     inc pointer
@@ -1259,7 +1260,7 @@ function action_code_parse_deffunction(s
 endfunction
 #pointer
 function action_code_parse_function_defarguments(ss ac)
-    str argsdelims=",)"
+    vstr argsdelims=",)"
     chars close=")"
     inc ac
     if ac#==close
--- actionswf-1.orig/src/actionutil.s
+++ actionswf-1/src/actionutil.s
@@ -169,7 +169,7 @@ import "forward_values_expand" forward_v
 function action_member_write(ss member)
     const dup_member=256
     chars dup_data#dup_member
-    str code^dup_data
+    vstr code^dup_data
     sd len
     setcall len strlen(member)
     inc len
@@ -285,8 +285,8 @@ endfunction
 
 function action_debug(sd is_on)
     data action_errors=FALSE
-    data *#1
-    data m=NULL
+    vstr *#1
+    vstr m=NULL
     if is_on==(FALSE)
         #set there and here, here good at errors and comeback
         set action_errors (FALSE)
@@ -301,7 +301,7 @@ function action_debug_free()
 endfunction
 
 function debug_code()
-    data code#1
+    value code#1
     return #code
 endfunction
 
@@ -312,13 +312,13 @@ function action_error()
         return (void)
     endif
 
-    data ac#1
-    data mem#1
-    add p_action_errors (DWORD);call memcpy(#ac,p_action_errors,(2*DWORD))
+    vstr ac#1
+    vstr mem#1
+    add p_action_errors (DWORD);call memcpy(#ac,p_action_errors,(2*:))
 
     import "printEr" printEr
     call printEr("Row: ")
-    sd p_c
+    sv p_c
     setcall p_c debug_code()
     sd row
     setcall row escape_action(ac,mem,p_c#)
--- actionswf-1.orig/src/bits.s
+++ actionswf-1/src/bits.s
@@ -18,7 +18,7 @@ function bits_packs(ss dest,sd packs)
         inc i
     endwhile
 endfunction
-function bits_bigendian(sd value,sd size,sd p_dest,sd p_pos)
+function bits_bigendian(sd value,sd size,sv p_dest,sd p_pos)
     ss dest
     sd pos
     set dest p_dest#
@@ -99,7 +99,7 @@ function rect_add(sd width,sd height)
     call rect_prepare(#mem,#sz,width,height)
     call swf_mem_add(mem,sz)
 endfunction
-function rect_prepare(sd p_out,sd p_size,sd width,sd height)
+function rect_prepare(sv p_out,sd p_size,sd width,sd height)
     sd NBits
     mult width 20
     mult height 20
@@ -115,7 +115,7 @@ function rect_prepare(sd p_out,sd p_size
     set p_out# #rect
     set p_size# size
 endfunction
-function matrix_translate(sd p_dest,sd p_size,sd x,sd y)
+function matrix_translate(sv p_dest,sd p_size,sd x,sd y)
     chars matrix#1+4+4
     set p_dest# #matrix
     if x==0
--- actionswf-1.orig/src/character.s
+++ actionswf-1/src/character.s
@@ -14,7 +14,7 @@ include "../include/prog.h"
 import "identifiers_get" identifiers_get
 import "dword_to_word_arg" dword_to_word_arg
 #value
-function args_advance(sd p_args)
+function args_advance(sv p_args)
     sd value
     set value p_args#
     add p_args# (DWORD)
@@ -26,22 +26,23 @@ function shapewithstyle_records()
     return #shapewithstyle_record
 endfunction
 import "error" error
-function shape_records_bits(sd value,sd size,sd p_dest_pos)
-    data start#1
-    if p_dest_pos==0
-        set start value
-        return (void)
-    endif
+function shape_records_bits(sd value,sd size,sv p_dest_pos)
+    #why was this here? data start#1
+    #and this, this is called through shape_records_add    if p_dest_pos==0
+    #	set start value
+    #	return (void)
+    #endif
     sd pointer
     set pointer p_dest_pos#
     subcall pointer shapewithstyle_records()
-    if pointer>=(max_chars_records)
+    if pointer==(max_chars_records)
+    #was >=
         call error("too many arguments at shape")
     endif
     import "bits_bigendian" bits_bigendian
     sd p_pos
     set p_pos p_dest_pos
-    add p_pos (DWORD)
+    add p_pos :
     call bits_bigendian(value,size,p_dest_pos,p_pos)
 endfunction
 function shape_records_add(sd p_dest_pos,sd p_args)
@@ -208,7 +209,7 @@ function swf_shape_simple(sd width,sd he
     add cursor (DWORD);set cursor# fillcolor
     add cursor (DWORD);set cursor# lineheight
     if lineheight!=0;add cursor (DWORD);set cursor# linecolor;endif
-
+    #the header is connected with the part below
     data *=0
     data styles#1;set styles (StateFillStyle0|StateMoveTo);if lineheight!=0;or styles (StateLineStyle);endif
         data x_move#1;set x_move lineheight_hf;add x_move xcurve
--- actionswf-1.orig/src/file.s
+++ actionswf-1/src/file.s
@@ -31,7 +31,7 @@ function file_seek(sd file,sd off,sd met
     sd seekint
     setcall seekint lseek(file,off,method)
     If seekint==-1
-        str seekerr="File seek error"
+        vstr seekerr="File seek error"
         call error(seekerr)
     endif
 endfunction
@@ -40,7 +40,7 @@ function file_tell(sd file)
     sd sz
     setcall sz lseek(file,0,(SEEK_CUR))
     if sz==-1
-        str tellerr="File tell error"
+        vstr tellerr="File tell error"
         call error(tellerr)
     endif
     return sz
@@ -76,7 +76,7 @@ function file_read(sd file,sd mem,sd siz
     endif
 endfunction
 function file_get_content__resources(sd trueIsSet_falseIsFree,sd fileIn,sd memIn)
-    data file=fd_none;data mem=NULL
+    data file=fd_none;vdata mem=NULL
     if trueIsSet_falseIsFree==(TRUE)
         if fileIn!=(fd_none);set file fileIn
         else;set mem memIn;endelse
@@ -105,7 +105,7 @@ function file_write(sd file,sd buffer,sd
     if len==size
         return (void)
     endif
-    str er="File write error"
+    vstr er="File write error"
     call error(er)
 endfunction
 
--- actionswf-1.orig/src/lin.s
+++ actionswf-1/src/lin.s
@@ -4,6 +4,6 @@ format elfobj64
 Importx "stderr" stderr
 
 function platform_iob()
-	sd a^stderr
+	sv a^stderr
 	return a#
 endfunction
--- /dev/null
+++ actionswf-1/src/m32d
@@ -0,0 +1,2 @@
+
+make compile && make link syms= items_prefix=/home/bc/s/actionswf-1/src/ LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage
--- /dev/null
+++ actionswf-1/src/m64d
@@ -0,0 +1,2 @@
+
+./make64 syms= $@
--- /dev/null
+++ actionswf-1/src/make64
@@ -0,0 +1,2 @@
+
+make conv_64=0 $@
--- actionswf-1.orig/src/storage.s
+++ actionswf-1/src/storage.s
@@ -14,14 +14,15 @@ import "mem_block_add" mem_block_add
 import "def_mem" def_mem
 
 function swf_mem(sd proc,sd arg,sd len)
-    data path_mem=NULL
+    vdata path_mem=NULL
+    #4-7 is 0
     data path_size#1
     data filelength_offset#1
     data file_out=fd_error
 
     data id#1
     data main_id#1
-    data call_struct#1;data c_main^struct_ids;data c_pool^struct_ids_actionpool
+    vdata call_struct#1;vdata c_main^struct_ids;vdata c_pool^struct_ids_actionpool
 
     if proc==(mem_exp_init)
     #arg is file
--- actionswf-1.orig/src/swf.es
+++ actionswf-1/src/swf.es
@@ -374,6 +374,7 @@ functionX swf_shape(sd width,sd height,s
     sd fillarg
     sd linewidth
     sd linecolor
+
     setcall fillstyle args_advance(#args)
     if fillstyle!=(no_fill)
         setcall fillarg args_advance(#args)
@@ -401,7 +402,7 @@ functionX swf_shape(sd width,sd height,s
         chars FillStyleType#1
     #
         data data#3
-    data fillstyles^FillStyleCount
+    vdata fillstyles^FillStyleCount
     set FillStyleCount 0
     sd fillstyles_size=1
     if fillstyle!=(no_fill)
@@ -438,7 +439,7 @@ functionX swf_shape(sd width,sd height,s
     chars LineStyleCount#1
     chars line_points#2
     data color#1
-    data linestyles^LineStyleCount
+    vdata linestyles^LineStyleCount
     sd linestyles_size=1
     set LineStyleCount 0
     if linewidth!=0
@@ -458,7 +459,7 @@ functionX swf_shape(sd width,sd height,s
     import "shapewithstyle_records" shapewithstyle_records
     sd shapewithstyle_record_start
     setcall shapewithstyle_record_start shapewithstyle_records()
-    data pointer#1;data pos#1
+    value pointer#1;data pos#1
     set pos 0x80
     set pointer shapewithstyle_record_start
     sd p_dest_pos^pointer
@@ -726,14 +727,14 @@ const hd_start=!
 const file_sz_off=!
     data *FileLength#1
 data size=!-hd_start
-data hd_pack%hd_start
+vdata hd_pack%hd_start
     #rect
 const hd2=!
     chars *FrameRate=0
         chars FrameRate#1
     chars *FrameCount={1,0}
 data size2=!-hd2
-data hd_pack2%hd2
+vdata hd_pack2%hd2
 
     #
     call swf_mem((mem_exp_init),path,(file_sz_off-hd_start))
--- actionswf-1.orig/src/util.s
+++ actionswf-1/src/util.s
@@ -153,13 +153,11 @@ function def_mem()
 endfunction
 #mem
 function def_data()
-    sd all
-    sd sz
-    sd mem
-    call mem_init(#mem,#all,#sz)
-    set mem# all
-    call block_reset_size(mem)
-    return mem
+	sd mem
+	setcall mem memalloc((block_size))
+	set mem# (block_size)
+	call block_reset_size(mem)
+	return mem
 endfunction
 
 #block
@@ -193,13 +191,7 @@ endfunction
 
 #mem procedures
 
-function mem_init(sd p_mem,sd p_allsize,sd p_size)
-    set p_allsize# (block_size)
-    set p_size# 0
-    setcall p_mem# memalloc(p_allsize#)
-endfunction
-
-function mem_block_add(sd p_block,ss newblock,sd newblock_size)
+function mem_block_add(sv p_block,ss newblock,sd newblock_size)
     sd block
     sd allsize
     sd size
@@ -210,14 +202,15 @@ function mem_block_add(sd p_block,ss new
     set allsize block#
     set sz_test size
     add sz_test newblock_size
-    if sz_test>=allsize
+    if sz_test>allsize
+    #was >=
         div sz_test (block_size)
         mult sz_test (block_size)
         add sz_test (block_size)
-        set allsize sz_test
-        setcall block memrealloc(block,allsize)
+    #    set allsize sz_test
+        setcall block memrealloc(block,sz_test)  #allsize
         set p_block# block
-        set block# allsize
+        set block# sz_test  #allsize
     endif
     sd pointer
     set pointer block
@@ -228,7 +221,7 @@ function mem_block_add(sd p_block,ss new
     set block# size
 endfunction
 
-function mem_free(sd p_mem)
+function mem_free(sv p_mem)
     call free(p_mem#)
     set p_mem# (NULL)
 endfunction
@@ -237,19 +230,19 @@ endfunction
 
 const max_structures=100
 function struct_ids(sd proc,sd id)
-    data structures#max_structures
-    data strct^structures
+    vdata structures#max_structures
+    vdata strct^structures
     data counter=0
-    sd ac_ptr
-    sd pointer
+    sv ac_ptr
+    sv pointer
     if proc==(ids_all_free)
         #starting with ids_all_free:
         #                #counter increment#, then null at ac,pools
         #   mem_free at struct_ids_action_expand
         #   can have errors at any point and here all are verified
-        set pointer (DWORD);mult pointer counter;add pointer strct
+        set pointer :;mult pointer counter;add pointer strct
         while strct!=pointer
-            sub pointer (DWORD);if pointer#!=(NULL);call free(pointer#);endif
+            sub pointer :;if pointer#!=(NULL);call free(pointer#);endif
             dec counter
             setcall ac_ptr struct_ids_action((ids_get),counter);if ac_ptr!=(NULL);call free(ac_ptr);endif
             setcall ac_ptr struct_ids_actionpool((ids_get),counter);if ac_ptr!=(NULL);call free(ac_ptr);endif
@@ -265,23 +258,23 @@ function struct_ids(sd proc,sd id)
     else
         set ident id
     endelse
-    setcall pointer move_to_n_dword(strct,ident)
+    setcall pointer move_to_n_pointer(strct,ident)
     if proc==(ids_set)
     #id
         if counter==(max_structures)
             call error("too many objects")
         endif
-        sd iter
+        sv iter
         sd newblock
         setcall newblock def_data()
         set iter pointer
         while iter!=strct
         #can be in a free place
-            sub iter (DWORD)
+            sub iter :
             if iter#==0
                 set iter# newblock
                 sub iter strct
-                div iter (DWORD)
+                div iter :
                 return iter
             endif
         endwhile
@@ -304,17 +297,17 @@ function struct_ids(sd proc,sd id)
     endelse
 endfunction
 function struct_ids_action(sd proc,sd id)
-    data action_structures#max_structures
+    vdata action_structures#max_structures
     sd v;setcall v struct_ids_expand(proc,id,#action_structures)
     return v
 endfunction
 function struct_ids_actionpool(sd proc,sd id)
-    data actionpool_structures#max_structures
+    vdata actionpool_structures#max_structures
     sd v;setcall v struct_ids_expand(proc,id,#actionpool_structures)
     return v
 endfunction
 function struct_ids_expand(sd proc,sd id,sd p_action_structures)
-    sd pointer;setcall pointer move_to_n_dword(p_action_structures,id)
+    sv pointer;setcall pointer move_to_n_pointer(p_action_structures,id)
     if proc==(ids_set)
         setcall pointer# def_data()
     elseif proc==(ids_get_pointer)
@@ -331,8 +324,8 @@ function struct_ids_expand(sd proc,sd id
     endelse
 endfunction
 #pointer
-function move_to_n_dword(sd pointer,sd id)
-    mult id (DWORD)
+function move_to_n_pointer(sd pointer,sd id)
+    mult id :
     add pointer id
     return pointer
 endfunction
