Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 actionswf (1-1.36) bionic; urgency=medium
 .
   * naming
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-01-30

--- actionswf-1.orig/example/Makefile
+++ actionswf-1/example/Makefile
@@ -1,8 +1,9 @@
 
 platform = lin
 OCOMP=o
-OFLAGS = conv_64 1
 syms=-s
+conv_64=1
+OFLAGS=conv_64 ${conv_64}
 
 ifeq (${platform},win)
 	OFLAGS += inplace_reloc 0 include_sec 1
@@ -24,11 +25,14 @@ lib:
 
 lnk:
 	if [ "${platform}" = "lin" ]; then \
-		$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${name}.o -entry example_main -o ${name} -lc -L../src -l:actionswf.so; \
+		if [ "${conv_64}" = "1" ]; then \
+			$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${name}.o -entry example_main -o ${name} -lc -L../src -l:actionswf.so; \
+		else \
+			$(LD) ${syms} --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${name}.o -entry example_main -o ${name} -lc -L../src -l:actionswf.so; \
+		fi \
 	else \
 		i686-w64-mingw32-ld ${syms} ${name}.o -entry example_main -lmsvcrt -o ${name}.exe -L. -l:libactionswf.a; \
 	fi
-#$(LD) ${syms} --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${name}.o -entry example_main -o ${name} -lc -L../src -l:actionswf.so
 
 exe:
 	if [ "${platform}" = "lin" ]; then \
--- actionswf-1.orig/makewin32
+++ actionswf-1/makewin32
@@ -1,4 +1,15 @@
 
 cd src
 
-./makewin32
+./makewin32 $@ && \
+\
+cd .. && \
+mkdir actionswf && \
+mv src/actionswf.dll actionswf && \
+cd src && \
+./makewin32 clean && \
+cd .. && \
+zip -r actionswf.zip actionswf && \
+rm -r ./actionswf && \
+\
+unzip -l actionswf.zip
--- actionswf-1.orig/readme.md
+++ actionswf-1/readme.md
@@ -1,5 +1,19 @@
 # Action SWF
 
+## Install
+On Ubuntu, but other distros may have the same tree and dependencies.
+```sh
+sudo add-apt-repository ppa:colin-i/ppa
+```
+Or the *manual installation step* from this link *https://gist.github.com/colin-i/e324e85e0438ed71219673fbcc661da6* \
+Update and install:
+```sh
+sudo apt-get update
+sudo apt-get install actionswf
+```
+A brief intro is at [readme.txt](https://raw.githubusercontent.com/colin-i/actionswf/master/readme.txt).\
+On Windows, the dll is at https://github.com/colin-i/actionswf/releases .
+
 ## From source
 Compile with [O Compiler](https://github.com/colin-i/o)
 
--- actionswf-1.orig/src/Makefile
+++ actionswf-1/src/Makefile
@@ -1,23 +1,24 @@
 
 platform = lin
+OCOMP=o
+syms=-s
+conv_64=1
+OFLAGS=conv_64 ${conv_64}
 
 items = ${platform} actioncode actionparse actionpool actionutil bits character file storage util
 expitems = action swf tool ../shared/action_dllmain
 
 exte=libexte.a
 
-OCOMP=o
-OFLAGS = conv_64 1
 ifeq (${platform},win)
 	OFLAGS += inplace_reloc 0 include_sec 1
 else
 	OFLAGS += underscore_pref 1
 endif
 
-syms =-s
-
 projname=actionswf
 name = ${projname}.so
+xname = lib${name}
 
 all: ${items} ${expitems} ounused lnk
 
@@ -26,13 +27,20 @@ ounused:
 
 lnk:
 	if [ "${platform}" = "lin" ]; then \
-		$(AR) cr ${exte} ${obs} && \
-		$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:${exte} --exclude-libs ${exte}; \
+		$(AR) cr ${exte} ${obs}; \
+		if [ "${conv_64}" = "1" ]; then \
+			$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:${exte} --exclude-libs ${exte}; \
+		else \
+			$(LD) ${syms} --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:${exte} --exclude-libs ${exte}; \
+		fi \
 	else \
-		i686-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
+		if [ "${conv_64}" = "1" ]; then \
+			i686-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
+		else \
+			x86_64-w64-mingw32-ld --no-leading-underscore ${syms} ${eobs} ${obs} -shared -entry=DllMain -lmsvcrt -o ${projname}.dll --exclude-modules-for-implib `printf ',%s' ${obs} | cut -c2-`; \
+		fi \
 	fi
 #noleadingunderscore for exporting symbols
-#$(LD) ${syms} --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${eobs} -shared -entry DllMain -o ${name} -lc -L. -l:libexte.a --exclude-libs ${exte}
 
 logs :=
 obs :=
@@ -62,12 +70,12 @@ test:
 
 install-lib:
 	install -D ${name} \
-		$(DESTDIR)$(prefix)/lib/${name}
+		$(DESTDIR)$(prefix)/lib/${xname}
 
 install: all install-lib
 
 uninstall:
-	-rm -f $(DESTDIR)$(prefix)/lib/${name}
+	-rm -f $(DESTDIR)$(prefix)/lib/${xname}
 
 .PHONY: all install clean distclean uninstall test
 
