Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 pyaudioo (1-4) jammy; urgency=medium
 .
   * for rpm
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-07-08

--- /dev/null
+++ pyaudioo-1/.github/workflows/rel.yml
@@ -0,0 +1,41 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ rbuild:
+  runs-on: ubuntu-latest
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #get the version from changelog/launchpad/input
+      tag=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
+      echo "tag=${tag}" >> $GITHUB_ENV
+   - name: Create Release
+     id: create_release
+     uses: actions/create-release@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      tag_name: ${{ env.tag }}
+      release_name: Release ${{ env.tag }}
+      draft: false
+      prerelease: false
+      #this can be undone. example: git push origin :refs/tags/1.6
+   - name: Store upload url for assets
+     run: |
+      #echo straight will not escape {}
+      a=${{ steps.create_release.outputs.upload_url }}
+      echo -n ${a} > 1.txt
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      echo "proj=${name}" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: https://uploads.github.com/repos/colin-i/test/releases/67484178/assets{?name,label}
+      asset_path: ./1.txt
+      asset_name: ${{ env.proj }}
+      asset_content_type: text/plain
--- /dev/null
+++ pyaudioo-1/.github/workflows/rpm.yml
@@ -0,0 +1,38 @@
+on:
+ workflow_dispatch:
+  inputs:
+   ppa:
+    description: "ppa sufix"
+
+jobs:
+ rpbuild:
+  runs-on: ubuntu-22.04 #focal alien is not testing ok on docker fedora
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #get deb
+      arh=`cat debian/control | grep ^Architecture | cut -d ' ' -f2` #all
+      arh_lp=amd64
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
+      #dist=`cat debian/changelog | head -1 | grep -Poe "[^ ]*(?=;)"`
+      if [ ! -e "lp2.py" ]; then
+       wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
+      fi
+      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} ${arh_lp})
+      wget ${OUTPUT}/+files/${name}_${version}_${arh}.deb -O ${name}.deb
+      #make rpm
+      mkdir out
+      cd out
+      #sudo apt update
+      sudo apt install alien
+      sudo alien -rk ../${name}.deb
+      fname=`ls`
+      mv ${fname} ../
+      echo "file=${fname}" >> $GITHUB_ENV
+   - name: artifact
+     uses: actions/upload-artifact@v3
+     with:
+      name: rpm
+      path: ./${{ env.file }}
