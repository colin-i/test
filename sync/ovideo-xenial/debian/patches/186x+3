Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ovideo (1-186x+3) xenial; urgency=medium
 .
   * Optimization
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-04-21

--- ovideo-1.orig/arh/pub
+++ ovideo-1/arh/pub
@@ -2,4 +2,5 @@
 ~/test/debinit2 "${1}" && \
 ~/test/keyring && \
 ~/test/deb && \
-~/test/publp
+~/test/publp && \
+~/test/publp2
--- ovideo-1.orig/soundrecorder/src/Makefile
+++ ovideo-1/soundrecorder/src/Makefile
@@ -1,6 +1,12 @@
 
+ifndef OCOMP
 OCOMP=o
-syms=-s
+endif
+
+ifndef linkerflags
+linkerflags=-O1 -s
+endif
+
 OFLAGS = inplace_reloc 0
 
 projname=soundrecorder
@@ -17,7 +23,7 @@ ounused:
 	ounused ${logname}
 
 link:
-	i686-w64-mingw32-ld ${syms} ${objname} -o ${wprojname} -entry record \
+	i686-w64-mingw32-ld ${linkerflags} ${objname} -o ${wprojname} -entry record \
 		 -lmsvcrt -lkernel32 -lwinmm -luser32
 
 %: %.s
--- ovideo-1.orig/soundrecorder/src/soundrecorder.s
+++ ovideo-1/soundrecorder/src/soundrecorder.s
@@ -62,7 +62,7 @@ function record_options(sd file)
 
     const max_options_length=100
 
-    chars text#max_options_length
+    char text#max_options_length
     ss options_text^text
 
     if len>=(max_options_length)
@@ -78,7 +78,7 @@ function record_options(sd file)
         call errors(readerr)
         return 0
     endif
-    chars spc=" "
+    char spc=" "
 
     ss safe
     set safe options_text
@@ -184,7 +184,7 @@ function record_fileandsizes(sd thread_i
     sd tm
     setcall tm time()
     import "_sprintf" sprintf
-    chars filename_data#100
+    char filename_data#100
     str filename^filename_data
     str format="%u.wav"
     call sprintf(filename,format,tm)
@@ -206,24 +206,24 @@ endfunction
 function record_got_file(sd file,sd thread_id)
 #const _RIFF^riff
 const _RIFF=!
-    chars riff={R,I,F,F}
+    char riff={R,I,F,F}
     data riffsize#1
 
-    chars WAVE={W,A,V,E}
-    chars *fmt={f,m,t,Space}
+    char WAVE={W,A,V,E}
+    char *fmt={f,m,t,Space}
     data fmtsize#1
     #WAVEFORMATEX
-    chars wFormatTag={WAVE_FORMAT_PCM,0}
-    chars nChannels={1,0}
+    char wFormatTag={WAVE_FORMAT_PCM,0}
+    char nChannels={1,0}
     data nSamplesPerSec#1
     data nAvgBytesPerSec#1
-    chars nBlockAlign={2,0}
-    chars wBitsPerSample={16,0}
+    char nBlockAlign={2,0}
+    char wBitsPerSample={16,0}
     #EX
     #no extra data, simple PCM-format used
-    chars *cbSize={0,0}
+    char *cbSize={0,0}
 
-    chars datatag={d,a,t,a}
+    char datatag={d,a,t,a}
     data datasize#1
 
 #const RIFF_^RIFF
@@ -464,7 +464,7 @@ function record_dialog()
     import "__getch" getch
     call getch()
 
-    chars nl={0xa,0}
+    char nl={0xa,0}
     str newline^nl
 
     call printf(newline)
--- ovideo-1.orig/src/Makefile
+++ ovideo-1/src/Makefile
@@ -1,7 +1,13 @@
 
-platform = lin
+ifndef OCOMP
 OCOMP=o
-syms=-s
+endif
+
+ifndef linkerflags
+linkerflags=-O1 -s
+endif
+
+platform = lin
 
 ifeq (${platform},win)
 	OFLAGS = inplace_reloc 0 include_sec 1 ${OFLAGSEXTRA}
@@ -81,14 +87,14 @@ share:
 #for mxf, gstreamer0.10-plugins-bad was deleted at ubuntu
 
 #		export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig/:${PKG_CONFIG_PATH}; \
-#		$(LD) ${syms} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${obs} -o ${projname} -lc -lm `pkg-config --libs gtk+-2.0 gstreamer-pbutils-1.0 gstreamer-app-1.0` -ljpeg -lsoup-2.4 -lasound -lgthread-2.0; \
+#		$(LD) ${linkerflags} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${obs} -o ${projname} -lc -lm `pkg-config --libs gtk+-2.0 gstreamer-pbutils-1.0 gstreamer-app-1.0` -ljpeg -lsoup-2.4 -lasound -lgthread-2.0; \
 #cc because -pthread not for ld
 #nostdlib because is complaining about main
 lnk:
 	if [ "${platform}" = "lin" ]; then \
-		$(CC) -nostdlib ${syms} ${obs} -o ${items_prefix}${projname} `pkg-config --libs gtk+-2.0 gstreamer-pbutils-0.10 gstreamer-interfaces-0.10 gstreamer-app-0.10` -lsoup-2.4 -ljpeg -lasound -lm -lpthread -lc; \
+		$(CC) -nostdlib ${linkerflags} ${obs} -o ${items_prefix}${projname} `pkg-config --libs gtk+-2.0 gstreamer-pbutils-0.10 gstreamer-interfaces-0.10 gstreamer-app-0.10` -lsoup-2.4 -ljpeg -lasound -lm -lpthread -lc; \
 	else \
-		i686-w64-mingw32-ld --large-address-aware ${syms} ${obs} -o ${wprojname} -entry _start --start-group \
+		i686-w64-mingw32-ld --large-address-aware ${linkerflags} ${obs} -o ${wprojname} -entry _start --start-group \
 		`dpkg -L mingw-w64-i686-dev | grep '\.a' | sed 's/..$$//' | grep -o '[^\/]*$$' | sed 's/^lib/-l/' | xargs echo` \
 		--end-group -L`echo ~`/.wine/drive_c/gstreamer-sdk/0.10/x86/lib/ \
 		-lgtk-win32-2.0 -lgdk-win32-2.0 -lgdk_pixbuf-2.0 -lglib-2.0 -lgobject-2.0 -lgio-2.0 -lgthread-2.0 \
@@ -140,4 +146,4 @@ uninstall:
 
 .NOTPARALLEL:
 
-#make compile prefix=/usr && make link syms= LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage items_prefix=/home/bc/v/ovideo-1/src/
+#make compile prefix=/usr && make link linkerflags= LD=/home/bc/Desktop/out/LD-.glibc2.27-x86_64.AppImage items_prefix=/home/bc/v/ovideo-1/src/
--- ovideo-1.orig/src/_capture/capture.s
+++ ovideo-1/src/_capture/capture.s
@@ -413,23 +413,23 @@ endfunction
 import "file_write" file_write
 
 function capture_left_string()
-    chars c#dword_null
+    char c#dword_null
     return #c
 endfunction
 function capture_top_string()
-    chars c#dword_null
+    char c#dword_null
     return #c
 endfunction
 function capture_width_string()
-    chars c#dword_null
+    char c#dword_null
     return #c
 endfunction
 function capture_height_string()
-    chars c#dword_null
+    char c#dword_null
     return #c
 endfunction
 function capture_size_string()
-    chars c#dword_null
+    char c#dword_null
     return #c
 endfunction
 import "file_write_string" file_write_string
@@ -1141,7 +1141,7 @@ function capture_raw_files(sd output_fil
         endelse
 
         importx "_sprintf" sprintf
-        chars outfile_data#100
+        char outfile_data#100
         str outfile^outfile_data
         str outformat="%s.%u"
         call sprintf(outfile,outformat,output_file,files)
@@ -1202,7 +1202,7 @@ function capture_raw_read_file(sd file,s
     ss filepath
     set filepath path
     add filepath sz
-    chars delim="."
+    char delim="."
     setcall sz valinmemsens(filepath,sz,delim) #,(BACKWARD)
     sub filepath sz
     set filepath# 0
--- ovideo-1.orig/src/_dif/dif~lin.s
+++ ovideo-1/src/_dif/dif~lin.s
@@ -311,7 +311,7 @@ function capture_alt_thread_proc(sd *noA
     while 1==1
         const STDIN_FILENO=0
         const fd_set_size=128
-        chars filedescriptor_set#fd_set_size
+        char filedescriptor_set#fd_set_size
         data fds^filedescriptor_set
         call setmemzero(fds,(fd_set_size))
         #define __FD_SET(d, set) \
--- ovideo-1.orig/src/_dif/dif~win.s
+++ ovideo-1/src/_dif/dif~win.s
@@ -41,7 +41,7 @@ function movetoScriptfolder(data forward
 	setcall err Scriptfullpath(ptrpath)
 	if err==noerr
 		data pointer#1
-		chars z=0
+		char z=0
 		setcall pointer endoffolders(path)
 		set pointer# z
 		setcall err dirch(path)
@@ -57,9 +57,9 @@ import "slen" slen
 
 
 #true if match or false
-Function filepathdelims(chars chr)
-        Chars bslash="\\"
-        Chars slash="/"
+Function filepathdelims(char chr)
+        char bslash="\\"
+        char slash="/"
         Data true=TRUE
         Data false=FALSE
         If chr==bslash
@@ -303,15 +303,15 @@ function capture_alternative_prepare(sd
     data biSize=40
     data biWidth#1
     data biHeight#1
-    chars *biPlanes={1,0}
-    chars *biBitCount={24,0}
+    char *biPlanes={1,0}
+    char *biBitCount={24,0}
     data *biCompression=0
     data biSizeImage#1
     data *biXPelsPerMeter=0
     data *biYPelsPerMeter=0
     data *biClrUsed=0
     data *biClrImportant=0
-    chars *bmiColors=0
+    char *bmiColors=0
 
     data bitmap^biSize
     set biWidth pix_width
@@ -431,7 +431,7 @@ function fileiteration(sd p_foldername,s
     set path foldername
     add path folderlen
     dec path
-    chars bslash="\\"
+    char bslash="\\"
     set path# bslash
     inc path
     call cpymem(path,spec,speclen)
@@ -442,11 +442,11 @@ function fileiteration(sd p_foldername,s
     data *time_access#2
     data *time_write#2
     data *size#1
-    chars name#260
+    char name#260
 
     data file_info^attrib
     str fname^name
-    chars reserve_name#260
+    char reserve_name#260
     str reserve^reserve_name
 
     importx "__findfirst64i32" findfirst
@@ -589,13 +589,13 @@ function shutdown()
     importx "_CreateProcessA@40" CreateProcess
     import "setmemzero" setmemzero
     const startupsize=68
-    chars startup#startupsize
+    char startup#startupsize
     str startupInfo^startup
     call setmemzero(startupInfo,(startupsize))
 
     data hprocess#1
     data hthread#1
-    chars *rest_hproc#16-4-4
+    char *rest_hproc#16-4-4
 
     data procinfo^hprocess
 
@@ -792,15 +792,15 @@ function sound_preview_init()
     #
     sd value
     #WAVEFORMATEX
-    chars wFormatTag={WAVE_FORMAT_PCM,0}
-    chars nChannels#2
+    char wFormatTag={WAVE_FORMAT_PCM,0}
+    char nChannels#2
     data nSamplesPerSec#1
     data nAvgBytesPerSec#1
-    chars nBlockAlign#2
-    chars wBitsPerSample#2
+    char nBlockAlign#2
+    char wBitsPerSample#2
     #EX
     #no extra data, simple PCM-format used
-    chars *cbSize={0,0}
+    char *cbSize={0,0}
     #
     import "int_into_short" int_into_short
     data WAVEFORMATEX^wFormatTag
--- ovideo-1.orig/src/_exec/capture/save.s
+++ ovideo-1/src/_exec/capture/save.s
@@ -64,9 +64,9 @@ function recSignals(data bus,data dest)
 endfunction
 
 function capture_location()
-const capture_chars_start=!
-	chars folder="captures/"
-const capture_chars=!-capture_chars_start-1
+const capture_char_start=!
+	char folder="captures/"
+const capture_char=!-capture_char_start-1
 	return #folder
 endfunction
 #ogg
@@ -82,7 +82,7 @@ endfunction
 
 import "move_to_home_core" move_to_home_core
 function capture_path(ss format,sd extrabool,sd extranumber)
-	chars capture_data#capture_chars+dword_max+1+dword_max+1+format_max+1
+	char capture_data#capture_char+dword_max+1+dword_max+1+format_max+1
 	ss capture_str^capture_data
 	ss folder
 	setcall folder capture_location()
@@ -163,7 +163,7 @@ function save_stream_dest_ready(str dest
     data flagA=audio
     data flagVA=audiovideo
 
-    chars src_prop_data#20
+    char src_prop_data#20
 
     str format#1
     str sr#1
@@ -183,10 +183,10 @@ function save_stream_dest_ready(str dest
     set m1 video
     if streams==flagVA
         str makename="%s."
-        chars save_secname_data#15
+        char save_secname_data#15
         str save_src_name^save_secname_data
         call sprintf(save_src_name,makename,srcname)
-        chars save_va_data#40
+        char save_va_data#40
         str save_va^save_va_data
         ss secformat
         setcall secformat save_get_sec_format()
@@ -264,7 +264,7 @@ endfunction
 import "collect_info" collect_info
 #v
 function info_save_stream()
-    chars rec="recording from"
+    char rec="recording from"
 
     str capture^rec
     data *forward^save_stream
--- ovideo-1.orig/src/_exec/init.s
+++ ovideo-1/src/_exec/init.s
@@ -59,39 +59,39 @@ endfunction
 #e
 function init_user_sys()
 	const start=!
-	chars a="capture"
+	char a="capture"
 	const biggest_string=7
 	const d1=!
-	chars *={0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00}
+	char *={0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00}
 	const d11=!-d1
-	chars *="jpeg"
+	char *="jpeg"
 	const d2=!
-	chars *={0x20,0x03,0x00,0x00}
+	char *={0x20,0x03,0x00,0x00}
 	const d22=!-d2
-	chars *="mpeg"
+	char *="mpeg"
 	const d3=!
-	chars *={0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00}
+	char *={0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00}
 	const d33=!-d3
-	chars *="search"
+	char *="search"
 	const d4=!
-	chars *={0x73,0x72,0x63,0x3d,0x22,0x00,0x22,0x00,0x00,0x00}
+	char *={0x73,0x72,0x63,0x3d,0x22,0x00,0x22,0x00,0x00,0x00}
 	const d44=!-d4
-	chars *="sound"
+	char *="sound"
 	const d5=!
-	chars *={0x02,0x00,0x00,0x00,0x80,0xbb,0x00,0x00,0x10,0x00,0x00,0x00}
+	char *={0x02,0x00,0x00,0x00,0x80,0xbb,0x00,0x00,0x10,0x00,0x00,0x00}
 	const d55=!-d5
-	chars *="stage"
+	char *="stage"
 	const d6=!
-	chars *={0x0a,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00}
+	char *={0x0a,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00}
 	const d66=!-d6
-	chars *="update"
+	char *="update"
 	const d7=!
-	chars *={0x01,0x00,0x00,0x00}
+	char *={0x01,0x00,0x00,0x00}
 	const d77=!-d7
 	sd b=!-start
 	sd c^a
 	add b c
-	chars e={d11,d22,d33,d44,d55,d66,d77}
+	char e={d11,d22,d33,d44,d55,d66,d77}
 	ss f^e
 	sd err=noerror
 	while c!=b
@@ -131,7 +131,7 @@ function init_dir(sd f)
 endfunction
 
 function init_sys_file(sd f,sd data,sd sz,sv perr)
-	chars buf#biggest_string+1+4+1
+	char buf#biggest_string+1+4+1
 	call sprintf(#buf,"%s.data",f)
 	sd is
 	setcall is access(#buf,(F_OK))
--- ovideo-1.orig/src/_exec/mediainfo.s
+++ ovideo-1/src/_exec/mediainfo.s
@@ -90,7 +90,7 @@ function on_discover(data *discoverer,da
 
             importx "_sprintf" sprintf
             str infodispformat="%s%s%s %s: "
-            chars infodisp#40
+            char infodisp#40
             str infotext^infodisp
 
             call sprintf(infotext,infodispformat,v,conjunction,a,passdata#)
@@ -187,7 +187,7 @@ function collect_info(str intrusion)
 endfunction
 
 function gather_info()
-    chars detected="detected at"
+    char detected="detected at"
 
     str discover^detected
     data *noforward=0
--- ovideo-1.orig/src/_exec/mix.s
+++ ovideo-1/src/_exec/mix.s
@@ -63,7 +63,7 @@ function mix_timeout(sd *data)
 	setcall text gtk_entry_get_text(widget)
 	sd pos
 	sd ptr_pos^pos
-	chars onedot={Period,0}
+	char onedot={Period,0}
 	import "slen" slen
 	setcall pos slen(text)
 	if pos==3
@@ -203,7 +203,7 @@ function mix_launch()
     import "save_get_sec_format" save_get_sec_format
     import "save_get_audio_format" save_get_audio_format
 
-    chars audio_vars_data#40
+    char audio_vars_data#40
 
     #let first space otherelse will be pipe start unable
     ss audiogetformat=" uridecodebin uri=\"%s\"%s"
--- ovideo-1.orig/src/_exec/start.s
+++ ovideo-1/src/_exec/start.s
@@ -28,48 +28,48 @@ import "movetoScriptfolder" movetoScript
 #returns the stage function for set click on stage button
 function buttons_combinations()
     import "stage_start" stage_start
-    chars button="prepare.bmp"
-    chars *="Media edit panel"
+    char button="prepare.bmp"
+    char *="Media edit panel"
     data match^stage_start
     data *=0
 
     import "play_click" play_click
-    chars *="play.bmp"
-    chars *="Play the media"
+    char *="play.bmp"
+    char *="Play the media"
     data *^play_click
     import "info_save_stream" info_save_stream
-    chars *="save.bmp"
-    chars *="Save the stream to a file"
+    char *="save.bmp"
+    char *="Save the stream to a file"
     data *^info_save_stream
     import "gather_info" gather_info
-    chars *="info.bmp"
-    chars *="Detect if the stream has audio or video"
+    char *="info.bmp"
+    char *="Detect if the stream has audio or video"
     data *^gather_info
     import "stop" stop
-    chars *="close.bmp"
-    chars *="Stop the play or the save actions"
+    char *="close.bmp"
+    char *="Stop the play or the save actions"
     data *^stop
     data *=0
 
     import "search_parse" search_parse
-    chars *="search.bmp"
-    chars *="Search for all streams at the uri using the rules from the search preferences"
+    char *="search.bmp"
+    char *="Search for all streams at the uri using the rules from the search preferences"
     data *^search_parse
     import "show_preferences" show_preferences
-    chars *="preferences.bmp"
-    chars *="Display the search preferences window"
+    char *="preferences.bmp"
+    char *="Display the search preferences window"
     data *^show_preferences
     data *=0
 
     import "mix_start" mix_start
-    chars *="mix.bmp"
-    chars *="Mux video and audio from two uri-s"
+    char *="mix.bmp"
+    char *="Mux video and audio from two uri-s"
     data *^mix_start
     data *=0
 
     import "view_use_file" view_use_file
-    chars *="help.bmp"
-    chars *="View informations about the program"
+    char *="help.bmp"
+    char *="View informations about the program"
     data *^view_use_file
     data *=0
 
@@ -181,7 +181,7 @@ function initfn()
     data window#1
     setcall window gtk_window_new(GTK_WINDOW_TOPLEVEL)
 
-    chars programname="OStream"
+    char programname="OStream"
     str program^programname
     call gtk_window_set_title(window,program)
 
@@ -194,7 +194,7 @@ function initfn()
     call gtk_window_set_default_size(window,width,height)
 
     data ptr_gtk_main_quit^gtk_main_quit
-    chars destr="destroy"
+    char destr="destroy"
     str destroy^destr
     call g_signal_connect_data(window,destroy,ptr_gtk_main_quit,null,null,null)
 
--- ovideo-1.orig/src/_exec/uristream.s
+++ ovideo-1/src/_exec/uristream.s
@@ -38,7 +38,7 @@ const u64bytes=20
 
 function ldiv_lowdivisor(sv p,sd dividendlow,sd dividendhigh,sd divisor)
 	#sd input#(4/:*3)+3
-	chars input#u64bytes+1
+	char input#u64bytes+1
 	ss instr^input
 
 	#%llu linux ok
@@ -49,7 +49,7 @@ function ldiv_lowdivisor(sv p,sd dividen
 
 	# As result can be very large store it in string
 	#sd quotient#(4/:*3)+3
-	chars quotient#u64bytes
+	char quotient#u64bytes
 	sd rem
 	ss dest;set dest instr
 	addcall dest strlen(instr)
@@ -123,13 +123,13 @@ function ldiv_lowdivisor_s(ss outstr,ss
 endfunction
 function memto64(sd in,ss dest,sd out)
 	const hconv64=16+1
-	chars h#hconv64
+	char h#hconv64
 	#sd h#(4/:*2)+3
 	ss hex^h
 	add hex (hconv64-1)
 	sd sz;set sz hex
 	set hex# 0
-	chars quotient#u64bytes
+	char quotient#u64bytes
 	sd in2;set in2 #quotient
 	sd rem
 
@@ -249,7 +249,7 @@ function streamtimer(data *data)
 			str poserr="Could not query current position."
 			call texter(poserr)
 		else
-			chars printduration#10+1+2+1+2+3+10+1+2+1+2+1
+			char printduration#10+1+2+1+2+3+10+1+2+1+2+1
 			str print^printduration
 
 			data durH#1
--- ovideo-1.orig/src/_include/files/olang.h
+++ ovideo-1/src/_include/files/olang.h
@@ -11,8 +11,8 @@ const void=0
 const dword_max=10
 const format_max=6
 
-#Const charsnullcompilationstyle=1
-#-charsnullcompilationstyle
+#Const charnullcompilationstyle=1
+#-charnullcompilationstyle
 Const dword_null=1+dword_max
 Const sign_int_null=1+10+1
 #Const sign_int_null_dwords=sign_int_null/4
--- ovideo-1.orig/src/_prepare/effect/reveal.s
+++ ovideo-1/src/_prepare/effect/reveal.s
@@ -38,32 +38,32 @@ function stage_cover_panel_open_fn(sd p_
     set user_data p_data#
 
     import "stage_cover" stage_cover
-    chars cover_lot="cover.bmp"
-    chars *="Uncover/Cover sides effects"
+    char cover_lot="cover.bmp"
+    char *="Uncover/Cover sides effects"
     data *^stage_cover
     #
-    chars *="center_cover.bmp"
-    chars *="Uncover/Cover center lines effects"
+    char *="center_cover.bmp"
+    char *="Uncover/Cover center lines effects"
     data *^stage_reveal_centerline
     #
     import "stage_reveal_rectangle" stage_reveal_rectangle
-    chars *="rectangle_cover.bmp"
-    chars *="Uncover/Cover rectangle effects"
+    char *="rectangle_cover.bmp"
+    char *="Uncover/Cover rectangle effects"
     data *^stage_reveal_rectangle
     #
     import "stage_reveal_diamond" stage_reveal_diamond
-    chars *="diamond_cover.bmp"
-    chars *="Uncover/Cover diamond effects"
+    char *="diamond_cover.bmp"
+    char *="Uncover/Cover diamond effects"
     data *^stage_reveal_diamond
     #
     import "stage_reveal_curve" stage_reveal_curve
-    chars *="curve_cover.bmp"
-    chars *="Uncover/Cover curve effects"
+    char *="curve_cover.bmp"
+    char *="Uncover/Cover curve effects"
     data *^stage_reveal_curve
     #
     import "stage_reveal_diagonal" stage_reveal_diagonal
-    chars *="diagonal_cover.bmp"
-    chars *="Uncover/Cover diagonal effects"
+    char *="diagonal_cover.bmp"
+    char *="Uncover/Cover diagonal effects"
     data *^stage_reveal_diagonal
     #
     data *=0
--- ovideo-1.orig/src/_prepare/frame/frame.s
+++ ovideo-1/src/_prepare/frame/frame.s
@@ -38,68 +38,68 @@ function stage_frame_panel_open_fn(sd p_
     set user_data p_data#
 
     import "stage_save_img" stage_save_img
-    chars frame_lot="img.bmp"
-    chars *="Save the current selection to a file"
+    char frame_lot="img.bmp"
+    char *="Save the current selection to a file"
     data *^stage_save_img
     #
     import "stage_add_centered" stage_add_centered
-    chars *="addcenter.bmp"
-    chars *="Add an image scaled and centered on the selected frame"
+    char *="addcenter.bmp"
+    char *="Add an image scaled and centered on the selected frame"
     data *^stage_add_centered
     #
     import "stage_color_under_image" stage_color_under_image
-    chars *="addmargins.bmp"
-    chars *="Create an image selecting width,height and color, then place over it the selected frame scaled and centered"
+    char *="addmargins.bmp"
+    char *="Create an image selecting width,height and color, then place over it the selected frame scaled and centered"
     data *^stage_color_under_image
     #
     import "stage_scale_img" stage_scale_img
-    chars *="scale.bmp"
-    chars *="Scale the selection to new values"
+    char *="scale.bmp"
+    char *="Scale the selection to new values"
     data *^stage_scale_img
     #
     import "stage_crop" stage_crop
-    chars *="crop.bmp"
-    chars *="Crop the selection"
+    char *="crop.bmp"
+    char *="Crop the selection"
     data *^stage_crop
     #
     import "stage_pencil" stage_pencil
-    chars *="pencil.bmp"
-    chars *="Pencil tool"
+    char *="pencil.bmp"
+    char *="Pencil tool"
     data *^stage_pencil
     #
     import "stage_screenshot" stage_screenshot
-    chars *="screenshot.bmp"
-    chars *="Print screen and add to stage button"
+    char *="screenshot.bmp"
+    char *="Print screen and add to stage button"
     data *^stage_screenshot
     #
     import "stage_brightness" stage_brightness
-    chars *="bright.bmp"
-    chars *="Brighten or darken the selection"
+    char *="bright.bmp"
+    char *="Brighten or darken the selection"
     data *^stage_brightness
     #
     import "stage_overlay" stage_overlay
-    chars *="overlay.bmp"
-    chars *="Add an image over selection"
+    char *="overlay.bmp"
+    char *="Add an image over selection"
     data *^stage_overlay
     #
     import "stage_rotate_left" stage_rotate_left
-    chars *="rotateleft.bmp"
-    chars *="Rotate the selection 90 degrees at left"
+    char *="rotateleft.bmp"
+    char *="Rotate the selection 90 degrees at left"
     data *^stage_rotate_left
     #
     import "stage_rotate_right" stage_rotate_right
-    chars *="rotateright.bmp"
-    chars *="Rotate the selection 90 degrees at right"
+    char *="rotateright.bmp"
+    char *="Rotate the selection 90 degrees at right"
     data *^stage_rotate_right
     #
     import "headline_dialog" headline_dialog
-    chars *="headline.bmp"
-    chars *="Draw headline text"
+    char *="headline.bmp"
+    char *="Draw headline text"
     data *^headline_dialog
     #
     import "stage_lines" stage_lines
-    chars *="resize.bmp"
-    chars *="Add/Remove rows or columns at sides at all stage images"
+    char *="resize.bmp"
+    char *="Add/Remove rows or columns at sides at all stage images"
     data *^stage_lines
     #
     data *=0
--- ovideo-1.orig/src/_prepare/frame/frametime.s
+++ ovideo-1/src/_prepare/frame/frametime.s
@@ -44,7 +44,7 @@ function stage_frame_time_init(sd vbox,s
     setcall length stage_get_fr_length(container)
 
     #convert to string and set to edit
-    chars nr#dword_null
+    char nr#dword_null
     str ptr_nr^nr
     importx "_sprintf" sprintf
     ss dw="%u"
@@ -292,7 +292,7 @@ function stage_split_frame()
     sd noselection=0
     #find the selected unit position
     while cursor!=terminator
-        chars unit_color_data={frame_unit_red,frame_unit_green,frame_unit_blue}
+        char unit_color_data={frame_unit_red,frame_unit_green,frame_unit_blue}
         str unit_color^unit_color_data
         import "cmpmem" cmpmem
         sd memcmp
--- ovideo-1.orig/src/_prepare/frame/imagetools.s
+++ ovideo-1/src/_prepare/frame/imagetools.s
@@ -203,7 +203,7 @@ function headline_dlg(sd action,sd vbox)
         setcall size_x gtk_hbox_new(0,0)
         setcall size_entry gtk_combo_box_text_new()
         call packstart_default(size_x,size_entry)
-        chars str_data#30
+        char str_data#30
         str nr_ascii^str_data
         str format="%u"
         sd nr=10
@@ -618,7 +618,7 @@ function stage_lines_thread_loop()
         setcall totalframes stage_get_frames()
         const imagetoolsbufstart=!
         ss format="Images: %u/%u"
-        chars buf#!-imagetoolsbufstart-2-2+dword_max+dword_max
+        char buf#!-imagetoolsbufstart-2-2+dword_max+dword_max
         str buffer^buf
         call sprintf(buffer,format,img_nr,totalframes)
         call dialog_modal_texter_draw(buffer)
--- ovideo-1.orig/src/_prepare/frame/scale.s
+++ ovideo-1/src/_prepare/frame/scale.s
@@ -103,7 +103,7 @@ function stage_scale_init(sd vbox,sd *di
     setcall width gdk_pixbuf_get_width(pixbuf)
     setcall height gdk_pixbuf_get_height(pixbuf)
 
-    chars dest#sign_int_null
+    char dest#sign_int_null
     str strconv^dest
 
     str format="%u"
--- ovideo-1.orig/src/_prepare/output/all.s
+++ ovideo-1/src/_prepare/output/all.s
@@ -27,10 +27,10 @@ function stage_progress_dialog_inc(sd fr
     mult value frame
     import "stage_get_frames" stage_get_frames
     divcall value stage_get_frames()
-	chars s={_0,Period}
-	chars a#1
-	chars b#1
-	chars *=0
+	char s={_0,Period}
+	char a#1
+	char b#1
+	char *=0
 	set b value
 	rem b 10
 	add b (_0)
@@ -257,7 +257,7 @@ function stage_file_need_fn(sd appsrc)
         setcall buffer gst_app_buffer_new(mem,framesize,free_fn,mem)
 
         ss capsformat="video/x-raw-rgb,width=%u,height=%u,bpp=%u,endianness=4321,red_mask=0xFF000000,green_mask=0xFF0000,blue_mask=0xFF00,framerate=%u/1"
-        chars capsdata#200
+        char capsdata#200
         str gstcaps^capsdata
         sd bpp=stage_bpp
         sd fps
--- ovideo-1.orig/src/_prepare/output/avi.s
+++ ovideo-1/src/_prepare/output/avi.s
@@ -584,9 +584,9 @@ function avi_streamformat(sd file)
     data biSize=40
     data biWidth#1
     data biHeight#1
-    chars *biPlanes={1,0}
-    chars biBitCount={24,0}
-    chars biCompression#4
+    char *biPlanes={1,0}
+    char biBitCount={24,0}
+    char biCompression#4
     data biSizeImage#1
     data *biXPelsPerMeter=0
     data *biYPelsPerMeter=0
@@ -657,11 +657,11 @@ endfunction
 
 #bool
 function avi_streamheader_audio(sd file)
-    chars fccType={a,u,d,s}
+    char fccType={a,u,d,s}
     data *fccHandler=0
     data *dwFlags=0
-    chars *wPriority={0,0}
-    chars *wLanguage={0,0}
+    char *wPriority={0,0}
+    char *wLanguage={0,0}
     data *dwInitialFrames=0
     #blockalign
     data dwScale#1
@@ -723,15 +723,15 @@ endfunction
 
 function avi_streamformat_audio(sd file)
     #WAVEFORMATEX
-    chars wFormatTag={WAVE_FORMAT_PCM,0}
-    chars nChannels={1,0}
+    char wFormatTag={WAVE_FORMAT_PCM,0}
+    char nChannels={1,0}
     data nSamplesPerSec#1
     data nAvgBytesPerSec#1
-    chars nBlockAlign={2,0}
-    chars wBitsPerSample={16,0}
+    char nBlockAlign={2,0}
+    char wBitsPerSample={16,0}
     #EX
     #no extra data, simple PCM-format used
-    chars *cbSize={0,0}
+    char *cbSize={0,0}
 
     data WAVEFORMATEX^wFormatTag
 
@@ -770,7 +770,7 @@ function avi_odml(sd file)
         return 0
     endif
 
-    chars dmlh={d,m,l,h}
+    char dmlh={d,m,l,h}
     data *size=4
     data value#1
 
--- ovideo-1.orig/src/_prepare/output/mkv.s
+++ ovideo-1/src/_prepare/output/mkv.s
@@ -100,32 +100,32 @@ endfunction
 function mkvfile_headers(sd file)
     #Extensible Binary Meta Language
     #EBML Header, level 0
-    chars EBML={0x1A,0x45,0xDF,0xA3}
-    chars EBML_size#1
-    chars EBMLVersion={0x42,0x86}
-    chars *EBMLVersion_size=0x81
-    chars *EBMLVersion_value=1
-    chars *EBMLReadVersion={0x42,0xF7}
-    chars *EBMLReadVersion_size=0x81
-    chars *EBMLReadVersion_value=1
-    chars *EBMLMaxIDLength={0x42,0xF2}
-    chars *EBMLMaxIDLength_size=0x81
-    chars *EBMLMaxIDLength_value=4
-    chars *EBMLMaxSizeLength={0x42,0xF3}
-    chars *EBMLMaxSizeLength_size=0x81
-    chars *EBMLMaxSizeLength_value=8
-    chars *DocType={0x42,0x82}
-    chars *DocType_size=0x80|8
-    chars *DocType_value={m,a,t,r,o,s,k,a}
-    chars *DocTypeVersion={0x42,0x87}
-    chars *DocTypeVersion_size=0x81
-    chars *DocTypeVersion_value=2
-    chars *DocTypeReadVersion={0x42,0x85}
-    chars *DocTypeReadVersion_size=0x81
-    chars DocTypeReadVersion_value=2
+    char EBML={0x1A,0x45,0xDF,0xA3}
+    char EBML_size#1
+    char EBMLVersion={0x42,0x86}
+    char *EBMLVersion_size=0x81
+    char *EBMLVersion_value=1
+    char *EBMLReadVersion={0x42,0xF7}
+    char *EBMLReadVersion_size=0x81
+    char *EBMLReadVersion_value=1
+    char *EBMLMaxIDLength={0x42,0xF2}
+    char *EBMLMaxIDLength_size=0x81
+    char *EBMLMaxIDLength_value=4
+    char *EBMLMaxSizeLength={0x42,0xF3}
+    char *EBMLMaxSizeLength_size=0x81
+    char *EBMLMaxSizeLength_value=8
+    char *DocType={0x42,0x82}
+    char *DocType_size=0x80|8
+    char *DocType_value={m,a,t,r,o,s,k,a}
+    char *DocTypeVersion={0x42,0x87}
+    char *DocTypeVersion_size=0x81
+    char *DocTypeVersion_value=2
+    char *DocTypeReadVersion={0x42,0x85}
+    char *DocTypeReadVersion_size=0x81
+    char DocTypeReadVersion_value=2
 
     #segment, level 0
-    chars *SegmentElement={0x18,0x53,0x80,0x67}
+    char *SegmentElement={0x18,0x53,0x80,0x67}
 
     data f^mkv_segment
 
@@ -160,7 +160,7 @@ function mkv_segment(sd file,sd read_siz
 
     #seek head
     #level 1
-    chars SeekHead={0x11,0x4D,0x9B,0x74}
+    char SeekHead={0x11,0x4D,0x9B,0x74}
 
     data f^mkv_seekhead
 
@@ -183,7 +183,7 @@ function mkv_segment(sd file,sd read_siz
     endif
 
     #level 1
-    chars Info={0x15,0x49,0xA9,0x66}
+    char Info={0x15,0x49,0xA9,0x66}
 
     data fn^mkv_info
 
@@ -206,7 +206,7 @@ function mkv_segment(sd file,sd read_siz
     endif
 
     #level 1
-    chars Tracks={0x16,0x54,0xAE,0x6B}
+    char Tracks={0x16,0x54,0xAE,0x6B}
 
     data fnc^mkv_track
 
@@ -218,7 +218,7 @@ function mkv_segment(sd file,sd read_siz
     endif
 
     #clusters
-    chars Cluster={0x1F,0x43,0xB6,0x75}
+    char Cluster={0x1F,0x43,0xB6,0x75}
     data p_fn^mkv_cluster
     data p_start^Cluster
     data p_end^p_fn
@@ -269,7 +269,7 @@ function mkv_seekhead_fn(sd action,sd fi
         #seek entry KaxInfo
         data info#1
         data ptr_info^info
-        chars KaxInfo={0x15,0x49,0xA9,0x66}
+        char KaxInfo={0x15,0x49,0xA9,0x66}
         sd todata^KaxInfo
 
         sd bool
@@ -281,7 +281,7 @@ function mkv_seekhead_fn(sd action,sd fi
         #seek entry KaxTracks
         data tracks#1
         data ptr_tracks^tracks
-        chars KaxTracks={0x16,0x54,0xAE,0x6B}
+        char KaxTracks={0x16,0x54,0xAE,0x6B}
         sd dodata^KaxTracks
 
         setcall bool seek_entry(dodata#,file,ptr_tracks)
@@ -320,14 +320,14 @@ endfunction
 
 #bool
 function seek_entry(sd value,sd file,sd ptr_pointer)
-    chars Seek={0x4D,0xBB}
-    chars *Seek_size=0x80+2+1+4+2+1+4
-    chars *SeekID={0x53,0xAB}
-    chars *SeekID_size=0x84
+    char Seek={0x4D,0xBB}
+    char *Seek_size=0x80+2+1+4+2+1+4
+    char *SeekID={0x53,0xAB}
+    char *SeekID_size=0x84
     data SeekID_value#1
-    chars *SeekPosition={0x53,0xAC}
-    chars *SeekPosition_size=0x84
-    chars SeekPosition_value#4
+    char *SeekPosition={0x53,0xAC}
+    char *SeekPosition_size=0x84
+    char SeekPosition_value#4
 
     set SeekID_value value
 
@@ -376,29 +376,29 @@ function mkv_info(sd file)
     endif
 
 const _SegmentUID=!
-    chars SegmentUID={0x73,0xA4}
-    chars *SegmentUID_size=0x80|16
+    char SegmentUID={0x73,0xA4}
+    char *SegmentUID_size=0x80|16
     data SegmentUID_value#4
-    chars *TimecodeScale={0x2A,0xD7,0xB1}
-    chars *TimecodeScale_size=0x84
+    char *TimecodeScale={0x2A,0xD7,0xB1}
+    char *TimecodeScale_size=0x84
     data TimecodeScale_value#1
-    chars *Duration={0x44,0x89}
+    char *Duration={0x44,0x89}
     #unsigned integer
-    chars *Duration_size=0x84
+    char *Duration_size=0x84
 const ptr_Duration=!
     data Duration_value#1
-    chars *DateUTC={0x44,0x61}
-    chars *DateUTC_size=0x80|8
+    char *DateUTC={0x44,0x61}
+    char *DateUTC_size=0x80|8
     data DateUTC_value_high#1
     data DateUTC_value_low#1
-    chars *MuxingApp={0x4D,0x80}
-    chars MuxingApp_size#1
+    char *MuxingApp={0x4D,0x80}
+    char MuxingApp_size#1
 const _MuxingApp=!
-    chars *MuxingApp_value={O,A,p,p,l,i,c,a,t,i,o,n,s}
+    char *MuxingApp_value={O,A,p,p,l,i,c,a,t,i,o,n,s}
 const App=!-_MuxingApp
-    chars *WritingApp={0x57,0x41}
-    chars WritingApp_size#1
-    chars WritingApp_value={O,A,p,p,l,i,c,a,t,i,o,n,s}
+    char *WritingApp={0x57,0x41}
+    char WritingApp_size#1
+    char WritingApp_value={O,A,p,p,l,i,c,a,t,i,o,n,s}
 
     const WritingApp_value_^WritingApp_value
     data info_sz=WritingApp_value_-_SegmentUID+App
@@ -490,7 +490,7 @@ import "file_sizeofseek_offset_plus_size
 
 function mkv_track(sd file,sd size,sd filepos)
     #level 2
-    chars TrackEntry=0xAE
+    char TrackEntry=0xAE
 
     data f^mkv_track_entry
     data start^TrackEntry
@@ -546,7 +546,7 @@ const TrackNumber_audio=2
 const bitmapInfoHeader_size=40
 
 function mkv_track_entry(sd file,sd *size,sd *filepos)
-    chars CodecID=0x86
+    char CodecID=0x86
     data f^mkv_codecid
 
     data start^CodecID
@@ -560,32 +560,32 @@ function mkv_track_entry(sd file,sd *siz
     endif
 
 ##############
-    chars TrackNumber=0xD7
-    chars *TrackNumber_size=0x81
-    chars *TrackNumber_value=TrackNumber_video
-    chars *TrackUID={0x73,0xC5}
-    chars *TrackUID_size=0x81
-    chars *TrackUID_value=TrackNumber_video
-    chars *TrackType=0x83
-    chars *TrackType_size=0x81
-    chars *TrackType_value=1
+    char TrackNumber=0xD7
+    char *TrackNumber_size=0x81
+    char *TrackNumber_value=TrackNumber_video
+    char *TrackUID={0x73,0xC5}
+    char *TrackUID_size=0x81
+    char *TrackUID_value=TrackNumber_video
+    char *TrackType=0x83
+    char *TrackType_size=0x81
+    char *TrackType_value=1
     #video type=1
-    chars *FlagLacing=0x9C
-    chars *FlagLacing_size=0x81
-    chars *FlagLacing_value=0
+    char *FlagLacing=0x9C
+    char *FlagLacing_size=0x81
+    char *FlagLacing_value=0
     #no lacing used
-    chars *Name={0x53,0x6E}
-    chars *Name_size=0x85
+    char *Name={0x53,0x6E}
+    char *Name_size=0x85
 const track_last_=!
-    chars *Name_value={V,i,d,e,o}
+    char *Name_value={V,i,d,e,o}
 
-    chars *CodecPrivate={0x63,0xA2}
-    chars *CodecPrivate_size=0x80+bitmapInfoHeader_size
+    char *CodecPrivate={0x63,0xA2}
+    char *CodecPrivate_size=0x80+bitmapInfoHeader_size
     data *biSize=bitmapInfoHeader_size
     data biWidth#1
     data biHeight#1
-    chars *biPlanes={1,0}
-    chars *biBitCount={24,0}
+    char *biPlanes={1,0}
+    char *biBitCount={24,0}
     data *biCompression=BI_RGB
     data biSizeImage#1
     data *biXPelsPerMeter=0
@@ -628,7 +628,7 @@ const track_last_=!
     endif
 
     #add the video track
-    chars Video=0xE0
+    char Video=0xE0
     data f_vd^mkv_track_video_entry
     data start_vd^Video
     data end_vd^f_vd
@@ -641,26 +641,26 @@ endfunction
 
 function mkv_track_video_entry(sd file,sd *size,sd *filepos)
     #level 3
-    chars PixelWidth=0xB0
-    chars *PixelWidth_size=0x84
+    char PixelWidth=0xB0
+    char *PixelWidth_size=0x84
     data PixelWidth_value#1
-    chars PixelHeight=0xBA
-    chars *PixelHeight_size=0x84
+    char PixelHeight=0xBA
+    char *PixelHeight_size=0x84
     data PixelHeight_value#1
-    chars DisplayWidth={0x54,0xB0}
-    chars *DisplayWidth_size=0x84
+    char DisplayWidth={0x54,0xB0}
+    char *DisplayWidth_size=0x84
     data DisplayWidth_value#1
-    chars *DisplayHeight={0x54,0xBA}
-    chars *DisplayHeight_size=0x84
+    char *DisplayHeight={0x54,0xBA}
+    char *DisplayHeight_size=0x84
     data DisplayHeight_value#1
-    chars *FrameRate={0x23,0x83,0xE3}
-    chars *FrameRate_size=0x84
+    char *FrameRate={0x23,0x83,0xE3}
+    char *FrameRate_size=0x84
 const video_track_last_=!
     data FrameRate_value#1
 
-    chars *ColourSpace={0x2E,0xB5,0x24}
-    chars *ColourSpace_size=0x84
-    chars *ColourSpace_value={I,_4,_2,_0}
+    char *ColourSpace={0x2E,0xB5,0x24}
+    char *ColourSpace_size=0x84
+    char *ColourSpace_value={I,_4,_2,_0}
 
     sd err
     sd io
@@ -784,8 +784,8 @@ function mkv_codecid(sd file,sd size,sd
 endfunction
 
 function mkv_cluster(sd file,sd read_size,sd file_pos)
-    chars Timecode=0xE7
-    chars *Timecode_size=0x84
+    char Timecode=0xE7
+    char *Timecode_size=0x84
     data Timecode_value#1
 
     #data p_nomoreframes%ptr_nomoreframes
@@ -849,7 +849,7 @@ function mkv_cluster(sd file,sd read_siz
                 set loop 0
             endif
         else
-            chars SimpleBlock=0xA3
+            char SimpleBlock=0xA3
             data f^mkv_simpleblock
 
             data start^SimpleBlock
@@ -944,11 +944,11 @@ function mkv_simpleblock(sd file,sd size
 
     const SimpleBlock_Flags_Keyframe=0x80
 
-    chars Track_Number#1
-    chars Timecode_high#1
-    chars Timecode_low#1
+    char Track_Number#1
+    char Timecode_high#1
+    char Timecode_low#1
     #cluster relative, signed int16
-    chars Flags#1
+    char Flags#1
 
     #cluster time
     sd frames
@@ -1669,21 +1669,21 @@ function mkv_codecid_data(sd io,sd arg,s
         setcall encoder stage_file_get_mkv_encoder()
         if encoder==(format_mkv_i420)
                 const codecid_i420_sz=1+1+1+1+1+1+1+1+1+1+1+1+1+1
-            chars CodecID_i420_value={V,_,U,N,C,O,M,P,R,E,S,S,E,D}
+            char CodecID_i420_value={V,_,U,N,C,O,M,P,R,E,S,S,E,D}
             data p_uncomp^CodecID_i420_value
 
             set codec_ptr p_uncomp
             set codec_sz (codecid_i420_sz)
         elseif encoder==(format_mkv_mjpg)
                 const codecid_mjpg_sz=1+1+1+1+1+1+1
-            chars CodecID_mjpg_value={V,_,M,J,P,E,G}
+            char CodecID_mjpg_value={V,_,M,J,P,E,G}
             data p_mjpg^CodecID_mjpg_value
 
             set codec_ptr p_mjpg
             set codec_sz (codecid_mjpg_sz)
         elseif encoder==(format_mkv_xvid)
                 const codecid_xvid_sz=1+1+1+1+1+1+ 1+1+    1+1+1+1+    1+1+1
-            chars CodecID_xvid_value={V,_,M,P,E,G,_4,Slash,I,S,O,Slash,A,S,P}
+            char CodecID_xvid_value={V,_,M,P,E,G,_4,Slash,I,S,O,Slash,A,S,P}
             data p_xvid^CodecID_xvid_value
 
             set codec_ptr p_xvid
@@ -1691,7 +1691,7 @@ function mkv_codecid_data(sd io,sd arg,s
         else
         #if encoder==(format_mkv_rgb24)
                 const codecid_rgb24_sz=1+1+1+1+1+    1+1+1+1+    1+1+1+1+1+1
-            chars CodecID_rgb24_value={V,_,M,S,Slash,V,F,W,Slash,F,O,U,R,C,C}
+            char CodecID_rgb24_value={V,_,M,S,Slash,V,F,W,Slash,F,O,U,R,C,C}
             data p_rgb24^CodecID_rgb24_value
 
             set codec_ptr p_rgb24
@@ -1792,38 +1792,38 @@ endfunction
 #bool
 function mkv_sound(sd file,sd *size,sd *filepos)
 const _audio=!
-    chars CodecID=0x86
- chars *CodecID_size=0x80+1+1+1+1+1+1+    1+1+1+1+    1+1+1
-    chars *CodecID_value={A,_,P,C,M,Slash,I,N,T,Slash,L,I,T}
-    chars *TrackNumber=0xD7
-    chars *TrackNumber_size=0x81
-    chars *TrackNumber_value=TrackNumber_audio
-    chars *TrackUID={0x73,0xC5}
-    chars *TrackUID_size=0x81
-    chars *TrackUID_value=TrackNumber_audio
-    chars *TrackType=0x83
-    chars *TrackType_size=0x81
-    chars *TrackType_value=2
+    char CodecID=0x86
+ char *CodecID_size=0x80+1+1+1+1+1+1+    1+1+1+1+    1+1+1
+    char *CodecID_value={A,_,P,C,M,Slash,I,N,T,Slash,L,I,T}
+    char *TrackNumber=0xD7
+    char *TrackNumber_size=0x81
+    char *TrackNumber_value=TrackNumber_audio
+    char *TrackUID={0x73,0xC5}
+    char *TrackUID_size=0x81
+    char *TrackUID_value=TrackNumber_audio
+    char *TrackType=0x83
+    char *TrackType_size=0x81
+    char *TrackType_value=2
     #audio type=2
-    chars *FlagLacing=0x9C
-    chars *FlagLacing_size=0x81
-    chars *FlagLacing_value=0
+    char *FlagLacing=0x9C
+    char *FlagLacing_size=0x81
+    char *FlagLacing_value=0
     #no lacing used
-    chars *Name={0x53,0x6E}
-    chars *Name_size=0x85
-    chars *Name_value={A,u,d,i,o}
+    char *Name={0x53,0x6E}
+    char *Name_size=0x85
+    char *Name_value={A,u,d,i,o}
 
-    chars *Audio={0xE1}
-    chars Audio_size=0x80
+    char *Audio={0xE1}
+    char Audio_size=0x80
 const _audiospec=!
-    chars *SamplingFrequency=0xB5
-    chars *SamplingFrequency_size=0x84
+    char *SamplingFrequency=0xB5
+    char *SamplingFrequency_size=0x84
     data SamplingFrequency_value#1
-    chars *Channels=0x9F
-    chars *Channels_size=0x84
+    char *Channels=0x9F
+    char *Channels_size=0x84
     data Channels_value#1
-    chars *BitDepth={0x62,0x64}
-    chars *BitDepth_size=0x84
+    char *BitDepth={0x62,0x64}
+    char *BitDepth_size=0x84
 const audiospec_=!
     data BitDepth_value#1
 
--- ovideo-1.orig/src/_prepare/output/sound.s
+++ ovideo-1/src/_prepare/output/sound.s
@@ -712,8 +712,8 @@ function stage_sound_alloc(sd action,sd
 
         #print
         const sountformbufstart=!
-        chars format="Prepared sound time: %u.%u"
-        chars datastring#!-sountformbufstart-2-2+modal_texter_mark
+        char format="Prepared sound time: %u.%u"
+        char datastring#!-sountformbufstart-2-2+modal_texter_mark
         vstr print^datastring
         call sprintf(print,#format,seconds,sec_rest)
         if action==(stage_sound_alloc_printtexter_time)
--- ovideo-1.orig/src/_prepare/output/stagefileoptions.s
+++ ovideo-1/src/_prepare/output/stagefileoptions.s
@@ -376,25 +376,25 @@ function stage_file_get_format()
     sd ptr_index%ptr_output
 #these formats are related to format_max
     #Audio Video Interleaved
-    chars entry1="avi"
+    char entry1="avi"
     #Audio Video Interleaved / I420
-    chars *="avi"
+    char *="avi"
     #Audio Video Interleaved / MJPEG
-    chars *="avi"
+    char *="avi"
     #Audio Video Interleaved / MPG4-ASP
-    chars *="avi"
+    char *="avi"
     #Material eXchange Format
-    chars *="mxf"
+    char *="mxf"
     #Matroska / I420
-    chars *="mkv"
+    char *="mkv"
     #Matroska / MJPEG
-    chars *="mkv"
+    char *="mkv"
     #Matroska / MPG4-ASP
-    chars *="mkv"
+    char *="mkv"
     #Matroska / RGB24
-    chars *="mkv"
+    char *="mkv"
     #Mp4 / MPEG4-AVC
-    chars *="mp4"
+    char *="mp4"
 
     sd index
     set index ptr_index#
@@ -406,7 +406,7 @@ endfunction
 function stage_file_get_format_name()
     ss format
     setcall format stage_file_get_format()
-    chars dest_data#format_max+1
+    char dest_data#format_max+1
     data dest^dest_data
     import "strcpy" strcpy
     import "slen" slen
--- ovideo-1.orig/src/_prepare/pipe.s
+++ ovideo-1/src/_prepare/pipe.s
@@ -63,7 +63,7 @@ import "stage_frame_time_numbers" stage_
 function stage_display_info(sd widget)
     #display the frame position and time informations
     str format="Frame: %u/%u; Time: %u:%02u from %u:%02u; Position: %u from %u"
-    chars data#200
+    char data#200
     str string^data
     sd length_at_index
     sd length_total
@@ -119,13 +119,13 @@ endfunction
 
 function img_folder()
 const img_folder_start=!
-	chars img="img"
+	char img="img"
 const img_folder_size=!-img_folder_start-1
 	return #img
 endfunction
 function edit_folder()
 const edit_folder_start=!
-	chars edit="edit"
+	char edit="edit"
 const edit_folder_size=!-edit_folder_start-1
 	return #edit
 endfunction
@@ -151,7 +151,7 @@ function stage_get_image(ss image)
 	ss e
 	setcall i img_folder()
 	setcall e edit_folder()
-	chars bytes#img_folder_size+1+edit_folder_size+1+unselected_bmp_size+1
+	char bytes#img_folder_size+1+edit_folder_size+1+unselected_bmp_size+1
 	ss file^bytes
 	str form="%s/%s/%s"
 	call sprintf(file,form,i,e,image)
--- ovideo-1.orig/src/_prepare/view.s
+++ ovideo-1/src/_prepare/view.s
@@ -9,128 +9,128 @@ include "../_include/include.h"
 
 function stage_buttons_enter(sd container)
         #newuri
-    chars button="new.bmp"
-    chars *="Creates a blank new media"
+    char button="new.bmp"
+    char *="Creates a blank new media"
     data *^stage_prepare_blank
         #
-    chars *="newuri.bmp"
-    chars *="Open the media from the uri bar"
+    char *="newuri.bmp"
+    char *="Open the media from the uri bar"
     data *^stage_prepare_uri_start
         #
     import "stage_preview" stage_preview
-    chars *="preview.bmp"
-    chars *="Preview the stage"
+    char *="preview.bmp"
+    char *="Preview the stage"
     data *^stage_preview
         #
     import "stage_pause" stage_pause
-    chars *="pause.bmp"
-    chars *="Pause the preview"
+    char *="pause.bmp"
+    char *="Pause the preview"
     data *^stage_pause
         #
-    chars *="close.bmp"
-    chars *="Close the stage bar"
+    char *="close.bmp"
+    char *="Close the stage bar"
     data *^stage_buttons_close
         #
     data *=0
         #
     import "stage_save_all" stage_save_all
-    chars *="file.bmp"
-    chars *="Save the stage to a file"
+    char *="file.bmp"
+    char *="Save the stage to a file"
     data *^stage_save_all
         #
     import "av_expand" av_expand
-    chars *="expand.bmp"
-    chars *="Expand a mp4 or avi(i420,mjpeg,mpg4-asp) file"
+    char *="expand.bmp"
+    char *="Expand a mp4 or avi(i420,mjpeg,mpg4-asp) file"
     data *^av_expand
         #
     import "stage_file_options" stage_file_options
-    chars *="fileoptions.bmp"
-    chars *="Set the stage file options"
+    char *="fileoptions.bmp"
+    char *="Set the stage file options"
     data *^stage_file_options
         #
     data *=0
         #
     import "stage_files_read" stage_files_read
-    chars *="open.bmp"
-    chars *="Append a file created with mkv(i420,mjpeg,rgb24), avi(i420,mjpeg), raw capture output format"
+    char *="open.bmp"
+    char *="Append a file created with mkv(i420,mjpeg,rgb24), avi(i420,mjpeg), raw capture output format"
     data *^stage_files_read
         #
     import "stage_sound" stage_sound
-    chars *="sound.bmp"
-    chars *="Add sound to be used at mkv, avi(i420,mjpeg,mpg4-asp) or mp4 files"
+    char *="sound.bmp"
+    char *="Add sound to be used at mkv, avi(i420,mjpeg,mpg4-asp) or mp4 files"
     data *^stage_sound
         #
     data *=0
         #
     import "capture" capture
-    chars *="capture.bmp"
-    chars *="Screen capture"
+    char *="capture.bmp"
+    char *="Screen capture"
     data *^capture
         #
     data *=0
         #
     import "stage_new_frame_form" stage_new_frame_form
-    chars *="add.bmp"
-    chars *="Add a new frame selecting width,height and color"
+    char *="add.bmp"
+    char *="Add a new frame selecting width,height and color"
     data *^stage_new_frame_form
         #
     import "stage_new_frame" stage_new_frame
-    chars *="addfromfile.bmp"
-    chars *="Add a new frame from a file"
+    char *="addfromfile.bmp"
+    char *="Add a new frame from a file"
     data *^stage_new_frame
         #
     import "stage_remove" stage_remove
-    chars *="remove.bmp"
-    chars *="Remove the selected frame"
+    char *="remove.bmp"
+    char *="Remove the selected frame"
     data *^stage_remove
         #
     import "mass_remove" mass_remove
-    chars *="removeframes.bmp"
-    chars *="Remove a frames interval"
+    char *="removeframes.bmp"
+    char *="Remove a frames interval"
     data *^mass_remove
         #
     import "stage_frame_time" stage_frame_time
-    chars *="ftime.bmp"
-    chars *="Modify the frame time"
+    char *="ftime.bmp"
+    char *="Modify the frame time"
     data *^stage_frame_time
         #
     import "stage_split_frame" stage_split_frame
-    chars *="split.bmp"
-    chars *="Split the selection into two parts"
+    char *="split.bmp"
+    char *="Split the selection into two parts"
     data *^stage_split_frame
         #
     import "stage_frame_equalize" stage_frame_equalize
-    chars *="equalize.bmp"
-    chars *="Equalize the frames lengths starting with selection; last interval frame can be truncated"
+    char *="equalize.bmp"
+    char *="Equalize the frames lengths starting with selection; last interval frame can be truncated"
     data *^stage_frame_equalize
         #
     data *=0
         #
     import "stage_frame_panel_open" stage_frame_panel_open
-    chars *="framepanel.bmp"
-    chars *="Open the frame panel"
+    char *="framepanel.bmp"
+    char *="Open the frame panel"
     data *^stage_frame_panel_open
         #
     data *=0
         #
     import "stage_fade" stage_fade
-    chars *="fade.bmp"
-    chars *="Fade In/Fade Out effects"
+    char *="fade.bmp"
+    char *="Fade In/Fade Out effects"
     data *^stage_fade
         #
     import "stage_move" stage_move
-    chars *="move.bmp"
-    chars *="Move In/Move Out effects"
+    char *="move.bmp"
+    char *="Move In/Move Out effects"
     data *^stage_move
         #
     import "stage_cover_panel_open" stage_cover_panel_open
-    chars *="cover_effects.bmp"
-    chars *="Uncover/Cover effects"
+    char *="cover_effects.bmp"
+    char *="Uncover/Cover effects"
     data *^stage_cover_panel_open
         #
     import "stage_effect_scale" stage_effect_scale
-    chars *="scale_effect.bmp"
-    chars *="Scale In/Scale Out effects"
+    char *="scale_effect.bmp"
+    char *="Scale In/Scale Out effects"
     data *^stage_effect_scale
         #
     data *=0
--- ovideo-1.orig/src/_search/parse.s
+++ ovideo-1/src/_search/parse.s
@@ -90,7 +90,7 @@ function search_parse_got_body(ss body,s
     sd ptr_totalentries^totalentries
     sd counter^count_the_findings
     call find_start_end_forward_center_data(body,size,start,end,counter,ptr_totalentries)
-    chars number#dword_null
+    char number#dword_null
     ss nr^number
     str dw_str="%u"
     call sprintf(nr,dw_str,totalentries)
--- ovideo-1.orig/src/interface/buttons.s
+++ ovideo-1/src/interface/buttons.s
@@ -81,8 +81,8 @@ function linked_instance(sd destcontaine
     sd p_alignment^alignment
     setcall buttonscontainer buttons_interface(destcontainer,lots,p_alignment)
 
-    chars connect="close.bmp"
-    chars *="Close the panel"
+    char connect="close.bmp"
+    char *="Close the panel"
     data backfunc#1
     data *=0
 
--- ovideo-1.orig/src/media/audiovideo.s
+++ ovideo-1/src/media/audiovideo.s
@@ -378,10 +378,10 @@ const av_info_simple=1
 function av_display_progress(sd image_nr,sd flag_simple)
     #capture_flag and read info both goes in flag_simple
 	const procimgstrstart=!
-	chars format_stage="Processed images: %u/%u"
-	chars data#!-procimgstrstart-2-2+dword_max+dword_max
+	char format_stage="Processed images: %u/%u"
+	char data#!-procimgstrstart-2-2+dword_max+dword_max
 	vstr string^data
-	chars format_capture="Processed images: %u"
+	char format_capture="Processed images: %u"
     importx "_sprintf" sprintf
     if flag_simple==(av_info_all)
         import "stage_get_frames" stage_get_frames
@@ -418,7 +418,7 @@ function av_display_info(sd action,sd fi
     else
         #if action==(value_write)
         #get/display
-        chars bf#100
+        char bf#100
         str text^bf
         str format="Frame: %u, Size: %u bytes"
         sd size
--- ovideo-1.orig/src/media/jpeg.s
+++ ovideo-1/src/media/jpeg.s
@@ -11,7 +11,7 @@ import "texter" texter
 
 
 
-chars jerrstruct#jerr_size
+char jerrstruct#jerr_size
 const p_jerrstruct^jerrstruct
 function get_jerr()
     data p%p_jerrstruct
@@ -63,7 +63,7 @@ endfunction
 
 
 
-chars deinfo#jdestruct_size
+char deinfo#jdestruct_size
 const p_deinfo^deinfo
 function get_jdestruct()
     data p%p_deinfo
--- ovideo-1.orig/src/media/jpeg_enc.s
+++ ovideo-1/src/media/jpeg_enc.s
@@ -142,9 +142,9 @@ function write_jpeg_blocks(sd pixbuf)
         sd i=0
         while i<w
             #get a 8x8 block
-            chars Y_data#8*8
-            chars Cb_data#8*8
-            chars Cr_data#8*8
+            char Y_data#8*8
+            char Cb_data#8*8
+            char Cr_data#8*8
             str Y^Y_data
             str Cb^Cb_data
             str Cr^Cr_data
@@ -155,7 +155,7 @@ function write_jpeg_blocks(sd pixbuf)
 
             #apply fast DCT and zigzag
             #int16
-            chars DCT_Quant_Y_data#64*2
+            char DCT_Quant_Y_data#64*2
             str DCT_Quant_Y^DCT_Quant_Y_data
             ##3,4
             call jpeg_FDCT_Quantization_And_ZigZag((value_run),Y,DCT_Quant_Y,FDCT_Y)
@@ -165,7 +165,7 @@ function write_jpeg_blocks(sd pixbuf)
                 return 0
             endif
             #
-            chars DCT_Quant_Cb_data#64*2
+            char DCT_Quant_Cb_data#64*2
             str DCT_Quant_Cb^DCT_Quant_Cb_data
             call jpeg_FDCT_Quantization_And_ZigZag((value_run),Cb,DCT_Quant_Cb,FDCT_CbCr)
             setcall bool jpeg_encode_Huffman(1,DCT_Quant_Cb,(crom),p_prev_DC_Cb)
@@ -173,7 +173,7 @@ function write_jpeg_blocks(sd pixbuf)
                 return 0
             endif
             #
-            chars DCT_Quant_Cr_data#64*2
+            char DCT_Quant_Cr_data#64*2
             str DCT_Quant_Cr^DCT_Quant_Cr_data
             call jpeg_FDCT_Quantization_And_ZigZag((value_run),Cr,DCT_Quant_Cr,FDCT_CbCr)
             setcall bool jpeg_encode_Huffman(1,DCT_Quant_Cr,(crom),p_prev_DC_Cr)
@@ -186,7 +186,7 @@ function write_jpeg_blocks(sd pixbuf)
     endwhile
 
     #Write End of Image Marker
-    chars EOI_data={0xFF,0xD9}
+    char EOI_data={0xFF,0xD9}
     str EOI^EOI_data
     setcall bool jpeg_file_mem_add(EOI,2)
     if bool!=1
@@ -262,23 +262,23 @@ endfunction
 #bool
 function write_jpeg_headers_appinfo()
     #JPEG INIT
-    chars JPEG_INIT={0xff,0xD8}
+    char JPEG_INIT={0xff,0xD8}
     #marker
-    chars *={0xff,0xE0}
+    char *={0xff,0xE0}
     #length = 16 for usual JPEG, no thumbnail
-    chars *={0,16}
+    char *={0,16}
     #signature
-    chars *="JFIF"
+    char *="JFIF"
     #high version,low version
-    chars *={1,1}
+    char *={1,1}
     #xyunits = 0 = no units, normal density
-    chars *=0
+    char *=0
     #x density = 1
-    chars *={0,1}
+    char *={0,1}
     #y density = 1
-    chars *={0,1}
+    char *={0,1}
     #thumb n width, thumb n height
-    chars *={0,0}
+    char *={0,0}
 
     data size#1
 
@@ -301,47 +301,47 @@ endfunction
 #Quantization Tables
 #bool
 function write_jpeg_quantizationTables(sd quality)
-    chars marker={0xFF,0xDB}
+    char marker={0xFF,0xDB}
     #length = 132
-    chars *={0,132}
+    char *={0,132}
     #QTYinfo
     #bit 0..3: number of QT = 0 (table for Y)
     #bit 4..7: precision of QT, 0 = 8 bit
-    chars *=0
+    char *=0
     #Y Table, luminance table
-    chars Y_Table#64
+    char Y_Table#64
     #QTCbinfo
     #quantization table for Cb,Cr
-    chars *=1
+    char *=1
     #CbCr Table, chromiance table
-    chars CbCr_Table#64
+    char CbCr_Table#64
 
     data size#1
     const _quantizationTables^marker
     const quantizationTables_^size
     set size (quantizationTables_-_quantizationTables)
 
-    chars luminance_r1={16, 11, 10, 16,24, 40, 51, 61}
-    chars *         r2={12, 12, 14, 19,26, 58, 60, 55}
-    chars *         r3={14, 13, 16, 24,40, 57, 69, 56}
-    chars *         r4={14, 17, 22, 29,51, 87, 80, 62}
-    chars *         r5={18, 22, 37, 56,68, 109,103,77}
-    chars *         r6={24, 35, 55, 64,81, 104,113,92}
-    chars *         r7={49, 64, 78, 87,103,121,120,101}
-    chars *         r8={72, 92, 95, 98,112,100,103,99}
+    char luminance_r1={16, 11, 10, 16,24, 40, 51, 61}
+    char *         r2={12, 12, 14, 19,26, 58, 60, 55}
+    char *         r3={14, 13, 16, 24,40, 57, 69, 56}
+    char *         r4={14, 17, 22, 29,51, 87, 80, 62}
+    char *         r5={18, 22, 37, 56,68, 109,103,77}
+    char *         r6={24, 35, 55, 64,81, 104,113,92}
+    char *         r7={49, 64, 78, 87,103,121,120,101}
+    char *         r8={72, 92, 95, 98,112,100,103,99}
 
     str luminance^luminance_r1
     str Y_Tab^Y_Table
     call jpeg_Scale_And_ZigZag_Quantization_Table(luminance,Y_Tab,quality)
 
-    chars chromiance_r1={17,  18,  24,  47,  99,  99,  99,  99}
-    chars *          r2={18,  21,  26,  66,  99,  99,  99,  99}
-    chars *          r3={24,  26,  56,  99,  99,  99,  99,  99}
-    chars *          r4={47,  66,  99,  99,  99,  99,  99,  99}
-    chars *          r5={99,  99,  99,  99,  99,  99,  99,  99}
-    chars *          r6={99,  99,  99,  99,  99,  99,  99,  99}
-    chars *          r7={99,  99,  99,  99,  99,  99,  99,  99}
-    chars *          r8={99,  99,  99,  99,  99,  99,  99,  99}
+    char chromiance_r1={17,  18,  24,  47,  99,  99,  99,  99}
+    char *          r2={18,  21,  26,  66,  99,  99,  99,  99}
+    char *          r3={24,  26,  56,  99,  99,  99,  99,  99}
+    char *          r4={47,  66,  99,  99,  99,  99,  99,  99}
+    char *          r5={99,  99,  99,  99,  99,  99,  99,  99}
+    char *          r6={99,  99,  99,  99,  99,  99,  99,  99}
+    char *          r7={99,  99,  99,  99,  99,  99,  99,  99}
+    char *          r8={99,  99,  99,  99,  99,  99,  99,  99}
 
     str chromiance^chromiance_r1
     str CbCr_Tab^CbCr_Table
@@ -394,14 +394,14 @@ function jpeg_Scale_And_ZigZag_Quantizat
 endfunction
 
 function jpeg_ZigZag_get(sd i)
-    chars zigzag_r1={0, 1, 5, 6, 14,15,27,28}
-    chars *      r2={2, 4, 7, 13,16,26,29,42}
-    chars *      r3={3, 8, 12,17,25,30,41,43}
-    chars *      r4={9, 11,18,24,31,40,44,53}
-    chars *      r5={10,19,23,32,39,45,52,54}
-    chars *      r6={20,22,33,38,46,51,55,60}
-    chars *      r7={21,34,37,47,50,56,59,61}
-    chars *      r8={35,36,48,49,57,58,62,63}
+    char zigzag_r1={0, 1, 5, 6, 14,15,27,28}
+    char *      r2={2, 4, 7, 13,16,26,29,42}
+    char *      r3={3, 8, 12,17,25,30,41,43}
+    char *      r4={9, 11,18,24,31,40,44,53}
+    char *      r5={10,19,23,32,39,45,52,54}
+    char *      r6={20,22,33,38,46,51,55,60}
+    char *      r7={21,34,37,47,50,56,59,61}
+    char *      r8={35,36,48,49,57,58,62,63}
 
     str zigzag^zigzag_r1
     ss ztab
@@ -427,35 +427,35 @@ endfunction
 
 #bool
 function write_jpeg_sof(sd pixbuf)
-    chars marker={0xFF,0xC0}
+    char marker={0xFF,0xC0}
     #length = 17 for a truecolor YCbCr JPG
-    chars *={0,17}
+    char *={0,17}
     #precision, Should be 8: 8 bits/sample
-    chars *=8
+    char *=8
     #height
-    chars height#2
+    char height#2
     #width
-    chars width#2
+    char width#2
     #nrofcomponents, Should be 3: We encode a truecolor JPG
-    chars *=3
+    char *=3
     #IdY
-    chars *=1
+    char *=1
     #HVY, sampling factors for Y (bit 0-3 vert., 4-7 hor.)
-    chars *=0x11
+    char *=0x11
     #QTY, Quantization Table number for Y = 0
-    chars *=0
+    char *=0
     #IdCb
-    chars *=2
+    char *=2
     #HVCb
-    chars *=0x11
+    char *=0x11
     #QTCb
-    chars *=1
+    char *=1
     #IdCr
-    chars *=3
+    char *=3
     #HVCr
-    chars *=0x11
+    char *=0x11
     #QTCr, Normally equal to QTCb = 1
-    chars *=1
+    char *=1
 
     data size#1
     const _sof^marker
@@ -488,9 +488,9 @@ const Huffman_get=1
 
 #bool
 function write_jpeg_Huffman()
-    chars marker={0xFF,0xC4}
+    char marker={0xFF,0xC4}
     #length
-    chars *={0x01,0xA2}
+    char *={0x01,0xA2}
 
     data size#1
     const _Huffman^marker
@@ -538,9 +538,9 @@ const DC_table=0
 const AC_table=0x10
 
 function Huffman_DC_Luminance(sd action,sd ptr_values)
-    chars HT=Y_table|DC_table
-    chars NRCodes={0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}
-    chars Values={ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
+    char HT=Y_table|DC_table
+    char NRCodes={0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}
+    char Values={ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
 
     data Values_size#1
 
@@ -569,29 +569,29 @@ function Huffman_DC_Luminance(sd action,
 endfunction
 
 function Huffman_AC_Luminance(sd action,sd ptr_values)
-    chars HT=Y_table|AC_table
-    chars NRCodes={0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d}
-    chars Values={0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12}
-    chars     *2={0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07}
-    chars     *3={0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08}
-    chars     *4={0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0}
-    chars     *5={0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16}
-    chars     *6={0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28}
-    chars     *7={0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39}
-    chars     *8={0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49}
-    chars     *9={0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59}
-    chars    *10={0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69}
-    chars    *11={0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79}
-    chars    *12={0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89}
-    chars    *13={0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98}
-    chars    *14={0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7}
-    chars    *15={0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6}
-    chars    *16={0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5}
-    chars    *17={0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4}
-    chars    *18={0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2}
-    chars    *19={0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea}
-    chars    *20={0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8}
-    chars    *21={0xf9, 0xfa}
+    char HT=Y_table|AC_table
+    char NRCodes={0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d}
+    char Values={0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12}
+    char     *2={0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07}
+    char     *3={0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08}
+    char     *4={0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0}
+    char     *5={0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16}
+    char     *6={0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28}
+    char     *7={0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39}
+    char     *8={0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49}
+    char     *9={0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59}
+    char    *10={0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69}
+    char    *11={0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79}
+    char    *12={0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89}
+    char    *13={0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98}
+    char    *14={0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7}
+    char    *15={0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6}
+    char    *16={0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5}
+    char    *17={0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4}
+    char    *18={0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2}
+    char    *19={0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea}
+    char    *20={0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8}
+    char    *21={0xf9, 0xfa}
 
     data Values_size#1
 
@@ -619,9 +619,9 @@ function Huffman_AC_Luminance(sd action,
 endfunction
 
 function Huffman_DC_Chromiance(sd action,sd ptr_values)
-    chars HT=Cb_table|DC_table
-    chars NRCodes={0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}
-    chars Values={0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
+    char HT=Cb_table|DC_table
+    char NRCodes={0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}
+    char Values={0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
 
     data Values_size#1
 
@@ -649,29 +649,29 @@ function Huffman_DC_Chromiance(sd action
 endfunction
 
 function Huffman_AC_Chromiance(sd action,sd ptr_values)
-    chars HT=Cb_table|AC_table
-    chars NRCodes={0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77}
-    chars Values={0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21}
-    chars     *2={0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71}
-    chars     *3={0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91}
-    chars     *4={0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0}
-    chars     *5={0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34}
-    chars     *6={0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26}
-    chars     *7={0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38}
-    chars     *8={0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48}
-    chars     *9={0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58}
-    chars    *10={0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68}
-    chars    *11={0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78}
-    chars    *12={0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87}
-    chars    *13={0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96}
-    chars    *14={0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5}
-    chars    *15={0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4}
-    chars    *16={0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3}
-    chars    *17={0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2}
-    chars    *18={0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda}
-    chars    *19={0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9}
-    chars    *20={0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8}
-    chars    *21={0xf9, 0xfa}
+    char HT=Cb_table|AC_table
+    char NRCodes={0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77}
+    char Values={0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21}
+    char     *2={0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71}
+    char     *3={0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91}
+    char     *4={0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0}
+    char     *5={0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34}
+    char     *6={0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26}
+    char     *7={0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38}
+    char     *8={0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48}
+    char     *9={0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58}
+    char    *10={0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68}
+    char    *11={0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78}
+    char    *12={0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87}
+    char    *13={0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96}
+    char    *14={0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5}
+    char    *15={0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4}
+    char    *16={0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3}
+    char    *17={0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2}
+    char    *18={0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda}
+    char    *19={0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9}
+    char    *20={0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8}
+    char    *21={0xf9, 0xfa}
 
     data Values_size#1
 
@@ -721,22 +721,22 @@ endfunction
 
 #bool
 function write_jpeg_sos()
-    chars marker={0xFF,0xDA}
-    chars *length={0,12}
+    char marker={0xFF,0xDA}
+    char *length={0,12}
     #nrofcomponents Should be 3: truecolor JPG
-    chars *=3
+    char *=3
 
-    chars *IdY=1
+    char *IdY=1
     #HT, bits 0..3: AC table (0..3)
     #    bits 4..7: DC table (0..3)
-    chars *HTY=0
-    chars *IdCb=2
-    chars *HTCb=0x11
-    chars *IdCr=3
-    chars *HTCr=0x11
-    chars *Ss=0
-    chars *Se=0x3F
-    chars *Bf=0
+    char *HTY=0
+    char *IdCb=2
+    char *HTCb=0x11
+    char *IdCr=3
+    char *HTCr=0x11
+    char *Ss=0
+    char *Se=0x3F
+    char *Bf=0
 
     data size#1
     const _sos^marker
@@ -963,15 +963,15 @@ function jpeg_FDCT_Quantization_Tables(s
         data CosineScaleFactor_data#8*2
         sd CosineScaleFactor^CosineScaleFactor_data
 
-        chars CosineScaleFactor_coef1="1.0"
-        chars *CosineScaleFactor_coef2="1.387039845"
-        chars *CosineScaleFactor_coef3="1.306562965"
-        chars *CosineScaleFactor_coef4="1.175875602"
-        chars *CosineScaleFactor_coef5="1.0"
-        chars *CosineScaleFactor_coef6="0.785694958"
-        chars *CosineScaleFactor_coef7="0.541196100"
-        chars *CosineScaleFactor_coef8="0.275899379"
-        chars *=0
+        char CosineScaleFactor_coef1="1.0"
+        char *CosineScaleFactor_coef2="1.387039845"
+        char *CosineScaleFactor_coef3="1.306562965"
+        char *CosineScaleFactor_coef4="1.175875602"
+        char *CosineScaleFactor_coef5="1.0"
+        char *CosineScaleFactor_coef6="0.785694958"
+        char *CosineScaleFactor_coef7="0.541196100"
+        char *CosineScaleFactor_coef8="0.275899379"
+        char *=0
 
         ss CosineScaleFactor_coef^CosineScaleFactor_coef1
 
@@ -1111,7 +1111,7 @@ function jpeg_FDCT_Quantization_And_ZigZ
     sd cursor
     sd value
     #convert the sbyte table to float
-    chars temp_data#64*4
+    char temp_data#64*4
     sd temp^temp_data
     sd i=0
     set cursor temp
@@ -1503,15 +1503,15 @@ function jpeg_encode_Huffman(sd action,s
         sd p_Standard_AC_Chromiance_Val^Standard_AC_Chromiance_Val
         setcall Standard_AC_Chromiance_Nr Huffman_AC_Chromiance((Huffman_get),p_Standard_AC_Chromiance_Val)
 
-        chars Y_DC_Huffman_Table_nr#12
-        chars Y_DC_Huffman_Table_value#12*2
-        chars Y_AC_Huffman_Table_nr#256
-        chars Y_AC_Huffman_Table_value#256*2
-
-        chars CbCr_DC_Huffman_Table_nr#12
-        chars CbCr_DC_Huffman_Table_value#12*2
-        chars CbCr_AC_Huffman_Table_nr#256
-        chars CbCr_AC_Huffman_Table_value#256*2
+        char Y_DC_Huffman_Table_nr#12
+        char Y_DC_Huffman_Table_value#12*2
+        char Y_AC_Huffman_Table_nr#256
+        char Y_AC_Huffman_Table_value#256*2
+
+        char CbCr_DC_Huffman_Table_nr#12
+        char CbCr_DC_Huffman_Table_value#12*2
+        char CbCr_AC_Huffman_Table_nr#256
+        char CbCr_AC_Huffman_Table_value#256*2
 
         data p_Lum_DC_nr^Y_DC_Huffman_Table_nr
         data p_Lum_DC_val^Y_DC_Huffman_Table_value
@@ -1712,11 +1712,11 @@ function jpeg_bytepos(sd action,sd value
 endfunction
 
 function jpeg_write_data(sd pos,sd data)
-    #words style from chars
-    chars m_data={1,   0,         2,   0,         4,    0,          8,    0}
-    chars      *={16,  0,         32,  0,         64,   0,          128,  0}
-    chars      *={256, 256/0x100, 512, 512/0x100, 1024, 1024/0x100, 2048, 2048/0x100}
-    chars      *={4096,4096/0x100,8192,8192/0x100,16384,16384/0x100,32768,32768/0x100}
+    #words style from char
+    char m_data={1,   0,         2,   0,         4,    0,          8,    0}
+    char      *={16,  0,         32,  0,         64,   0,          128,  0}
+    char      *={256, 256/0x100, 512, 512/0x100, 1024, 1024/0x100, 2048, 2048/0x100}
+    char      *={4096,4096/0x100,8192,8192/0x100,16384,16384/0x100,32768,32768/0x100}
     str mask^m_data
 
     dec pos
--- ovideo-1.orig/src/media/mp4.s
+++ ovideo-1/src/media/mp4.s
@@ -303,10 +303,10 @@ endfunction
 #bool
 function mp4_ftyp(sd file)
 const ftyp_start=!
-    chars GF_ISOM_BRAND_ISOM={i,s,o,m}
-    chars *minorVersion={0,0,0,1}
-    chars *brand={i,s,o,m}
-    chars *brand_1={a,v,c,_1}
+    char GF_ISOM_BRAND_ISOM={i,s,o,m}
+    char *minorVersion={0,0,0,1}
+    char *brand={i,s,o,m}
+    char *brand_1={a,v,c,_1}
 const ftyp_size=!-ftyp_start
     data ftyp^GF_ISOM_BRAND_ISOM
     data ftyp_size=ftyp_size
@@ -367,15 +367,15 @@ import "file_get_dword" file_get_dword
 function mp4_mvhd(sd file)
 const mvhd_start=!
     #movie header
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
     data creationTime#1
     data *modificationTime#1
     data timeScale#1
     data duration#1
     data preferredRate#1
-    chars preferredVolume#2
-    chars *reserved={0,0,0,0,0,0,0,0,0,0}
+    char preferredVolume#2
+    char *reserved={0,0,0,0,0,0,0,0,0,0}
     data matrixA#1
     data *matrixB=0
     data *matrixU=0
@@ -455,18 +455,18 @@ function mp4_iods(sd file)
     const iod_inlineProfileFlag=0
     const iod_reserved=0xf
 
-    chars version=0
-    chars *flags={0,0,0}
+    char version=0
+    char *flags={0,0,0}
 
-    chars *tag=GF_ODF_ISOM_IOD_TAG
-    chars *tag_size=7
-    chars iod_attr_data#2
-    chars *OD_profileAndLevel=0xff
-    chars *scene_profileAndLevel=0xff
-    chars audio_profileAndLevel#1
+    char *tag=GF_ODF_ISOM_IOD_TAG
+    char *tag_size=7
+    char iod_attr_data#2
+    char *OD_profileAndLevel=0xff
+    char *scene_profileAndLevel=0xff
+    char audio_profileAndLevel#1
     #AVC/H264 Profile
-    chars *visual_profileAndLevel=0x15
-    chars *graphics_profileAndLevel=0xff
+    char *visual_profileAndLevel=0x15
+    char *graphics_profileAndLevel=0xff
 
     data iod^version
     data _iod^iod
@@ -534,27 +534,27 @@ endfunction
 
 #bool
 function mp4_tkhd(sd file)
-    chars version_u8={0}
-    chars *flags_u24={0,0,enable_flag}
+    char version_u8={0}
+    char *flags_u24={0,0,enable_flag}
     data creationTime#1
     data *modificationTime#1
-    chars *trackID={0,0,0,videoId}
+    char *trackID={0,0,0,videoId}
     data *reserved1=0
     data duration#1
     data *reserved2={0,0}
-    chars *layer={0,0}
-    chars *alternate_group={0,0}
-    chars *volume={0,0}
-    chars *reserved3={0,0}
-    chars *matrix0={0,1,0,0}
+    char *layer={0,0}
+    char *alternate_group={0,0}
+    char *volume={0,0}
+    char *reserved3={0,0}
+    char *matrix0={0,1,0,0}
     data *matrix1=0
     data *matrix2=0
     data *matrix3=0
-    chars *matrix4={0,1,0,0}
+    char *matrix4={0,1,0,0}
     data *matrix5=0
     data *matrix6=0
     data *matrix7=0
-    chars *matrix8={0x40,0,0,0}
+    char *matrix8={0x40,0,0,0}
     data width#1
     data height#1
 
@@ -615,14 +615,14 @@ endfunction
 
 #bool
 function mp4_mdhd(sd file)
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
     data creationTime#1
     data *modificationTime#1
     data timeScale#1
     data duration#1
-    chars language#2
-    chars *reserved={0,0}
+    char language#2
+    char *reserved={0,0}
 
     data mdhd^version_u8
     data _mdhd^mdhd
@@ -687,14 +687,14 @@ endfunction
 #bool
 function mp4_hdlr(sd file)
 const hdlr_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
     data *reserved1=0
-    chars *handlerType={v,i,d,e}
-    chars *reserved2={0,0,0,0,0,0,0,0,0,0,0,0}
+    char *handlerType={v,i,d,e}
+    char *reserved2={0,0,0,0,0,0,0,0,0,0,0,0}
     #is null terminated
-    #chars *nameUTF8="GPAC ISO Video Handler"
-    chars *nameUTF8="OApplications Video"
+    #char *nameUTF8="GPAC ISO Video Handler"
+    char *nameUTF8="OApplications Video"
 const hdlr_size=!-hdlr_start
     data hdlr^version_u8
     data hdlr_size=hdlr_size
@@ -736,9 +736,9 @@ endfunction
 
 #bool
 function mp4_vmhd(sd file)
-    chars version_u8={0}
-    chars *flags_u24={0,0,enable_flag}
-    chars *reserved={0,0,0,0,0,0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,enable_flag}
+    char *reserved={0,0,0,0,0,0,0,0}
 
     data vmhd^version_u8
     data _vmhd^vmhd
@@ -777,9 +777,9 @@ endfunction
 
 #bool
 function mp4_dref(sd file)
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *count={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *count={0,0,0,1}
 
     data dref^version_u8
     data _dref^dref
@@ -806,8 +806,8 @@ endfunction
 
 #bool
 function mp4_url(sd file)
-    chars version_u8={0}
-    chars *flags_u24={0,0,enable_flag}
+    char version_u8={0}
+    char *flags_u24={0,0,enable_flag}
 
     data url^version_u8
     data _url^url
@@ -874,9 +874,9 @@ endfunction
 #bool
 function mp4_stsd(sd file)
 const stsd_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *entryCount={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *entryCount={0,0,0,1}
 const stsd_size=!-stsd_start
     data stsd^version_u8
     data stsd_size=stsd_size
@@ -900,22 +900,22 @@ endfunction
 #bool
 function mp4_avc1(sd file)
 const avc1_start=!
-    chars reserved={0,0,0,0,0,0}
-    chars *dataReferenceIndex={0,videoId}
-    chars *version={0,0}
-    chars *revision={0,0}
+    char reserved={0,0,0,0,0,0}
+    char *dataReferenceIndex={0,videoId}
+    char *version={0,0}
+    char *revision={0,0}
     data *vendor=0
     data *temporal_quality=0
     data *spacial_quality=0
-    chars Width#2
-    chars Height#2
-    chars *horiz_res={0,0x48,0,0}
-    chars *vert_res={0,0x48,0,0}
+    char Width#2
+    char Height#2
+    char *horiz_res={0,0x48,0,0}
+    char *vert_res={0,0x48,0,0}
     data *entry_data_size=0
-    chars *frames_per_sample={0,1}
-    chars *compressor_name={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
-    chars *bit_depth={0,0x18}
-    chars color_table_index#2
+    char *frames_per_sample={0,1}
+    char *compressor_name={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
+    char *bit_depth={0,0x18}
+    char color_table_index#2
 const avc1_size=!-avc1_start
     data avc1^reserved
     data avc1_size=avc1_size
@@ -961,11 +961,11 @@ endfunction
 #bool
 function mp4_avcC(sd file)
 const avcC_start=!
-    chars configurationVersion=1
-    chars AVCProfileIndication#1
-    chars profile_compatibility#1
-    chars AVCLevelIndication#1
-    chars cfg_data#2
+    char configurationVersion=1
+    char AVCProfileIndication#1
+    char profile_compatibility#1
+    char AVCLevelIndication#1
+    char cfg_data#2
 const avcC_size=!-avcC_start
     data avcfg_main^configurationVersion
     data avcfg_main_size=avcC_size
@@ -1017,7 +1017,7 @@ const avcC_size=!-avcC_start
             return 0
         endif
         #
-        chars count=1
+        char count=1
         sd p_count^count
         setcall err file_write(p_count,1,file)
         if err!=(noerror)
@@ -1084,9 +1084,9 @@ import "file_seek_cursor_get_dword_rever
 #bool
 function mp4_stts(sd file)
 const mp4_stts_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *list_count={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *list_count={0,0,0,1}
 const mp4_stts_sampleCount_offset=!-mp4_stts_start
     data sampleCount#1
     data sampleDelta#1
@@ -1121,10 +1121,10 @@ endfunction
 #bool
 function mp4_stss(sd file)
 const stss_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *entryCount={0,0,0,1}
-    chars *sampleNumber={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *entryCount={0,0,0,1}
+    char *sampleNumber={0,0,0,1}
 const stss_size=!-stss_start
     data stss^version_u8
     data stss_size=stss_size
@@ -1140,12 +1140,12 @@ endfunction
 #bool
 function mp4_stsc(sd file)
 const stsc_start=!
-    chars version={0}
-    chars *flags={0,0,0}
-    chars *list_count={0,0,0,1}
-    chars *firstChunk={0,0,0,1}
+    char version={0}
+    char *flags={0,0,0}
+    char *list_count={0,0,0,1}
+    char *firstChunk={0,0,0,1}
     data samplesPerChunk#1
-    chars *sampleDescriptionIndex={0,0,0,1}
+    char *sampleDescriptionIndex={0,0,0,1}
 const stsc_size=!-stsc_start
     data stsc^version
     data stsc_size=stsc_size
@@ -1168,8 +1168,8 @@ endfunction
 #bool
 function mp4_stsz(sd file)
 const stsz_start=!
-    chars version={0}
-    chars *flags={0,0,0}
+    char version={0}
+    char *flags={0,0,0}
     data *sampleSize=0
     data sampleCount#1
 const stsz_size=!-stsz_start
@@ -1214,9 +1214,9 @@ import "mp4_video_offset_get" mp4_video_
 #bool
 function mp4_stco(sd file)
 const stco_start=!
-    chars version={0}
-    chars *flags={0,0,0}
-    chars *entries={0,0,0,1}
+    char version={0}
+    char *flags={0,0,0}
+    char *entries={0,0,0,1}
 const stco_offset_pos=!-stco_start
     data offset#1
 const stco_size=!-stco_start
@@ -1644,8 +1644,8 @@ function mp4_mdat_sound(sd file)
             sd bytesleft
             setcall bytesleft stage_sound_alloc_getremainingsize()
             const soundbufstart=!
-            chars format="Sound Bytes Left: %u"
-            chars buffer#!-soundbufstart-2+dword_max
+            char format="Sound Bytes Left: %u"
+            char buffer#!-soundbufstart-2+dword_max
             vstr buf^buffer
             call sprintf(buf,#format,bytesleft)
             call dialog_modal_texter_draw(buf)
@@ -1741,27 +1741,27 @@ endfunction
 #bool
 function mp4_soundtkhd(sd file)
 const soundtkhd_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,enable_flag}
+    char version_u8={0}
+    char *flags_u24={0,0,enable_flag}
     data creationTime#1
     data *modificationTime#1
-    chars *trackID={0,0,0,soundId}
+    char *trackID={0,0,0,soundId}
     data *reserved1=0
     data duration#1
     data *reserved2={0,0}
-    chars *layer={0,0}
-    chars *alternate_group={0,0}
-    chars *volume={1,0}
-    chars *reserved3={0,0}
-    chars *matrix0={0,1,0,0}
+    char *layer={0,0}
+    char *alternate_group={0,0}
+    char *volume={1,0}
+    char *reserved3={0,0}
+    char *matrix0={0,1,0,0}
     data *matrix1=0
     data *matrix2=0
     data *matrix3=0
-    chars *matrix4={0,1,0,0}
+    char *matrix4={0,1,0,0}
     data *matrix5=0
     data *matrix6=0
     data *matrix7=0
-    chars *matrix8={0x40,0,0,0}
+    char *matrix8={0x40,0,0,0}
     data *width=0
     data *height=0
 const soundtkhd_size=!-soundtkhd_start
@@ -1813,15 +1813,15 @@ endfunction
 #bool
 function mp4_soundmdhd(sd file)
 const soundmdhd_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
     data creationTime#1
     data *modificationTime#1
     data timeScale#1
 const soundmdhd_duration=!-soundmdhd_start
     data duration#1
-    chars language#2
-    chars *reserved={0,0}
+    char language#2
+    char *reserved={0,0}
 const soundmdhd_size=!-soundmdhd_start
     data mdhd^version_u8
     data mdhd_size=soundmdhd_size
@@ -1856,14 +1856,14 @@ endfunction
 #bool
 function mp4_soundhdlr(sd file)
 const soundhdlr_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
     data *reserved1=0
-    chars *handlerType={s,o,u,n}
-    chars *reserved2={0,0,0,0,0,0,0,0,0,0,0,0}
+    char *handlerType={s,o,u,n}
+    char *reserved2={0,0,0,0,0,0,0,0,0,0,0,0}
     #is null terminated
-    #chars *nameUTF8="GPAC ISO Audio Handler"
-    chars *nameUTF8="OApplications Audio"
+    #char *nameUTF8="GPAC ISO Audio Handler"
+    char *nameUTF8="OApplications Audio"
 const soundhdlr_size=!-soundhdlr_start
     data hdlr^version_u8
     data hdlr_size=soundhdlr_size
@@ -1905,8 +1905,8 @@ endfunction
 #bool
 function mp4_smhd(sd file)
 const sound_smhd_start=!
-    chars version=0
-    chars *flags={0,0,0}
+    char version=0
+    char *flags={0,0,0}
     data *reserved=0
 const sound_smhd_size=!-sound_smhd_start
     data smhd^version
@@ -1964,9 +1964,9 @@ endfunction
 #bool
 function mp4_soundstsd(sd file)
 const soundstsd_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *entryCount={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *entryCount={0,0,0,1}
 const soundstsd_size=!-soundstsd_start
     data stsd^version_u8
     data stsd_size=soundstsd_size
@@ -1990,17 +1990,17 @@ endfunction
 #bool
 function mp4_mp4a(sd file)
 const mp4a_start=!
-    chars reserved={0,0,0,0,0,0}
-    chars *dataReferenceIndex={0,videoId}
-    chars *version={0,0}
-    chars *revision={0,0}
+    char reserved={0,0,0,0,0,0}
+    char *dataReferenceIndex={0,videoId}
+    char *version={0,0}
+    char *revision={0,0}
     data *vendor=0
-    chars *channel_count={0,mp3_channels}
-    chars *bitspersample={0,mp3_bitspersample}
-    chars *compression_id={0,0}
-    chars *packet_size={0,0}
-    chars samplerate_hi#2
-    chars *samplerate_lo={0,0}
+    char *channel_count={0,mp3_channels}
+    char *bitspersample={0,mp3_bitspersample}
+    char *compression_id={0,0}
+    char *packet_size={0,0}
+    char samplerate_hi#2
+    char *samplerate_lo={0,0}
 const mp4a_size=!-mp4a_start
     data mp4a^reserved
     data mp4a_size=mp4a_size
@@ -2036,19 +2036,19 @@ endfunction
 #bool
 function mp4_esds(sd file)
 const esds_start=!
-    chars version=0
-    chars *flags={0,0,0}
-    chars *GF_ODF_ESD_TAG=3
-    chars esd_size#1
+    char version=0
+    char *flags={0,0,0}
+    char *GF_ODF_ESD_TAG=3
+    char esd_size#1
 
-    chars ESID={0,0}
+    char ESID={0,0}
     #lengths: dependsOnESID 1,URLString 1,OCRESID 1,streamPriority 5
-    chars *info=0
+    char *info=0
 
-    chars *GF_ODF_DCD_TAG=4
-    chars dcd_size#1
+    char *GF_ODF_DCD_TAG=4
+    char dcd_size#1
         const objectTypeIndication_MPEG1Audio=0x6b
-    chars objectTypeIndication=objectTypeIndication_MPEG1Audio
+    char objectTypeIndication=objectTypeIndication_MPEG1Audio
         const GF_STREAM_AUDIO=5
     const streamType_value=GF_STREAM_AUDIO
     const upstream_value=0
@@ -2058,16 +2058,16 @@ const esds_start=!
         const upstream_pack=upstream_value*reserved_shift
         const streamType_shift_pack=reserved_shift*upstream_shift
         const streamType_pack=streamType_value*streamType_shift_pack
-    chars *info=streamType_pack|upstream_pack|reserved_value
+    char *info=streamType_pack|upstream_pack|reserved_value
 const sound_bufferSizeDB_offset=!-esds_start
-    chars bufferSizeDB#3
+    char bufferSizeDB#3
     data maxBitrate#1
     data *avgBitrate#1
 
-    chars GF_ODF_SLC_TAG=6
-    chars slc_size#1
+    char GF_ODF_SLC_TAG=6
+    char slc_size#1
         const SLPredef_MP4=2
-    chars predefined=SLPredef_MP4
+    char predefined=SLPredef_MP4
 const esds_size=!-esds_start
     data esds^version
     data esds_size=esds_size
@@ -2142,9 +2142,9 @@ endfunction
 #bool
 function mp4_soundstts(sd file)
 const soundstts_start=!
-    chars version_u8={0}
-    chars *flags_u24={0,0,0}
-    chars *list_count={0,0,0,1}
+    char version_u8={0}
+    char *flags_u24={0,0,0}
+    char *list_count={0,0,0,1}
     data sampleCount#1
     data sampleDelta#1
 const soundstts_size=!-soundstts_start
@@ -2171,12 +2171,12 @@ endfunction
 #bool
 function mp4_soundstsc(sd file)
 const soundstsc_start=!
-    chars version={0}
-    chars *flags={0,0,0}
-    chars *list_count={0,0,0,1}
-    chars *firstChunk={0,0,0,1}
+    char version={0}
+    char *flags={0,0,0}
+    char *list_count={0,0,0,1}
+    char *firstChunk={0,0,0,1}
     data samplesPerChunk#1
-    chars *sampleDescriptionIndex={0,0,0,1}
+    char *sampleDescriptionIndex={0,0,0,1}
 const soundstsc_size=!-soundstsc_start
     data stsc^version
     data stsc_size=soundstsc_size
@@ -2200,8 +2200,8 @@ endfunction
 #bool
 function mp4_soundstsz(sd file)
 const soundstsz_start=!
-    chars version={0}
-    chars *flags={0,0,0}
+    char version={0}
+    char *flags={0,0,0}
     data sampleSize#1
     data sampleCount#1
 const soundstsz_size=!-soundstsz_start
@@ -2240,9 +2240,9 @@ endfunction
 #bool
 function mp4_soundstco(sd file)
 const soundstco_start=!
-    chars version={0}
-    chars *flags={0,0,0}
-    chars *entries={0,0,0,1}
+    char version={0}
+    char *flags={0,0,0}
+    char *entries={0,0,0,1}
 const soundstco_offset_pos=!-soundstco_start
     data offset#1
 const soundstco_size=!-soundstco_start
--- ovideo-1.orig/src/media/mpeg-avc_block.s
+++ ovideo-1/src/media/mpeg-avc_block.s
@@ -110,9 +110,9 @@ endfunction
 import "avc_width" avc_width
 
 function avc_enc_16x16(sd Y,sd residual_ac,sd residual_luma)
-    chars dct_data#16*4*4*WORD
+    char dct_data#16*4*4*WORD
     data d_dct^dct_data
-    chars dct_luma_data#4*4*WORD
+    char dct_luma_data#4*4*WORD
     data d_dct_luma^dct_luma_data
     sd stride
     setcall stride avc_width((value_get))
@@ -178,8 +178,8 @@ function avc_dct_sub(sd p_dct,ss plane,s
         call avc_dct_sub_row(p_dct,plane,coef,stride)
     else
         sd value
-        chars d_data#4*4*WORD
-        chars tmp_data#4*4*WORD
+        char d_data#4*4*WORD
+        char tmp_data#4*4*WORD
         data d^d_data
         data tmp^tmp_data
         import "sar32" sar
@@ -776,9 +776,9 @@ function avc_enc_8x8_chroma(sd U,sd V,sd
     call avc_enc_chroma_block(V,residual_ac_v,chroma_dc_v)
 endfunction
 function avc_enc_chroma_block(sd plane,sd residual_ac,sd residual_dc)
-    chars dct_data#4*4*4*WORD
+    char dct_data#4*4*4*WORD
     data d_dct^dct_data
-    chars dct2x2_data#2*2*WORD
+    char dct2x2_data#2*2*WORD
     data dct2x2^dct2x2_data
     sd stride
     setcall stride avc_width((value_get))
@@ -845,7 +845,7 @@ function avc_dct2x2dc(sd dct)
     call array_set_word_bi(dct,1,2,1,value)
 endfunction
 function avc_dct4x4dc(sd dct)
-    chars tmp_data#4*4*WORD
+    char tmp_data#4*4*WORD
     data tmp^tmp_data
     sd s01
     sd s23
@@ -985,7 +985,7 @@ function avc_dequant(sd dct)
 endfunction
 
 function avc_idct_dc(sd dct)
-    chars tmp_data#4*4*WORD
+    char tmp_data#4*4*WORD
     data tmp^tmp_data
     sd s01
     sd s23
@@ -1119,9 +1119,9 @@ function avc_dct_add(sd p_dct,ss plane,s
         sd nr
         set nr numbers#
         if nr<0
-            chars d_data#4*4*WORD
+            char d_data#4*4*WORD
             data d^d_data
-            chars tmp_data#4*4*WORD
+            char tmp_data#4*4*WORD
             data tmp^tmp_data
             sd cursor
             sd s02
--- ovideo-1.orig/src/media/mpeg-avc_encode.s
+++ ovideo-1/src/media/mpeg-avc_encode.s
@@ -114,7 +114,7 @@ function avc_ini_headers()
     sd ver_len
     #
     #importx "_sprintf" sprintf
-    #chars version_data#256
+    #char version_data#256
     #str version^version_data
     #str format="x264 - core %d%s - H.264/MPEG-4 AVC codec - Copyleft 2005 - http://www.videolan.org/x264.html"
     #sd X264_BUILD=34
@@ -128,8 +128,8 @@ function avc_ini_headers()
 
     call avc_bs_write_byte(length)
 
-    chars id_data={0xdc,0x45,0xe9,0xbd,0xe6,0xd9,0x48,0xb7}
-    chars *      ={0x96,0x2c,0xd8,0x20,0xd9,0x23,0xee,0xef}
+    char id_data={0xdc,0x45,0xe9,0xbd,0xe6,0xd9,0x48,0xb7}
+    char *      ={0x96,0x2c,0xd8,0x20,0xd9,0x23,0xee,0xef}
     data id^id_data
 
     call avc_bs_write_data(id,16)
@@ -214,7 +214,7 @@ function avc_sequenceParameterSet()
     #analyse.inter = X264_ANALYSE_I4x4 | X264_ANALYSE_I8x8 | X264_ANALYSE_PSUB16x16 | X264_ANALYSE_BSUB16x16
     #0x113
     #b_transform_8x8=0
-    #!b_transform_8x8
+    # !b_transform_8x8
     #          analyse.inter &= ~X264_ANALYSE_I8x8
     #0x111
     #if !(analyse.inter & X264_ANALYSE_PSUB8x8) )
--- ovideo-1.orig/src/media/mpeg-mp3_encode.s
+++ ovideo-1/src/media/mpeg-mp3_encode.s
@@ -118,7 +118,7 @@ function mp3_encode_frame()
     setcall mean_bits mp3_mean_bits()
     set mean_bits mean_bits#
     #
-    chars buffer_data#buffer_size
+    char buffer_data#buffer_size
     data buffer^buffer_data
     #
     sd l3_sb_sample
--- ovideo-1.orig/src/media/mpeg-mp3_huffman.s
+++ ovideo-1/src/media/mpeg-mp3_huffman.s
@@ -8,51 +8,51 @@ include "../_include/include.h"
 #HTN     34
 
 function huffman_hlen(sd tab,sd index)
-    chars tab1={1, 3, 2, 3}
+    char tab1={1, 3, 2, 3}
     const t1^tab1
-    chars tab2={1, 3, 6, 3, 3, 5, 5, 5, 6}
+    char tab2={1, 3, 6, 3, 3, 5, 5, 5, 6}
     const t2^tab2
-    chars tab3={2, 2, 6, 3, 2, 5, 5, 5, 6}
+    char tab3={2, 2, 6, 3, 2, 5, 5, 5, 6}
     const t3^tab3
-    chars tab5={1, 3, 6, 7, 3, 3, 6, 7, 6, 6, 7, 8, 7, 6, 7, 8}
+    char tab5={1, 3, 6, 7, 3, 3, 6, 7, 6, 6, 7, 8, 7, 6, 7, 8}
     const t5^tab5
-    chars tab6={3, 3, 5, 7, 3, 2, 4, 5, 4, 4, 5, 6, 6, 5, 6, 7}
+    char tab6={3, 3, 5, 7, 3, 2, 4, 5, 4, 4, 5, 6, 6, 5, 6, 7}
     const t6^tab6
-    chars tab7={1, 3, 6, 8, 8, 9, 3, 4, 6, 7, 7, 8, 6, 5, 7, 8, 8, 9, 7, 7, 8, 9, 9, 9, 7, 7, 8, 9, 9, 10, 8, 8, 9, 10, 10, 10}
+    char tab7={1, 3, 6, 8, 8, 9, 3, 4, 6, 7, 7, 8, 6, 5, 7, 8, 8, 9, 7, 7, 8, 9, 9, 9, 7, 7, 8, 9, 9, 10, 8, 8, 9, 10, 10, 10}
     const t7^tab7
-    chars tab8={2, 3, 6, 8, 8, 9, 3, 2, 4, 8, 8, 8, 6, 4, 6, 8, 8, 9, 8, 8, 8, 9, 9, 10, 8, 7, 8, 9, 10, 10, 9, 8, 9, 9, 11, 11}
+    char tab8={2, 3, 6, 8, 8, 9, 3, 2, 4, 8, 8, 8, 6, 4, 6, 8, 8, 9, 8, 8, 8, 9, 9, 10, 8, 7, 8, 9, 10, 10, 9, 8, 9, 9, 11, 11}
     const t8^tab8
-    chars tab9={3, 3, 5, 6, 8, 9, 3, 3, 4, 5, 6, 8, 4, 4, 5, 6, 7, 8, 6, 5, 6, 7, 7, 8, 7, 6, 7, 7, 8, 9, 8, 7, 8, 8, 9, 9}
+    char tab9={3, 3, 5, 6, 8, 9, 3, 3, 4, 5, 6, 8, 4, 4, 5, 6, 7, 8, 6, 5, 6, 7, 7, 8, 7, 6, 7, 7, 8, 9, 8, 7, 8, 8, 9, 9}
     const t9^tab9
-    chars tab10={1, 3, 6, 8, 9, 9, 9, 10, 3, 4, 6, 7, 8, 9, 8, 8, 6, 6, 7, 8, 9, 10, 9, 9, 7, 7, 8, 9, 10, 10, 9, 10, 8, 8, 9, 10, 10, 10, 10, 10, 9, 9, 10, 10, 11, 11, 10, 11, 8, 8, 9, 10, 10, 10, 11, 11, 9, 8, 9, 10, 10, 11, 11, 11}
+    char tab10={1, 3, 6, 8, 9, 9, 9, 10, 3, 4, 6, 7, 8, 9, 8, 8, 6, 6, 7, 8, 9, 10, 9, 9, 7, 7, 8, 9, 10, 10, 9, 10, 8, 8, 9, 10, 10, 10, 10, 10, 9, 9, 10, 10, 11, 11, 10, 11, 8, 8, 9, 10, 10, 10, 11, 11, 9, 8, 9, 10, 10, 11, 11, 11}
     const t10^tab10
-    chars tab11={2, 3, 5, 7, 8, 9, 8, 9, 3, 3, 4, 6, 8, 8, 7, 8, 5, 5, 6, 7, 8, 9, 8, 8, 7, 6, 7, 9, 8, 10, 8, 9, 8, 8, 8, 9, 9, 10, 9, 10, 8, 8, 9, 10, 10, 11, 10, 11, 8, 7, 7, 8, 9, 10, 10, 10, 8, 7, 8, 9, 10, 10, 10, 10}
+    char tab11={2, 3, 5, 7, 8, 9, 8, 9, 3, 3, 4, 6, 8, 8, 7, 8, 5, 5, 6, 7, 8, 9, 8, 8, 7, 6, 7, 9, 8, 10, 8, 9, 8, 8, 8, 9, 9, 10, 9, 10, 8, 8, 9, 10, 10, 11, 10, 11, 8, 7, 7, 8, 9, 10, 10, 10, 8, 7, 8, 9, 10, 10, 10, 10}
     const t11^tab11
-    chars tab12={4, 3, 5, 7, 8, 9, 9, 9, 3, 3, 4, 5, 7, 7, 8, 8, 5, 4, 5, 6, 7, 8, 7, 8, 6, 5, 6, 6, 7, 8, 8, 8, 7, 6, 7, 7, 8, 8, 8, 9, 8, 7, 8, 8, 8, 9, 8, 9, 8, 7, 7, 8, 8, 9, 9, 10, 9, 8, 8, 9, 9, 9, 9, 10}
+    char tab12={4, 3, 5, 7, 8, 9, 9, 9, 3, 3, 4, 5, 7, 7, 8, 8, 5, 4, 5, 6, 7, 8, 7, 8, 6, 5, 6, 6, 7, 8, 8, 8, 7, 6, 7, 7, 8, 8, 8, 9, 8, 7, 8, 8, 8, 9, 8, 9, 8, 7, 7, 8, 8, 9, 9, 10, 9, 8, 8, 9, 9, 9, 9, 10}
     const t12^tab12
-    chars tab13={1, 4, 6, 7, 8, 9, 9, 10, 9, 10, 11, 11, 12, 12, 13, 13, 3, 4, 6, 7, 8, 8, 9, 9, 9, 9, 10, 10, 11, 12, 12, 12, 6, 6, 7, 8, 9, 9, 10, 10, 9, 10, 10, 11, 11, 12, 13, 13, 7, 7, 8, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 13, 13}
-    chars *  ={8, 7, 9, 9, 10, 10, 11, 11, 10, 11, 11, 12, 12, 13, 13, 14, 9, 8, 9, 10, 10, 10, 11, 11, 11, 11, 12, 11, 13, 13, 14, 14, 9, 9, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14, 10, 9, 10, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 16, 16, 9, 8, 9, 10}
-    chars *  ={10, 11, 11, 12, 12, 12, 12, 13, 13, 14, 15, 15, 10, 9, 10, 10, 11, 11, 11, 13, 12, 13, 13, 14, 14, 14, 16, 15, 10, 10, 10, 11, 11, 12, 12, 13, 12, 13, 14, 13, 14, 15, 16, 17, 11, 10, 10, 11, 12, 12, 12, 12, 13, 13, 13, 14, 15, 15, 15, 16, 11, 11, 11, 12, 12}
-    chars *  ={13, 12, 13, 14, 14, 15, 15, 15, 16, 16, 16, 12, 11, 12, 13, 13, 13, 14, 14, 14, 14, 14, 15, 16, 15, 16, 16, 13, 12, 12, 13, 13, 13, 15, 14, 14, 17, 15, 15, 15, 17, 16, 16, 12, 12, 13, 14, 14, 14, 15, 14, 15, 15, 16, 16, 19, 18, 19, 16}
+    char tab13={1, 4, 6, 7, 8, 9, 9, 10, 9, 10, 11, 11, 12, 12, 13, 13, 3, 4, 6, 7, 8, 8, 9, 9, 9, 9, 10, 10, 11, 12, 12, 12, 6, 6, 7, 8, 9, 9, 10, 10, 9, 10, 10, 11, 11, 12, 13, 13, 7, 7, 8, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 13, 13}
+    char *  ={8, 7, 9, 9, 10, 10, 11, 11, 10, 11, 11, 12, 12, 13, 13, 14, 9, 8, 9, 10, 10, 10, 11, 11, 11, 11, 12, 11, 13, 13, 14, 14, 9, 9, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14, 10, 9, 10, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 16, 16, 9, 8, 9, 10}
+    char *  ={10, 11, 11, 12, 12, 12, 12, 13, 13, 14, 15, 15, 10, 9, 10, 10, 11, 11, 11, 13, 12, 13, 13, 14, 14, 14, 16, 15, 10, 10, 10, 11, 11, 12, 12, 13, 12, 13, 14, 13, 14, 15, 16, 17, 11, 10, 10, 11, 12, 12, 12, 12, 13, 13, 13, 14, 15, 15, 15, 16, 11, 11, 11, 12, 12}
+    char *  ={13, 12, 13, 14, 14, 15, 15, 15, 16, 16, 16, 12, 11, 12, 13, 13, 13, 14, 14, 14, 14, 14, 15, 16, 15, 16, 16, 13, 12, 12, 13, 13, 13, 15, 14, 14, 17, 15, 15, 15, 17, 16, 16, 12, 12, 13, 14, 14, 14, 15, 14, 15, 15, 16, 16, 19, 18, 19, 16}
     const t13^tab13
-    chars tab15={3, 4, 5, 7, 7, 8, 9, 9, 9, 10, 10, 11, 11, 11, 12, 13, 4, 3, 5, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11, 5, 5, 5, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 11, 11, 11, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 7, 6, 7}
-    chars *  ={7, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 8, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 11, 11, 11, 12, 9, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 12, 12, 9, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 12, 9, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11}
-    chars *  ={12, 12, 12, 9, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 10, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 13, 12, 10, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 11, 10, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 13, 13}
-    chars *  ={11, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 12, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 12, 13, 12, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13}
+    char tab15={3, 4, 5, 7, 7, 8, 9, 9, 9, 10, 10, 11, 11, 11, 12, 13, 4, 3, 5, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11, 5, 5, 5, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 11, 11, 11, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 7, 6, 7}
+    char *  ={7, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 8, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 11, 11, 11, 12, 9, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 12, 12, 9, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 12, 9, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11}
+    char *  ={12, 12, 12, 9, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 10, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 13, 12, 10, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 11, 10, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 13, 13}
+    char *  ={11, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 12, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 12, 13, 12, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13}
     const t15^tab15
-    chars tab16={1, 4, 6, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 9, 3, 4, 6, 7, 8, 9, 9, 9, 10, 10, 10, 11, 12, 11, 12, 8, 6, 6, 7, 8, 9, 9, 10, 10, 11, 10, 11, 11, 11, 12, 12, 9, 8, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13}
-    chars *  ={10, 9, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 9, 9, 8, 9, 9, 10, 11, 11, 12, 11, 12, 12, 13, 13, 13, 14, 10, 10, 9, 9, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 10, 10, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 15, 15, 10, 10, 10}
-    chars *  ={10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 10, 11, 10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 14, 13, 14, 13, 11, 11, 11, 10, 11, 12, 12, 12, 12, 13, 14, 14, 14, 15, 15, 14, 10, 12, 11, 11, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 13, 14, 11, 12, 12}
-    chars *  ={12, 12, 12, 13, 13, 13, 13, 15, 14, 14, 14, 14, 16, 11, 14, 12, 12, 12, 13, 13, 14, 14, 14, 16, 15, 15, 15, 17, 15, 11, 13, 13, 11, 12, 14, 14, 13, 14, 14, 15, 16, 15, 17, 15, 14, 11, 9, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 8}
+    char tab16={1, 4, 6, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 9, 3, 4, 6, 7, 8, 9, 9, 9, 10, 10, 10, 11, 12, 11, 12, 8, 6, 6, 7, 8, 9, 9, 10, 10, 11, 10, 11, 11, 11, 12, 12, 9, 8, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13}
+    char *  ={10, 9, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 9, 9, 8, 9, 9, 10, 11, 11, 12, 11, 12, 12, 13, 13, 13, 14, 10, 10, 9, 9, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 10, 10, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 15, 15, 10, 10, 10}
+    char *  ={10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 10, 11, 10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 14, 13, 14, 13, 11, 11, 11, 10, 11, 12, 12, 12, 12, 13, 14, 14, 14, 15, 15, 14, 10, 12, 11, 11, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 13, 14, 11, 12, 12}
+    char *  ={12, 12, 12, 13, 13, 13, 13, 15, 14, 14, 14, 14, 16, 11, 14, 12, 12, 12, 13, 13, 14, 14, 14, 16, 15, 15, 15, 17, 15, 11, 13, 13, 11, 12, 14, 14, 13, 14, 14, 15, 16, 15, 17, 15, 14, 11, 9, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 8}
     const t16^tab16
-    chars tab24={4, 4, 6, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 12, 9, 4, 4, 5, 6, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 8, 6, 5, 6, 7, 7, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 7, 7, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 7, 8, 7, 7, 8}
-    chars *  ={8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 11, 7, 9, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 7, 9, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 7, 10, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 8, 10, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11}
-    chars *  ={8, 10, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 8, 11, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 8, 11, 10, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 8, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 8, 11, 10, 10}
-    chars *  ={10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 8, 12, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 4}
+    char tab24={4, 4, 6, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 12, 9, 4, 4, 5, 6, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 8, 6, 5, 6, 7, 7, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 7, 7, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 7, 8, 7, 7, 8}
+    char *  ={8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 11, 7, 9, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 7, 9, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 7, 10, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 8, 10, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11}
+    char *  ={8, 10, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 8, 11, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 8, 11, 10, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 8, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 8, 11, 10, 10}
+    char *  ={10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 8, 12, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 4}
     const t24^tab24
-    chars tab32={1, 4, 4, 5, 4, 6, 5, 6, 4, 5, 5, 6, 5, 6, 6, 6}
+    char tab32={1, 4, 4, 5, 4, 6, 5, 6, 4, 5, 5, 6, 5, 6, 6, 6}
     const t32^tab32
-    chars tab33={4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}
+    char tab33={4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}
     const t33^tab33
 
     data hlen%{0,t1, t2, t3,0, t5, t6, t7, t8, t9, t10, t11, t12, t13,0, t15}
--- ovideo-1.orig/src/media/mpeg-mp3_mdct.s
+++ ovideo-1/src/media/mpeg-mp3_mdct.s
@@ -228,14 +228,14 @@ function l3_mdct_init()
     data *double_3_high#1
     data double_3^double_3_low
     ##prepare the aliasing reduction butterflies
-    chars c_data="-0.6"
-    chars *="-0.535"
-    chars *="-0.33"
-    chars *="-0.185"
-    chars *="-0.095"
-    chars *="-0.041"
-    chars *="-0.0142"
-    chars *="-0.0037"
+    char c_data="-0.6"
+    char *="-0.535"
+    char *="-0.33"
+    char *="-0.185"
+    char *="-0.095"
+    char *="-0.041"
+    char *="-0.0142"
+    char *="-0.0037"
     sd c^c_data
     sd ca
     sd cs
--- ovideo-1.orig/src/media/mpeg-mp3_tables.s
+++ ovideo-1/src/media/mpeg-mp3_tables.s
@@ -5,569 +5,569 @@ format elfobj
 include "../_include/include.h"
 
 function mp3_tables_enwindow()
-    chars enwindow_data="0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000000"
-    chars *            ="-0.000001"
-    chars *            ="-0.000001"
-    chars *            ="-0.000001"
-    #
-    chars *            ="-0.000001"
-    chars *            ="-0.000001"
-    chars *            ="-0.000001"
-    chars *            ="-0.000002"
-    chars *            ="-0.000002"
-    chars *            ="-0.000002"
-    chars *            ="-0.000002"
-    chars *            ="-0.000003"
-    chars *            ="-0.000003"
-    chars *            ="-0.000003"
-    #
-    chars *            ="-0.000004"
-    chars *            ="-0.000004"
-    chars *            ="-0.000005"
-    chars *            ="-0.000005"
-    chars *            ="-0.000006"
-    chars *            ="-0.000007"
-    chars *            ="-0.000008"
-    chars *            ="-0.000008"
-    chars *            ="-0.000009"
-    chars *            ="-0.000010"
-    #
-    chars *            ="-0.000011"
-    chars *            ="-0.000012"
-    chars *            ="-0.000014"
-    chars *            ="-0.000015"
-    chars *            ="-0.000017"
-    chars *            ="-0.000018"
-    chars *            ="-0.000020"
-    chars *            ="-0.000021"
-    chars *            ="-0.000023"
-    chars *            ="-0.000025"
-    #
-    chars *            ="-0.000028"
-    chars *            ="-0.000030"
-    chars *            ="-0.000032"
-    chars *            ="-0.000035"
-    chars *            ="-0.000038"
-    chars *            ="-0.000041"
-    chars *            ="-0.000043"
-    chars *            ="-0.000046"
-    chars *            ="-0.000050"
-    chars *            ="-0.000053"
-    #
-    chars *            ="-0.000056"
-    chars *            ="-0.000060"
-    chars *            ="-0.000063"
-    chars *            ="-0.000066"
-    chars *            ="-0.000070"
-    chars *            ="-0.000073"
-    chars *            ="-0.000077"
-    chars *            ="-0.000081"
-    chars *            ="-0.000084"
-    chars *            ="-0.000087"
-    #
-    chars *            ="-0.000091"
-    chars *            ="-0.000093"
-    chars *            ="-0.000096"
-    chars *            ="-0.000099"
-    chars *            ="0.000102"
-    chars *            ="0.000104"
-    chars *            ="0.000106"
-    chars *            ="0.000107"
-    chars *            ="0.000108"
-    chars *            ="0.000109"
-    #
-    chars *            ="0.000109"
-    chars *            ="0.000108"
-    chars *            ="0.000107"
-    chars *            ="0.000105"
-    chars *            ="0.000103"
-    chars *            ="0.000099"
-    chars *            ="0.000095"
-    chars *            ="0.000090"
-    chars *            ="0.000084"
-    chars *            ="0.000078"
-    #
-    chars *            ="0.000070"
-    chars *            ="0.000061"
-    chars *            ="0.000051"
-    chars *            ="0.000040"
-    chars *            ="0.000027"
-    chars *            ="0.000014"
-    chars *            ="-0.000001"
-    chars *            ="-0.000017"
-    chars *            ="-0.000034"
-    chars *            ="-0.000053"
-    #
-    chars *            ="-0.000073"
-    chars *            ="-0.000094"
-    chars *            ="-0.000116"
-    chars *            ="-0.000140"
-    chars *            ="-0.000165"
-    chars *            ="-0.000191"
-    chars *            ="-0.000219"
-    chars *            ="-0.000247"
-    chars *            ="-0.000277"
-    chars *            ="-0.000308"
-    #
-    chars *            ="-0.000339"
-    chars *            ="-0.000371"
-    chars *            ="-0.000404"
-    chars *            ="-0.000438"
-    chars *            ="-0.000473"
-    chars *            ="-0.000507"
-    chars *            ="-0.000542"
-    chars *            ="-0.000577"
-    chars *            ="-0.000612"
-    chars *            ="-0.000647"
-    #
-    chars *            ="-0.000681"
-    chars *            ="-0.000714"
-    chars *            ="-0.000747"
-    chars *            ="-0.000779"
-    chars *            ="-0.000810"
-    chars *            ="-0.000839"
-    chars *            ="-0.000866"
-    chars *            ="-0.000892"
-    chars *            ="-0.000915"
-    chars *            ="-0.000936"
-    #
-    chars *            ="-0.000954"
-    chars *            ="-0.000969"
-    chars *            ="-0.000981"
-    chars *            ="-0.000989"
-    chars *            ="-0.000994"
-    chars *            ="-0.000995"
-    chars *            ="-0.000992"
-    chars *            ="-0.000984"
-    chars *            ="0.000971"
-    chars *            ="0.000954"
-    #
-    chars *            ="0.000931"
-    chars *            ="0.000903"
-    chars *            ="0.000869"
-    chars *            ="0.000829"
-    chars *            ="0.000784"
-    chars *            ="0.000732"
-    chars *            ="0.000674"
-    chars *            ="0.000610"
-    chars *            ="0.000539"
-    chars *            ="0.000463"
-    #
-    chars *            ="0.000379"
-    chars *            ="0.000288"
-    chars *            ="0.000192"
-    chars *            ="0.000088"
-    chars *            ="-0.000021"
-    chars *            ="-0.000137"
-    chars *            ="-0.000260"
-    chars *            ="-0.000388"
-    chars *            ="-0.000522"
-    chars *            ="-0.000662"
-    #
-    chars *            ="-0.000807"
-    chars *            ="-0.000957"
-    chars *            ="-0.001111"
-    chars *            ="-0.001270"
-    chars *            ="-0.001432"
-    chars *            ="-0.001598"
-    chars *            ="-0.001767"
-    chars *            ="-0.001937"
-    chars *            ="-0.002110"
-    chars *            ="-0.002283"
-    #
-    chars *            ="-0.002457"
-    chars *            ="-0.002631"
-    chars *            ="-0.002803"
-    chars *            ="-0.002974"
-    chars *            ="-0.003142"
-    chars *            ="-0.003307"
-    chars *            ="-0.003467"
-    chars *            ="-0.003623"
-    chars *            ="-0.003772"
-    chars *            ="-0.003914"
-    #
-    chars *            ="-0.004049"
-    chars *            ="-0.004175"
-    chars *            ="-0.004291"
-    chars *            ="-0.004396"
-    chars *            ="-0.004490"
-    chars *            ="-0.004570"
-    chars *            ="-0.004638"
-    chars *            ="-0.004691"
-    chars *            ="-0.004728"
-    chars *            ="-0.004749"
-    #
-    chars *            ="-0.004752"
-    chars *            ="-0.004737"
-    chars *            ="-0.004703"
-    chars *            ="-0.004649"
-    chars *            ="-0.004574"
-    chars *            ="-0.004477"
-    chars *            ="-0.004358"
-    chars *            ="-0.004215"
-    chars *            ="-0.004049"
-    chars *            ="-0.003859"
-    #
-    chars *            ="-0.003643"
-    chars *            ="-0.003402"
-    chars *            ="0.003135"
-    chars *            ="0.002841"
-    chars *            ="0.002522"
-    chars *            ="0.002175"
-    chars *            ="0.001801"
-    chars *            ="0.001400"
-    chars *            ="0.000971"
-    chars *            ="0.000516"
-    #
-    chars *            ="0.000033"
-    chars *            ="-0.000476"
-    chars *            ="-0.001012"
-    chars *            ="-0.001574"
-    chars *            ="-0.002162"
-    chars *            ="-0.002774"
-    chars *            ="-0.003411"
-    chars *            ="-0.004072"
-    chars *            ="-0.004756"
-    chars *            ="-0.005462"
-    #
-    chars *            ="-0.006189"
-    chars *            ="-0.006937"
-    chars *            ="-0.007703"
-    chars *            ="-0.008487"
-    chars *            ="-0.009288"
-    chars *            ="-0.010104"
-    chars *            ="-0.010933"
-    chars *            ="-0.011775"
-    chars *            ="-0.012628"
-    chars *            ="-0.013489"
-    #
-    chars *            ="-0.014359"
-    chars *            ="-0.015234"
-    chars *            ="-0.016113"
-    chars *            ="-0.016994"
-    chars *            ="-0.017876"
-    chars *            ="-0.018757"
-    chars *            ="-0.019634"
-    chars *            ="-0.020507"
-    chars *            ="-0.021372"
-    chars *            ="-0.022229"
-    #
-    chars *            ="-0.023074"
-    chars *            ="-0.023907"
-    chars *            ="-0.024725"
-    chars *            ="-0.025527"
-    chars *            ="-0.026311"
-    chars *            ="-0.027074"
-    chars *            ="-0.027815"
-    chars *            ="-0.028533"
-    chars *            ="-0.029225"
-    chars *            ="-0.029890"
-    #
-    chars *            ="-0.030527"
-    chars *            ="-0.031133"
-    chars *            ="-0.031707"
-    chars *            ="-0.032248"
-    chars *            ="-0.032755"
-    chars *            ="-0.033226"
-    chars *            ="-0.033660"
-    chars *            ="-0.034056"
-    chars *            ="-0.034413"
-    chars *            ="-0.034730"
-    #
-    chars *            ="-0.035007"
-    chars *            ="-0.035242"
-    chars *            ="-0.035435"
-    chars *            ="-0.035586"
-    chars *            ="-0.035694"
-    chars *            ="-0.035759"
-    chars *            ="0.035781"
-    chars *            ="0.035759"
-    chars *            ="0.035694"
-    chars *            ="0.035586"
-    #
-    chars *            ="0.035435"
-    chars *            ="0.035242"
-    chars *            ="0.035007"
-    chars *            ="0.034730"
-    chars *            ="0.034413"
-    chars *            ="0.034056"
-    chars *            ="0.033660"
-    chars *            ="0.033226"
-    chars *            ="0.032755"
-    chars *            ="0.032248"
-    #
-    chars *            ="0.031707"
-    chars *            ="0.031133"
-    chars *            ="0.030527"
-    chars *            ="0.029890"
-    chars *            ="0.029225"
-    chars *            ="0.028533"
-    chars *            ="0.027815"
-    chars *            ="0.027074"
-    chars *            ="0.026311"
-    chars *            ="0.025527"
-    #
-    chars *            ="0.024725"
-    chars *            ="0.023907"
-    chars *            ="0.023074"
-    chars *            ="0.022229"
-    chars *            ="0.021372"
-    chars *            ="0.020507"
-    chars *            ="0.019634"
-    chars *            ="0.018757"
-    chars *            ="0.017876"
-    chars *            ="0.016994"
-    #
-    chars *            ="0.016113"
-    chars *            ="0.015234"
-    chars *            ="0.014359"
-    chars *            ="0.013489"
-    chars *            ="0.012628"
-    chars *            ="0.011775"
-    chars *            ="0.010933"
-    chars *            ="0.010104"
-    chars *            ="0.009288"
-    chars *            ="0.008487"
-    #
-    chars *            ="0.007703"
-    chars *            ="0.006937"
-    chars *            ="0.006189"
-    chars *            ="0.005462"
-    chars *            ="0.004756"
-    chars *            ="0.004072"
-    chars *            ="0.003411"
-    chars *            ="0.002774"
-    chars *            ="0.002162"
-    chars *            ="0.001574"
-    #
-    chars *            ="0.001012"
-    chars *            ="0.000476"
-    chars *            ="-0.000033"
-    chars *            ="-0.000516"
-    chars *            ="-0.000971"
-    chars *            ="-0.001400"
-    chars *            ="-0.001801"
-    chars *            ="-0.002175"
-    chars *            ="-0.002522"
-    chars *            ="-0.002841"
-    #
-    chars *            ="0.003135"
-    chars *            ="0.003402"
-    chars *            ="0.003643"
-    chars *            ="0.003859"
-    chars *            ="0.004049"
-    chars *            ="0.004215"
-    chars *            ="0.004358"
-    chars *            ="0.004477"
-    chars *            ="0.004574"
-    chars *            ="0.004649"
-    #
-    chars *            ="0.004703"
-    chars *            ="0.004737"
-    chars *            ="0.004752"
-    chars *            ="0.004749"
-    chars *            ="0.004728"
-    chars *            ="0.004691"
-    chars *            ="0.004638"
-    chars *            ="0.004570"
-    chars *            ="0.004490"
-    chars *            ="0.004396"
-    #
-    chars *            ="0.004291"
-    chars *            ="0.004175"
-    chars *            ="0.004049"
-    chars *            ="0.003914"
-    chars *            ="0.003772"
-    chars *            ="0.003623"
-    chars *            ="0.003467"
-    chars *            ="0.003307"
-    chars *            ="0.003142"
-    chars *            ="0.002974"
-    #
-    chars *            ="0.002803"
-    chars *            ="0.002631"
-    chars *            ="0.002457"
-    chars *            ="0.002283"
-    chars *            ="0.002110"
-    chars *            ="0.001937"
-    chars *            ="0.001767"
-    chars *            ="0.001598"
-    chars *            ="0.001432"
-    chars *            ="0.001270"
-    #
-    chars *            ="0.001111"
-    chars *            ="0.000957"
-    chars *            ="0.000807"
-    chars *            ="0.000662"
-    chars *            ="0.000522"
-    chars *            ="0.000388"
-    chars *            ="0.000260"
-    chars *            ="0.000137"
-    chars *            ="0.000021"
-    chars *            ="-0.000088"
-    #
-    chars *            ="-0.000192"
-    chars *            ="-0.000288"
-    chars *            ="-0.000379"
-    chars *            ="-0.000463"
-    chars *            ="-0.000539"
-    chars *            ="-0.000610"
-    chars *            ="-0.000674"
-    chars *            ="-0.000732"
-    chars *            ="-0.000784"
-    chars *            ="-0.000829"
-    #
-    chars *            ="-0.000869"
-    chars *            ="-0.000903"
-    chars *            ="-0.000931"
-    chars *            ="-0.000954"
-    chars *            ="0.000971"
-    chars *            ="0.000984"
-    chars *            ="0.000992"
-    chars *            ="0.000995"
-    chars *            ="0.000994"
-    chars *            ="0.000989"
-    #
-    chars *            ="0.000981"
-    chars *            ="0.000969"
-    chars *            ="0.000954"
-    chars *            ="0.000936"
-    chars *            ="0.000915"
-    chars *            ="0.000892"
-    chars *            ="0.000866"
-    chars *            ="0.000839"
-    chars *            ="0.000810"
-    chars *            ="0.000779"
-    #
-    chars *            ="0.000747"
-    chars *            ="0.000714"
-    chars *            ="0.000681"
-    chars *            ="0.000647"
-    chars *            ="0.000612"
-    chars *            ="0.000577"
-    chars *            ="0.000542"
-    chars *            ="0.000507"
-    chars *            ="0.000473"
-    chars *            ="0.000438"
-    #
-    chars *            ="0.000404"
-    chars *            ="0.000371"
-    chars *            ="0.000339"
-    chars *            ="0.000308"
-    chars *            ="0.000277"
-    chars *            ="0.000247"
-    chars *            ="0.000219"
-    chars *            ="0.000191"
-    chars *            ="0.000165"
-    chars *            ="0.000140"
-    #
-    chars *            ="0.000116"
-    chars *            ="0.000094"
-    chars *            ="0.000073"
-    chars *            ="0.000053"
-    chars *            ="0.000034"
-    chars *            ="0.000017"
-    chars *            ="0.000001"
-    chars *            ="-0.000014"
-    chars *            ="-0.000027"
-    chars *            ="-0.000040"
-    #
-    chars *            ="-0.000051"
-    chars *            ="-0.000061"
-    chars *            ="-0.000070"
-    chars *            ="-0.000078"
-    chars *            ="-0.000084"
-    chars *            ="-0.000090"
-    chars *            ="-0.000095"
-    chars *            ="-0.000099"
-    chars *            ="-0.000103"
-    chars *            ="-0.000105"
-    #
-    chars *            ="-0.000107"
-    chars *            ="-0.000108"
-    chars *            ="-0.000109"
-    chars *            ="-0.000109"
-    chars *            ="-0.000108"
-    chars *            ="-0.000107"
-    chars *            ="-0.000106"
-    chars *            ="-0.000104"
-    chars *            ="0.000102"
-    chars *            ="0.000099"
-    #
-    chars *            ="0.000096"
-    chars *            ="0.000093"
-    chars *            ="0.000091"
-    chars *            ="0.000087"
-    chars *            ="0.000084"
-    chars *            ="0.000081"
-    chars *            ="0.000077"
-    chars *            ="0.000073"
-    chars *            ="0.000070"
-    chars *            ="0.000066"
-    #
-    chars *            ="0.000063"
-    chars *            ="0.000060"
-    chars *            ="0.000056"
-    chars *            ="0.000053"
-    chars *            ="0.000050"
-    chars *            ="0.000046"
-    chars *            ="0.000043"
-    chars *            ="0.000041"
-    chars *            ="0.000038"
-    chars *            ="0.000035"
-    #
-    chars *            ="0.000032"
-    chars *            ="0.000030"
-    chars *            ="0.000028"
-    chars *            ="0.000025"
-    chars *            ="0.000023"
-    chars *            ="0.000021"
-    chars *            ="0.000020"
-    chars *            ="0.000018"
-    chars *            ="0.000017"
-    chars *            ="0.000015"
-    #
-    chars *            ="0.000014"
-    chars *            ="0.000012"
-    chars *            ="0.000011"
-    chars *            ="0.000010"
-    chars *            ="0.000009"
-    chars *            ="0.000008"
-    chars *            ="0.000008"
-    chars *            ="0.000007"
-    chars *            ="0.000006"
-    chars *            ="0.000005"
-    #
-    chars *            ="0.000005"
-    chars *            ="0.000004"
-    chars *            ="0.000004"
-    chars *            ="0.000003"
-    chars *            ="0.000003"
-    chars *            ="0.000003"
-    chars *            ="0.000002"
-    chars *            ="0.000002"
-    chars *            ="0.000002"
-    chars *            ="0.000002"
-    #
-    chars *            ="0.000001"
-    chars *            ="0.000001"
-    chars *            ="0.000001"
-    chars *            ="0.000001"
-    chars *            ="0.000001"
-    chars *            ="0.000001"
-    chars *            ="0.000000"
-    chars *            ="0.000000"
-    chars *            ="0.000000"
-    chars *            ="0.000000"
+    char enwindow_data="0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000000"
+    char *            ="-0.000001"
+    char *            ="-0.000001"
+    char *            ="-0.000001"
+    #
+    char *            ="-0.000001"
+    char *            ="-0.000001"
+    char *            ="-0.000001"
+    char *            ="-0.000002"
+    char *            ="-0.000002"
+    char *            ="-0.000002"
+    char *            ="-0.000002"
+    char *            ="-0.000003"
+    char *            ="-0.000003"
+    char *            ="-0.000003"
+    #
+    char *            ="-0.000004"
+    char *            ="-0.000004"
+    char *            ="-0.000005"
+    char *            ="-0.000005"
+    char *            ="-0.000006"
+    char *            ="-0.000007"
+    char *            ="-0.000008"
+    char *            ="-0.000008"
+    char *            ="-0.000009"
+    char *            ="-0.000010"
+    #
+    char *            ="-0.000011"
+    char *            ="-0.000012"
+    char *            ="-0.000014"
+    char *            ="-0.000015"
+    char *            ="-0.000017"
+    char *            ="-0.000018"
+    char *            ="-0.000020"
+    char *            ="-0.000021"
+    char *            ="-0.000023"
+    char *            ="-0.000025"
+    #
+    char *            ="-0.000028"
+    char *            ="-0.000030"
+    char *            ="-0.000032"
+    char *            ="-0.000035"
+    char *            ="-0.000038"
+    char *            ="-0.000041"
+    char *            ="-0.000043"
+    char *            ="-0.000046"
+    char *            ="-0.000050"
+    char *            ="-0.000053"
+    #
+    char *            ="-0.000056"
+    char *            ="-0.000060"
+    char *            ="-0.000063"
+    char *            ="-0.000066"
+    char *            ="-0.000070"
+    char *            ="-0.000073"
+    char *            ="-0.000077"
+    char *            ="-0.000081"
+    char *            ="-0.000084"
+    char *            ="-0.000087"
+    #
+    char *            ="-0.000091"
+    char *            ="-0.000093"
+    char *            ="-0.000096"
+    char *            ="-0.000099"
+    char *            ="0.000102"
+    char *            ="0.000104"
+    char *            ="0.000106"
+    char *            ="0.000107"
+    char *            ="0.000108"
+    char *            ="0.000109"
+    #
+    char *            ="0.000109"
+    char *            ="0.000108"
+    char *            ="0.000107"
+    char *            ="0.000105"
+    char *            ="0.000103"
+    char *            ="0.000099"
+    char *            ="0.000095"
+    char *            ="0.000090"
+    char *            ="0.000084"
+    char *            ="0.000078"
+    #
+    char *            ="0.000070"
+    char *            ="0.000061"
+    char *            ="0.000051"
+    char *            ="0.000040"
+    char *            ="0.000027"
+    char *            ="0.000014"
+    char *            ="-0.000001"
+    char *            ="-0.000017"
+    char *            ="-0.000034"
+    char *            ="-0.000053"
+    #
+    char *            ="-0.000073"
+    char *            ="-0.000094"
+    char *            ="-0.000116"
+    char *            ="-0.000140"
+    char *            ="-0.000165"
+    char *            ="-0.000191"
+    char *            ="-0.000219"
+    char *            ="-0.000247"
+    char *            ="-0.000277"
+    char *            ="-0.000308"
+    #
+    char *            ="-0.000339"
+    char *            ="-0.000371"
+    char *            ="-0.000404"
+    char *            ="-0.000438"
+    char *            ="-0.000473"
+    char *            ="-0.000507"
+    char *            ="-0.000542"
+    char *            ="-0.000577"
+    char *            ="-0.000612"
+    char *            ="-0.000647"
+    #
+    char *            ="-0.000681"
+    char *            ="-0.000714"
+    char *            ="-0.000747"
+    char *            ="-0.000779"
+    char *            ="-0.000810"
+    char *            ="-0.000839"
+    char *            ="-0.000866"
+    char *            ="-0.000892"
+    char *            ="-0.000915"
+    char *            ="-0.000936"
+    #
+    char *            ="-0.000954"
+    char *            ="-0.000969"
+    char *            ="-0.000981"
+    char *            ="-0.000989"
+    char *            ="-0.000994"
+    char *            ="-0.000995"
+    char *            ="-0.000992"
+    char *            ="-0.000984"
+    char *            ="0.000971"
+    char *            ="0.000954"
+    #
+    char *            ="0.000931"
+    char *            ="0.000903"
+    char *            ="0.000869"
+    char *            ="0.000829"
+    char *            ="0.000784"
+    char *            ="0.000732"
+    char *            ="0.000674"
+    char *            ="0.000610"
+    char *            ="0.000539"
+    char *            ="0.000463"
+    #
+    char *            ="0.000379"
+    char *            ="0.000288"
+    char *            ="0.000192"
+    char *            ="0.000088"
+    char *            ="-0.000021"
+    char *            ="-0.000137"
+    char *            ="-0.000260"
+    char *            ="-0.000388"
+    char *            ="-0.000522"
+    char *            ="-0.000662"
+    #
+    char *            ="-0.000807"
+    char *            ="-0.000957"
+    char *            ="-0.001111"
+    char *            ="-0.001270"
+    char *            ="-0.001432"
+    char *            ="-0.001598"
+    char *            ="-0.001767"
+    char *            ="-0.001937"
+    char *            ="-0.002110"
+    char *            ="-0.002283"
+    #
+    char *            ="-0.002457"
+    char *            ="-0.002631"
+    char *            ="-0.002803"
+    char *            ="-0.002974"
+    char *            ="-0.003142"
+    char *            ="-0.003307"
+    char *            ="-0.003467"
+    char *            ="-0.003623"
+    char *            ="-0.003772"
+    char *            ="-0.003914"
+    #
+    char *            ="-0.004049"
+    char *            ="-0.004175"
+    char *            ="-0.004291"
+    char *            ="-0.004396"
+    char *            ="-0.004490"
+    char *            ="-0.004570"
+    char *            ="-0.004638"
+    char *            ="-0.004691"
+    char *            ="-0.004728"
+    char *            ="-0.004749"
+    #
+    char *            ="-0.004752"
+    char *            ="-0.004737"
+    char *            ="-0.004703"
+    char *            ="-0.004649"
+    char *            ="-0.004574"
+    char *            ="-0.004477"
+    char *            ="-0.004358"
+    char *            ="-0.004215"
+    char *            ="-0.004049"
+    char *            ="-0.003859"
+    #
+    char *            ="-0.003643"
+    char *            ="-0.003402"
+    char *            ="0.003135"
+    char *            ="0.002841"
+    char *            ="0.002522"
+    char *            ="0.002175"
+    char *            ="0.001801"
+    char *            ="0.001400"
+    char *            ="0.000971"
+    char *            ="0.000516"
+    #
+    char *            ="0.000033"
+    char *            ="-0.000476"
+    char *            ="-0.001012"
+    char *            ="-0.001574"
+    char *            ="-0.002162"
+    char *            ="-0.002774"
+    char *            ="-0.003411"
+    char *            ="-0.004072"
+    char *            ="-0.004756"
+    char *            ="-0.005462"
+    #
+    char *            ="-0.006189"
+    char *            ="-0.006937"
+    char *            ="-0.007703"
+    char *            ="-0.008487"
+    char *            ="-0.009288"
+    char *            ="-0.010104"
+    char *            ="-0.010933"
+    char *            ="-0.011775"
+    char *            ="-0.012628"
+    char *            ="-0.013489"
+    #
+    char *            ="-0.014359"
+    char *            ="-0.015234"
+    char *            ="-0.016113"
+    char *            ="-0.016994"
+    char *            ="-0.017876"
+    char *            ="-0.018757"
+    char *            ="-0.019634"
+    char *            ="-0.020507"
+    char *            ="-0.021372"
+    char *            ="-0.022229"
+    #
+    char *            ="-0.023074"
+    char *            ="-0.023907"
+    char *            ="-0.024725"
+    char *            ="-0.025527"
+    char *            ="-0.026311"
+    char *            ="-0.027074"
+    char *            ="-0.027815"
+    char *            ="-0.028533"
+    char *            ="-0.029225"
+    char *            ="-0.029890"
+    #
+    char *            ="-0.030527"
+    char *            ="-0.031133"
+    char *            ="-0.031707"
+    char *            ="-0.032248"
+    char *            ="-0.032755"
+    char *            ="-0.033226"
+    char *            ="-0.033660"
+    char *            ="-0.034056"
+    char *            ="-0.034413"
+    char *            ="-0.034730"
+    #
+    char *            ="-0.035007"
+    char *            ="-0.035242"
+    char *            ="-0.035435"
+    char *            ="-0.035586"
+    char *            ="-0.035694"
+    char *            ="-0.035759"
+    char *            ="0.035781"
+    char *            ="0.035759"
+    char *            ="0.035694"
+    char *            ="0.035586"
+    #
+    char *            ="0.035435"
+    char *            ="0.035242"
+    char *            ="0.035007"
+    char *            ="0.034730"
+    char *            ="0.034413"
+    char *            ="0.034056"
+    char *            ="0.033660"
+    char *            ="0.033226"
+    char *            ="0.032755"
+    char *            ="0.032248"
+    #
+    char *            ="0.031707"
+    char *            ="0.031133"
+    char *            ="0.030527"
+    char *            ="0.029890"
+    char *            ="0.029225"
+    char *            ="0.028533"
+    char *            ="0.027815"
+    char *            ="0.027074"
+    char *            ="0.026311"
+    char *            ="0.025527"
+    #
+    char *            ="0.024725"
+    char *            ="0.023907"
+    char *            ="0.023074"
+    char *            ="0.022229"
+    char *            ="0.021372"
+    char *            ="0.020507"
+    char *            ="0.019634"
+    char *            ="0.018757"
+    char *            ="0.017876"
+    char *            ="0.016994"
+    #
+    char *            ="0.016113"
+    char *            ="0.015234"
+    char *            ="0.014359"
+    char *            ="0.013489"
+    char *            ="0.012628"
+    char *            ="0.011775"
+    char *            ="0.010933"
+    char *            ="0.010104"
+    char *            ="0.009288"
+    char *            ="0.008487"
+    #
+    char *            ="0.007703"
+    char *            ="0.006937"
+    char *            ="0.006189"
+    char *            ="0.005462"
+    char *            ="0.004756"
+    char *            ="0.004072"
+    char *            ="0.003411"
+    char *            ="0.002774"
+    char *            ="0.002162"
+    char *            ="0.001574"
+    #
+    char *            ="0.001012"
+    char *            ="0.000476"
+    char *            ="-0.000033"
+    char *            ="-0.000516"
+    char *            ="-0.000971"
+    char *            ="-0.001400"
+    char *            ="-0.001801"
+    char *            ="-0.002175"
+    char *            ="-0.002522"
+    char *            ="-0.002841"
+    #
+    char *            ="0.003135"
+    char *            ="0.003402"
+    char *            ="0.003643"
+    char *            ="0.003859"
+    char *            ="0.004049"
+    char *            ="0.004215"
+    char *            ="0.004358"
+    char *            ="0.004477"
+    char *            ="0.004574"
+    char *            ="0.004649"
+    #
+    char *            ="0.004703"
+    char *            ="0.004737"
+    char *            ="0.004752"
+    char *            ="0.004749"
+    char *            ="0.004728"
+    char *            ="0.004691"
+    char *            ="0.004638"
+    char *            ="0.004570"
+    char *            ="0.004490"
+    char *            ="0.004396"
+    #
+    char *            ="0.004291"
+    char *            ="0.004175"
+    char *            ="0.004049"
+    char *            ="0.003914"
+    char *            ="0.003772"
+    char *            ="0.003623"
+    char *            ="0.003467"
+    char *            ="0.003307"
+    char *            ="0.003142"
+    char *            ="0.002974"
+    #
+    char *            ="0.002803"
+    char *            ="0.002631"
+    char *            ="0.002457"
+    char *            ="0.002283"
+    char *            ="0.002110"
+    char *            ="0.001937"
+    char *            ="0.001767"
+    char *            ="0.001598"
+    char *            ="0.001432"
+    char *            ="0.001270"
+    #
+    char *            ="0.001111"
+    char *            ="0.000957"
+    char *            ="0.000807"
+    char *            ="0.000662"
+    char *            ="0.000522"
+    char *            ="0.000388"
+    char *            ="0.000260"
+    char *            ="0.000137"
+    char *            ="0.000021"
+    char *            ="-0.000088"
+    #
+    char *            ="-0.000192"
+    char *            ="-0.000288"
+    char *            ="-0.000379"
+    char *            ="-0.000463"
+    char *            ="-0.000539"
+    char *            ="-0.000610"
+    char *            ="-0.000674"
+    char *            ="-0.000732"
+    char *            ="-0.000784"
+    char *            ="-0.000829"
+    #
+    char *            ="-0.000869"
+    char *            ="-0.000903"
+    char *            ="-0.000931"
+    char *            ="-0.000954"
+    char *            ="0.000971"
+    char *            ="0.000984"
+    char *            ="0.000992"
+    char *            ="0.000995"
+    char *            ="0.000994"
+    char *            ="0.000989"
+    #
+    char *            ="0.000981"
+    char *            ="0.000969"
+    char *            ="0.000954"
+    char *            ="0.000936"
+    char *            ="0.000915"
+    char *            ="0.000892"
+    char *            ="0.000866"
+    char *            ="0.000839"
+    char *            ="0.000810"
+    char *            ="0.000779"
+    #
+    char *            ="0.000747"
+    char *            ="0.000714"
+    char *            ="0.000681"
+    char *            ="0.000647"
+    char *            ="0.000612"
+    char *            ="0.000577"
+    char *            ="0.000542"
+    char *            ="0.000507"
+    char *            ="0.000473"
+    char *            ="0.000438"
+    #
+    char *            ="0.000404"
+    char *            ="0.000371"
+    char *            ="0.000339"
+    char *            ="0.000308"
+    char *            ="0.000277"
+    char *            ="0.000247"
+    char *            ="0.000219"
+    char *            ="0.000191"
+    char *            ="0.000165"
+    char *            ="0.000140"
+    #
+    char *            ="0.000116"
+    char *            ="0.000094"
+    char *            ="0.000073"
+    char *            ="0.000053"
+    char *            ="0.000034"
+    char *            ="0.000017"
+    char *            ="0.000001"
+    char *            ="-0.000014"
+    char *            ="-0.000027"
+    char *            ="-0.000040"
+    #
+    char *            ="-0.000051"
+    char *            ="-0.000061"
+    char *            ="-0.000070"
+    char *            ="-0.000078"
+    char *            ="-0.000084"
+    char *            ="-0.000090"
+    char *            ="-0.000095"
+    char *            ="-0.000099"
+    char *            ="-0.000103"
+    char *            ="-0.000105"
+    #
+    char *            ="-0.000107"
+    char *            ="-0.000108"
+    char *            ="-0.000109"
+    char *            ="-0.000109"
+    char *            ="-0.000108"
+    char *            ="-0.000107"
+    char *            ="-0.000106"
+    char *            ="-0.000104"
+    char *            ="0.000102"
+    char *            ="0.000099"
+    #
+    char *            ="0.000096"
+    char *            ="0.000093"
+    char *            ="0.000091"
+    char *            ="0.000087"
+    char *            ="0.000084"
+    char *            ="0.000081"
+    char *            ="0.000077"
+    char *            ="0.000073"
+    char *            ="0.000070"
+    char *            ="0.000066"
+    #
+    char *            ="0.000063"
+    char *            ="0.000060"
+    char *            ="0.000056"
+    char *            ="0.000053"
+    char *            ="0.000050"
+    char *            ="0.000046"
+    char *            ="0.000043"
+    char *            ="0.000041"
+    char *            ="0.000038"
+    char *            ="0.000035"
+    #
+    char *            ="0.000032"
+    char *            ="0.000030"
+    char *            ="0.000028"
+    char *            ="0.000025"
+    char *            ="0.000023"
+    char *            ="0.000021"
+    char *            ="0.000020"
+    char *            ="0.000018"
+    char *            ="0.000017"
+    char *            ="0.000015"
+    #
+    char *            ="0.000014"
+    char *            ="0.000012"
+    char *            ="0.000011"
+    char *            ="0.000010"
+    char *            ="0.000009"
+    char *            ="0.000008"
+    char *            ="0.000008"
+    char *            ="0.000007"
+    char *            ="0.000006"
+    char *            ="0.000005"
+    #
+    char *            ="0.000005"
+    char *            ="0.000004"
+    char *            ="0.000004"
+    char *            ="0.000003"
+    char *            ="0.000003"
+    char *            ="0.000003"
+    char *            ="0.000002"
+    char *            ="0.000002"
+    char *            ="0.000002"
+    char *            ="0.000002"
+    #
+    char *            ="0.000001"
+    char *            ="0.000001"
+    char *            ="0.000001"
+    char *            ="0.000001"
+    char *            ="0.000001"
+    char *            ="0.000001"
+    char *            ="0.000000"
+    char *            ="0.000000"
+    char *            ="0.000000"
+    char *            ="0.000000"
     #
-    chars *            ="0.000000"
-    chars *            ="0.000000"
+    char *            ="0.000000"
+    char *            ="0.000000"
     data p^enwindow_data
     return p
 endfunction
--- ovideo-1.orig/src/media/mpeg.s
+++ ovideo-1/src/media/mpeg.s
@@ -965,7 +965,7 @@ endfunction
 
 ##################misc funcs
 function log2bin(sd value)
-    chars log2={0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4}
+    char log2={0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4}
     sd n=0
     sd x
     set x value
@@ -1028,7 +1028,7 @@ function mpeg_vol_header()
     if bool!=1
         return 0
     endif
-    chars vol_profile=Profile_Unrestricted
+    char vol_profile=Profile_Unrestricted
     setcall bool mpeg_file_mem_append(vol_profile,8)
     if bool!=1
         return 0
@@ -1282,7 +1282,7 @@ function mpeg_vol_header()
             return 0
         endif
         #if max_bframes > 0,ARG_MAXBFRAMES=2
-        chars p="p"
+        char p="p"
         set flags global_flags
         and flags (XVID_GLOBAL_PACKED)
         if flags!=0
--- ovideo-1.orig/src/media/mpeg_code.s
+++ ovideo-1/src/media/mpeg_code.s
@@ -134,10 +134,10 @@ function mcbpc_intra_tab(sd x,sd block)
 #MCBPC Indexing by cbpc in first two bits, mode in last two.
 #CBPC as in table 4/H.263, MB type (mode): 3 = 01, 4 = 10.
 #Example: cbpc = 01 and mode = 4 gives index = 0110 = 6.
-    chars mcbpc_intra_tab_data={0x01,0,0,0, 9, 0x01,0,0,0, 1, 0x01,0,0,0, 4, 0x00,0,0,0, 0}
-    chars *                   ={0x00,0,0,0, 0, 0x01,0,0,0, 3, 0x01,0,0,0, 6, 0x00,0,0,0, 0}
-    chars *                   ={0x00,0,0,0, 0, 0x02,0,0,0, 3, 0x02,0,0,0, 6, 0x00,0,0,0, 0}
-    chars *                   ={0x00,0,0,0, 0, 0x03,0,0,0, 3, 0x03,0,0,0, 6}
+    char mcbpc_intra_tab_data={0x01,0,0,0, 9, 0x01,0,0,0, 1, 0x01,0,0,0, 4, 0x00,0,0,0, 0}
+    char *                   ={0x00,0,0,0, 0, 0x01,0,0,0, 3, 0x01,0,0,0, 6, 0x00,0,0,0, 0}
+    char *                   ={0x00,0,0,0, 0, 0x02,0,0,0, 3, 0x02,0,0,0, 6, 0x00,0,0,0, 0}
+    char *                   ={0x00,0,0,0, 0, 0x03,0,0,0, 3, 0x03,0,0,0, 6}
 
     sd ind
     set ind x
@@ -159,10 +159,10 @@ function mcbpc_inter_tab(sd x,sd block)
     #MCBPC inter.
     #Addressing: 5 bit ccmmm (cc = CBPC, mmm = mode (1-4 binary))
     #29 entries
-    chars mcbpc_inter_tab_data={0x01,0,0,0, 1, 0x03,0,0,0, 3, 0x02,0,0,0, 3, 0x03,0,0,0, 5, 0x04,0,0,0, 6, 0x01,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
-    chars *                   ={0x03,0,0,0, 4, 0x07,0,0,0, 7, 0x05,0,0,0, 7, 0x04,0,0,0, 8, 0x04,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
-    chars *                   ={0x02,0,0,0, 4, 0x06,0,0,0, 7, 0x04,0,0,0, 7, 0x03,0,0,0, 8, 0x03,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
-    chars *                   ={0x05,0,0,0, 6, 0x05,0,0,0, 9, 0x05,0,0,0, 8, 0x03,0,0,0, 7, 0x02,0,0,0, 9}
+    char mcbpc_inter_tab_data={0x01,0,0,0, 1, 0x03,0,0,0, 3, 0x02,0,0,0, 3, 0x03,0,0,0, 5, 0x04,0,0,0, 6, 0x01,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
+    char *                   ={0x03,0,0,0, 4, 0x07,0,0,0, 7, 0x05,0,0,0, 7, 0x04,0,0,0, 8, 0x04,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
+    char *                   ={0x02,0,0,0, 4, 0x06,0,0,0, 7, 0x04,0,0,0, 7, 0x03,0,0,0, 8, 0x03,0,0,0, 9, 0x00,0,0,0, 0, 0x00,0,0,0, 0, 0x00,0,0,0, 0}
+    char *                   ={0x05,0,0,0, 6, 0x05,0,0,0, 9, 0x05,0,0,0, 8, 0x03,0,0,0, 7, 0x02,0,0,0, 9}
 
     sd ind
     set ind x
@@ -181,8 +181,8 @@ function mcbpc_inter_tab(sd x,sd block)
 endfunction
 
 function cbpy_tab(sd x,sd block)
-    chars cbpy_data={3,0,0,0, 4, 5,0,0,0, 5, 4,0,0,0, 5, 9, 0,0,0, 4, 3,0,0,0, 5, 7,0,0,0, 4, 2,0,0,0, 6, 11,0,0,0, 4}
-    chars *        ={2,0,0,0, 5, 3,0,0,0, 6, 5,0,0,0, 4, 10,0,0,0, 4, 4,0,0,0, 4, 8,0,0,0, 4, 6,0,0,0, 4, 3, 0,0,0, 2}
+    char cbpy_data={3,0,0,0, 4, 5,0,0,0, 5, 4,0,0,0, 5, 9, 0,0,0, 4, 3,0,0,0, 5, 7,0,0,0, 4, 2,0,0,0, 6, 11,0,0,0, 4}
+    char *        ={2,0,0,0, 5, 3,0,0,0, 6, 5,0,0,0, 4, 10,0,0,0, 4, 4,0,0,0, 4, 8,0,0,0, 4, 6,0,0,0, 4, 3, 0,0,0, 2}
 
     sd ind
     set ind x
@@ -201,134 +201,134 @@ function cbpy_tab(sd x,sd block)
 endfunction
 
 function dcy_tab(sd x,sd block)
-    chars dcy_tab_data={0x00,1,0,0, 15, 0x01,1,0,0, 15, 0x02,1,0,0, 15, 0x03,1,0,0, 15}
-    chars *           ={0x04,1,0,0, 15, 0x05,1,0,0, 15, 0x06,1,0,0, 15, 0x07,1,0,0, 15}
-    chars *           ={0x08,1,0,0, 15, 0x09,1,0,0, 15, 0x0a,1,0,0, 15, 0x0b,1,0,0, 15}
-    chars *           ={0x0c,1,0,0, 15, 0x0d,1,0,0, 15, 0x0e,1,0,0, 15, 0x0f,1,0,0, 15}
-    chars *           ={0x10,1,0,0, 15, 0x11,1,0,0, 15, 0x12,1,0,0, 15, 0x13,1,0,0, 15}
-    chars *           ={0x14,1,0,0, 15, 0x15,1,0,0, 15, 0x16,1,0,0, 15, 0x17,1,0,0, 15}
-    chars *           ={0x18,1,0,0, 15, 0x19,1,0,0, 15, 0x1a,1,0,0, 15, 0x1b,1,0,0, 15}
-    chars *           ={0x1c,1,0,0, 15, 0x1d,1,0,0, 15, 0x1e,1,0,0, 15, 0x1f,1,0,0, 15}
-    chars *           ={0x20,1,0,0, 15, 0x21,1,0,0, 15, 0x22,1,0,0, 15, 0x23,1,0,0, 15}
-    chars *           ={0x24,1,0,0, 15, 0x25,1,0,0, 15, 0x26,1,0,0, 15, 0x27,1,0,0, 15}
-    chars *           ={0x28,1,0,0, 15, 0x29,1,0,0, 15, 0x2a,1,0,0, 15, 0x2b,1,0,0, 15}
-    chars *           ={0x2c,1,0,0, 15, 0x2d,1,0,0, 15, 0x2e,1,0,0, 15, 0x2f,1,0,0, 15}
-    chars *           ={0x30,1,0,0, 15, 0x31,1,0,0, 15, 0x32,1,0,0, 15, 0x33,1,0,0, 15}
-    chars *           ={0x34,1,0,0, 15, 0x35,1,0,0, 15, 0x36,1,0,0, 15, 0x37,1,0,0, 15}
-    chars *           ={0x38,1,0,0, 15, 0x39,1,0,0, 15, 0x3a,1,0,0, 15, 0x3b,1,0,0, 15}
-    chars *           ={0x3c,1,0,0, 15, 0x3d,1,0,0, 15, 0x3e,1,0,0, 15, 0x3f,1,0,0, 15}
-    chars *           ={0x40,1,0,0, 15, 0x41,1,0,0, 15, 0x42,1,0,0, 15, 0x43,1,0,0, 15}
-    chars *           ={0x44,1,0,0, 15, 0x45,1,0,0, 15, 0x46,1,0,0, 15, 0x47,1,0,0, 15}
-    chars *           ={0x48,1,0,0, 15, 0x49,1,0,0, 15, 0x4a,1,0,0, 15, 0x4b,1,0,0, 15}
-    chars *           ={0x4c,1,0,0, 15, 0x4d,1,0,0, 15, 0x4e,1,0,0, 15, 0x4f,1,0,0, 15}
-    chars *           ={0x50,1,0,0, 15, 0x51,1,0,0, 15, 0x52,1,0,0, 15, 0x53,1,0,0, 15}
-    chars *           ={0x54,1,0,0, 15, 0x55,1,0,0, 15, 0x56,1,0,0, 15, 0x57,1,0,0, 15}
-    chars *           ={0x58,1,0,0, 15, 0x59,1,0,0, 15, 0x5a,1,0,0, 15, 0x5b,1,0,0, 15}
-    chars *           ={0x5c,1,0,0, 15, 0x5d,1,0,0, 15, 0x5e,1,0,0, 15, 0x5f,1,0,0, 15}
-    chars *           ={0x60,1,0,0, 15, 0x61,1,0,0, 15, 0x62,1,0,0, 15, 0x63,1,0,0, 15}
-    chars *           ={0x64,1,0,0, 15, 0x65,1,0,0, 15, 0x66,1,0,0, 15, 0x67,1,0,0, 15}
-    chars *           ={0x68,1,0,0, 15, 0x69,1,0,0, 15, 0x6a,1,0,0, 15, 0x6b,1,0,0, 15}
-    chars *           ={0x6c,1,0,0, 15, 0x6d,1,0,0, 15, 0x6e,1,0,0, 15, 0x6f,1,0,0, 15}
-    chars *           ={0x70,1,0,0, 15, 0x71,1,0,0, 15, 0x72,1,0,0, 15, 0x73,1,0,0, 15}
-    chars *           ={0x74,1,0,0, 15, 0x75,1,0,0, 15, 0x76,1,0,0, 15, 0x77,1,0,0, 15}
-    chars *           ={0x78,1,0,0, 15, 0x79,1,0,0, 15, 0x7a,1,0,0, 15, 0x7b,1,0,0, 15}
-    chars *           ={0x7c,1,0,0, 15, 0x7d,1,0,0, 15, 0x7e,1,0,0, 15, 0x7f,1,0,0, 15}
-    chars *           ={0x80,0,0,0, 13, 0x81,0,0,0, 13, 0x82,0,0,0, 13, 0x83,0,0,0, 13}
-    chars *           ={0x84,0,0,0, 13, 0x85,0,0,0, 13, 0x86,0,0,0, 13, 0x87,0,0,0, 13}
-    chars *           ={0x88,0,0,0, 13, 0x89,0,0,0, 13, 0x8a,0,0,0, 13, 0x8b,0,0,0, 13}
-    chars *           ={0x8c,0,0,0, 13, 0x8d,0,0,0, 13, 0x8e,0,0,0, 13, 0x8f,0,0,0, 13}
-    chars *           ={0x90,0,0,0, 13, 0x91,0,0,0, 13, 0x92,0,0,0, 13, 0x93,0,0,0, 13}
-    chars *           ={0x94,0,0,0, 13, 0x95,0,0,0, 13, 0x96,0,0,0, 13, 0x97,0,0,0, 13}
-    chars *           ={0x98,0,0,0, 13, 0x99,0,0,0, 13, 0x9a,0,0,0, 13, 0x9b,0,0,0, 13}
-    chars *           ={0x9c,0,0,0, 13, 0x9d,0,0,0, 13, 0x9e,0,0,0, 13, 0x9f,0,0,0, 13}
-    chars *           ={0xa0,0,0,0, 13, 0xa1,0,0,0, 13, 0xa2,0,0,0, 13, 0xa3,0,0,0, 13}
-    chars *           ={0xa4,0,0,0, 13, 0xa5,0,0,0, 13, 0xa6,0,0,0, 13, 0xa7,0,0,0, 13}
-    chars *           ={0xa8,0,0,0, 13, 0xa9,0,0,0, 13, 0xaa,0,0,0, 13, 0xab,0,0,0, 13}
-    chars *           ={0xac,0,0,0, 13, 0xad,0,0,0, 13, 0xae,0,0,0, 13, 0xaf,0,0,0, 13}
-    chars *           ={0xb0,0,0,0, 13, 0xb1,0,0,0, 13, 0xb2,0,0,0, 13, 0xb3,0,0,0, 13}
-    chars *           ={0xb4,0,0,0, 13, 0xb5,0,0,0, 13, 0xb6,0,0,0, 13, 0xb7,0,0,0, 13}
-    chars *           ={0xb8,0,0,0, 13, 0xb9,0,0,0, 13, 0xba,0,0,0, 13, 0xbb,0,0,0, 13}
-    chars *           ={0xbc,0,0,0, 13, 0xbd,0,0,0, 13, 0xbe,0,0,0, 13, 0xbf,0,0,0, 13}
-    chars *           ={0x40,0,0,0, 11, 0x41,0,0,0, 11, 0x42,0,0,0, 11, 0x43,0,0,0, 11}
-    chars *           ={0x44,0,0,0, 11, 0x45,0,0,0, 11, 0x46,0,0,0, 11, 0x47,0,0,0, 11}
-    chars *           ={0x48,0,0,0, 11, 0x49,0,0,0, 11, 0x4a,0,0,0, 11, 0x4b,0,0,0, 11}
-    chars *           ={0x4c,0,0,0, 11, 0x4d,0,0,0, 11, 0x4e,0,0,0, 11, 0x4f,0,0,0, 11}
-    chars *           ={0x50,0,0,0, 11, 0x51,0,0,0, 11, 0x52,0,0,0, 11, 0x53,0,0,0, 11}
-    chars *           ={0x54,0,0,0, 11, 0x55,0,0,0, 11, 0x56,0,0,0, 11, 0x57,0,0,0, 11}
-    chars *           ={0x58,0,0,0, 11, 0x59,0,0,0, 11, 0x5a,0,0,0, 11, 0x5b,0,0,0, 11}
-    chars *           ={0x5c,0,0,0, 11, 0x5d,0,0,0, 11, 0x5e,0,0,0, 11, 0x5f,0,0,0, 11}
-    chars *           ={0x20,0,0,0, 9,  0x21,0,0,0, 9,  0x22,0,0,0, 9,  0x23,0,0,0, 9}
-    chars *           ={0x24,0,0,0, 9,  0x25,0,0,0, 9,  0x26,0,0,0, 9,  0x27,0,0,0, 9}
-    chars *           ={0x28,0,0,0, 9,  0x29,0,0,0, 9,  0x2a,0,0,0, 9,  0x2b,0,0,0, 9}
-    chars *           ={0x2c,0,0,0, 9,  0x2d,0,0,0, 9,  0x2e,0,0,0, 9,  0x2f,0,0,0, 9}
-    chars *           ={0x10,0,0,0, 7,  0x11,0,0,0, 7,  0x12,0,0,0, 7,  0x13,0,0,0, 7}
-    chars *           ={0x14,0,0,0, 7,  0x15,0,0,0, 7,  0x16,0,0,0, 7,  0x17,0,0,0, 7}
-    chars *           ={0x10,0,0,0, 6,  0x11,0,0,0, 6,  0x12,0,0,0, 6,  0x13,0,0,0, 6}
-    chars *           ={0x08,0,0,0, 4,  0x09,0,0,0, 4,  0x06,0,0,0, 3,  0x03,0,0,0, 3}
-    chars *           ={0x07,0,0,0, 3,  0x0a,0,0,0, 4,  0x0b,0,0,0, 4,  0x14,0,0,0, 6}
-    chars *           ={0x15,0,0,0, 6,  0x16,0,0,0, 6,  0x17,0,0,0, 6,  0x18,0,0,0, 7}
-    chars *           ={0x19,0,0,0, 7,  0x1a,0,0,0, 7,  0x1b,0,0,0, 7,  0x1c,0,0,0, 7}
-    chars *           ={0x1d,0,0,0, 7,  0x1e,0,0,0, 7,  0x1f,0,0,0, 7,  0x30,0,0,0, 9}
-    chars *           ={0x31,0,0,0, 9,  0x32,0,0,0, 9,  0x33,0,0,0, 9,  0x34,0,0,0, 9}
-    chars *           ={0x35,0,0,0, 9,  0x36,0,0,0, 9,  0x37,0,0,0, 9,  0x38,0,0,0, 9}
-    chars *           ={0x39,0,0,0, 9,  0x3a,0,0,0, 9,  0x3b,0,0,0, 9,  0x3c,0,0,0, 9}
-    chars *           ={0x3d,0,0,0, 9,  0x3e,0,0,0, 9,  0x3f,0,0,0, 9,  0x60,0,0,0, 11}
-    chars *           ={0x61,0,0,0, 11, 0x62,0,0,0, 11, 0x63,0,0,0, 11, 0x64,0,0,0, 11}
-    chars *           ={0x65,0,0,0, 11, 0x66,0,0,0, 11, 0x67,0,0,0, 11, 0x68,0,0,0, 11}
-    chars *           ={0x69,0,0,0, 11, 0x6a,0,0,0, 11, 0x6b,0,0,0, 11, 0x6c,0,0,0, 11}
-    chars *           ={0x6d,0,0,0, 11, 0x6e,0,0,0, 11, 0x6f,0,0,0, 11, 0x70,0,0,0, 11}
-    chars *           ={0x71,0,0,0, 11, 0x72,0,0,0, 11, 0x73,0,0,0, 11, 0x74,0,0,0, 11}
-    chars *           ={0x75,0,0,0, 11, 0x76,0,0,0, 11, 0x77,0,0,0, 11, 0x78,0,0,0, 11}
-    chars *           ={0x79,0,0,0, 11, 0x7a,0,0,0, 11, 0x7b,0,0,0, 11, 0x7c,0,0,0, 11}
-    chars *           ={0x7d,0,0,0, 11, 0x7e,0,0,0, 11, 0x7f,0,0,0, 11, 0xc0,0,0,0, 13}
-    chars *           ={0xc1,0,0,0, 13, 0xc2,0,0,0, 13, 0xc3,0,0,0, 13, 0xc4,0,0,0, 13}
-    chars *           ={0xc5,0,0,0, 13, 0xc6,0,0,0, 13, 0xc7,0,0,0, 13, 0xc8,0,0,0, 13}
-    chars *           ={0xc9,0,0,0, 13, 0xca,0,0,0, 13, 0xcb,0,0,0, 13, 0xcc,0,0,0, 13}
-    chars *           ={0xcd,0,0,0, 13, 0xce,0,0,0, 13, 0xcf,0,0,0, 13, 0xd0,0,0,0, 13}
-    chars *           ={0xd1,0,0,0, 13, 0xd2,0,0,0, 13, 0xd3,0,0,0, 13, 0xd4,0,0,0, 13}
-    chars *           ={0xd5,0,0,0, 13, 0xd6,0,0,0, 13, 0xd7,0,0,0, 13, 0xd8,0,0,0, 13}
-    chars *           ={0xd9,0,0,0, 13, 0xda,0,0,0, 13, 0xdb,0,0,0, 13, 0xdc,0,0,0, 13}
-    chars *           ={0xdd,0,0,0, 13, 0xde,0,0,0, 13, 0xdf,0,0,0, 13, 0xe0,0,0,0, 13}
-    chars *           ={0xe1,0,0,0, 13, 0xe2,0,0,0, 13, 0xe3,0,0,0, 13, 0xe4,0,0,0, 13}
-    chars *           ={0xe5,0,0,0, 13, 0xe6,0,0,0, 13, 0xe7,0,0,0, 13, 0xe8,0,0,0, 13}
-    chars *           ={0xe9,0,0,0, 13, 0xea,0,0,0, 13, 0xeb,0,0,0, 13, 0xec,0,0,0, 13}
-    chars *           ={0xed,0,0,0, 13, 0xee,0,0,0, 13, 0xef,0,0,0, 13, 0xf0,0,0,0, 13}
-    chars *           ={0xf1,0,0,0, 13, 0xf2,0,0,0, 13, 0xf3,0,0,0, 13, 0xf4,0,0,0, 13}
-    chars *           ={0xf5,0,0,0, 13, 0xf6,0,0,0, 13, 0xf7,0,0,0, 13, 0xf8,0,0,0, 13}
-    chars *           ={0xf9,0,0,0, 13, 0xfa,0,0,0, 13, 0xfb,0,0,0, 13, 0xfc,0,0,0, 13}
-    chars *           ={0xfd,0,0,0, 13, 0xfe,0,0,0, 13, 0xff,0,0,0, 13, 0x80,1,0,0, 15}
-    chars *           ={0x81,1,0,0, 15, 0x82,1,0,0, 15, 0x83,1,0,0, 15, 0x84,1,0,0, 15}
-    chars *           ={0x85,1,0,0, 15, 0x86,1,0,0, 15, 0x87,1,0,0, 15, 0x88,1,0,0, 15}
-    chars *           ={0x89,1,0,0, 15, 0x8a,1,0,0, 15, 0x8b,1,0,0, 15, 0x8c,1,0,0, 15}
-    chars *           ={0x8d,1,0,0, 15, 0x8e,1,0,0, 15, 0x8f,1,0,0, 15, 0x90,1,0,0, 15}
-    chars *           ={0x91,1,0,0, 15, 0x92,1,0,0, 15, 0x93,1,0,0, 15, 0x94,1,0,0, 15}
-    chars *           ={0x95,1,0,0, 15, 0x96,1,0,0, 15, 0x97,1,0,0, 15, 0x98,1,0,0, 15}
-    chars *           ={0x99,1,0,0, 15, 0x9a,1,0,0, 15, 0x9b,1,0,0, 15, 0x9c,1,0,0, 15}
-    chars *           ={0x9d,1,0,0, 15, 0x9e,1,0,0, 15, 0x9f,1,0,0, 15, 0xa0,1,0,0, 15}
-    chars *           ={0xa1,1,0,0, 15, 0xa2,1,0,0, 15, 0xa3,1,0,0, 15, 0xa4,1,0,0, 15}
-    chars *           ={0xa5,1,0,0, 15, 0xa6,1,0,0, 15, 0xa7,1,0,0, 15, 0xa8,1,0,0, 15}
-    chars *           ={0xa9,1,0,0, 15, 0xaa,1,0,0, 15, 0xab,1,0,0, 15, 0xac,1,0,0, 15}
-    chars *           ={0xad,1,0,0, 15, 0xae,1,0,0, 15, 0xaf,1,0,0, 15, 0xb0,1,0,0, 15}
-    chars *           ={0xb1,1,0,0, 15, 0xb2,1,0,0, 15, 0xb3,1,0,0, 15, 0xb4,1,0,0, 15}
-    chars *           ={0xb5,1,0,0, 15, 0xb6,1,0,0, 15, 0xb7,1,0,0, 15, 0xb8,1,0,0, 15}
-    chars *           ={0xb9,1,0,0, 15, 0xba,1,0,0, 15, 0xbb,1,0,0, 15, 0xbc,1,0,0, 15}
-    chars *           ={0xbd,1,0,0, 15, 0xbe,1,0,0, 15, 0xbf,1,0,0, 15, 0xc0,1,0,0, 15}
-    chars *           ={0xc1,1,0,0, 15, 0xc2,1,0,0, 15, 0xc3,1,0,0, 15, 0xc4,1,0,0, 15}
-    chars *           ={0xc5,1,0,0, 15, 0xc6,1,0,0, 15, 0xc7,1,0,0, 15, 0xc8,1,0,0, 15}
-    chars *           ={0xc9,1,0,0, 15, 0xca,1,0,0, 15, 0xcb,1,0,0, 15, 0xcc,1,0,0, 15}
-    chars *           ={0xcd,1,0,0, 15, 0xce,1,0,0, 15, 0xcf,1,0,0, 15, 0xd0,1,0,0, 15}
-    chars *           ={0xd1,1,0,0, 15, 0xd2,1,0,0, 15, 0xd3,1,0,0, 15, 0xd4,1,0,0, 15}
-    chars *           ={0xd5,1,0,0, 15, 0xd6,1,0,0, 15, 0xd7,1,0,0, 15, 0xd8,1,0,0, 15}
-    chars *           ={0xd9,1,0,0, 15, 0xda,1,0,0, 15, 0xdb,1,0,0, 15, 0xdc,1,0,0, 15}
-    chars *           ={0xdd,1,0,0, 15, 0xde,1,0,0, 15, 0xdf,1,0,0, 15, 0xe0,1,0,0, 15}
-    chars *           ={0xe1,1,0,0, 15, 0xe2,1,0,0, 15, 0xe3,1,0,0, 15, 0xe4,1,0,0, 15}
-    chars *           ={0xe5,1,0,0, 15, 0xe6,1,0,0, 15, 0xe7,1,0,0, 15, 0xe8,1,0,0, 15}
-    chars *           ={0xe9,1,0,0, 15, 0xea,1,0,0, 15, 0xeb,1,0,0, 15, 0xec,1,0,0, 15}
-    chars *           ={0xed,1,0,0, 15, 0xee,1,0,0, 15, 0xef,1,0,0, 15, 0xf0,1,0,0, 15}
-    chars *           ={0xf1,1,0,0, 15, 0xf2,1,0,0, 15, 0xf3,1,0,0, 15, 0xf4,1,0,0, 15}
-    chars *           ={0xf5,1,0,0, 15, 0xf6,1,0,0, 15, 0xf7,1,0,0, 15, 0xf8,1,0,0, 15}
-    chars *           ={0xf9,1,0,0, 15, 0xfa,1,0,0, 15, 0xfb,1,0,0, 15, 0xfc,1,0,0, 15}
-    chars *           ={0xfd,1,0,0, 15, 0xfe,1,0,0, 15, 0xff,1,0,0, 15}
+    char dcy_tab_data={0x00,1,0,0, 15, 0x01,1,0,0, 15, 0x02,1,0,0, 15, 0x03,1,0,0, 15}
+    char *           ={0x04,1,0,0, 15, 0x05,1,0,0, 15, 0x06,1,0,0, 15, 0x07,1,0,0, 15}
+    char *           ={0x08,1,0,0, 15, 0x09,1,0,0, 15, 0x0a,1,0,0, 15, 0x0b,1,0,0, 15}
+    char *           ={0x0c,1,0,0, 15, 0x0d,1,0,0, 15, 0x0e,1,0,0, 15, 0x0f,1,0,0, 15}
+    char *           ={0x10,1,0,0, 15, 0x11,1,0,0, 15, 0x12,1,0,0, 15, 0x13,1,0,0, 15}
+    char *           ={0x14,1,0,0, 15, 0x15,1,0,0, 15, 0x16,1,0,0, 15, 0x17,1,0,0, 15}
+    char *           ={0x18,1,0,0, 15, 0x19,1,0,0, 15, 0x1a,1,0,0, 15, 0x1b,1,0,0, 15}
+    char *           ={0x1c,1,0,0, 15, 0x1d,1,0,0, 15, 0x1e,1,0,0, 15, 0x1f,1,0,0, 15}
+    char *           ={0x20,1,0,0, 15, 0x21,1,0,0, 15, 0x22,1,0,0, 15, 0x23,1,0,0, 15}
+    char *           ={0x24,1,0,0, 15, 0x25,1,0,0, 15, 0x26,1,0,0, 15, 0x27,1,0,0, 15}
+    char *           ={0x28,1,0,0, 15, 0x29,1,0,0, 15, 0x2a,1,0,0, 15, 0x2b,1,0,0, 15}
+    char *           ={0x2c,1,0,0, 15, 0x2d,1,0,0, 15, 0x2e,1,0,0, 15, 0x2f,1,0,0, 15}
+    char *           ={0x30,1,0,0, 15, 0x31,1,0,0, 15, 0x32,1,0,0, 15, 0x33,1,0,0, 15}
+    char *           ={0x34,1,0,0, 15, 0x35,1,0,0, 15, 0x36,1,0,0, 15, 0x37,1,0,0, 15}
+    char *           ={0x38,1,0,0, 15, 0x39,1,0,0, 15, 0x3a,1,0,0, 15, 0x3b,1,0,0, 15}
+    char *           ={0x3c,1,0,0, 15, 0x3d,1,0,0, 15, 0x3e,1,0,0, 15, 0x3f,1,0,0, 15}
+    char *           ={0x40,1,0,0, 15, 0x41,1,0,0, 15, 0x42,1,0,0, 15, 0x43,1,0,0, 15}
+    char *           ={0x44,1,0,0, 15, 0x45,1,0,0, 15, 0x46,1,0,0, 15, 0x47,1,0,0, 15}
+    char *           ={0x48,1,0,0, 15, 0x49,1,0,0, 15, 0x4a,1,0,0, 15, 0x4b,1,0,0, 15}
+    char *           ={0x4c,1,0,0, 15, 0x4d,1,0,0, 15, 0x4e,1,0,0, 15, 0x4f,1,0,0, 15}
+    char *           ={0x50,1,0,0, 15, 0x51,1,0,0, 15, 0x52,1,0,0, 15, 0x53,1,0,0, 15}
+    char *           ={0x54,1,0,0, 15, 0x55,1,0,0, 15, 0x56,1,0,0, 15, 0x57,1,0,0, 15}
+    char *           ={0x58,1,0,0, 15, 0x59,1,0,0, 15, 0x5a,1,0,0, 15, 0x5b,1,0,0, 15}
+    char *           ={0x5c,1,0,0, 15, 0x5d,1,0,0, 15, 0x5e,1,0,0, 15, 0x5f,1,0,0, 15}
+    char *           ={0x60,1,0,0, 15, 0x61,1,0,0, 15, 0x62,1,0,0, 15, 0x63,1,0,0, 15}
+    char *           ={0x64,1,0,0, 15, 0x65,1,0,0, 15, 0x66,1,0,0, 15, 0x67,1,0,0, 15}
+    char *           ={0x68,1,0,0, 15, 0x69,1,0,0, 15, 0x6a,1,0,0, 15, 0x6b,1,0,0, 15}
+    char *           ={0x6c,1,0,0, 15, 0x6d,1,0,0, 15, 0x6e,1,0,0, 15, 0x6f,1,0,0, 15}
+    char *           ={0x70,1,0,0, 15, 0x71,1,0,0, 15, 0x72,1,0,0, 15, 0x73,1,0,0, 15}
+    char *           ={0x74,1,0,0, 15, 0x75,1,0,0, 15, 0x76,1,0,0, 15, 0x77,1,0,0, 15}
+    char *           ={0x78,1,0,0, 15, 0x79,1,0,0, 15, 0x7a,1,0,0, 15, 0x7b,1,0,0, 15}
+    char *           ={0x7c,1,0,0, 15, 0x7d,1,0,0, 15, 0x7e,1,0,0, 15, 0x7f,1,0,0, 15}
+    char *           ={0x80,0,0,0, 13, 0x81,0,0,0, 13, 0x82,0,0,0, 13, 0x83,0,0,0, 13}
+    char *           ={0x84,0,0,0, 13, 0x85,0,0,0, 13, 0x86,0,0,0, 13, 0x87,0,0,0, 13}
+    char *           ={0x88,0,0,0, 13, 0x89,0,0,0, 13, 0x8a,0,0,0, 13, 0x8b,0,0,0, 13}
+    char *           ={0x8c,0,0,0, 13, 0x8d,0,0,0, 13, 0x8e,0,0,0, 13, 0x8f,0,0,0, 13}
+    char *           ={0x90,0,0,0, 13, 0x91,0,0,0, 13, 0x92,0,0,0, 13, 0x93,0,0,0, 13}
+    char *           ={0x94,0,0,0, 13, 0x95,0,0,0, 13, 0x96,0,0,0, 13, 0x97,0,0,0, 13}
+    char *           ={0x98,0,0,0, 13, 0x99,0,0,0, 13, 0x9a,0,0,0, 13, 0x9b,0,0,0, 13}
+    char *           ={0x9c,0,0,0, 13, 0x9d,0,0,0, 13, 0x9e,0,0,0, 13, 0x9f,0,0,0, 13}
+    char *           ={0xa0,0,0,0, 13, 0xa1,0,0,0, 13, 0xa2,0,0,0, 13, 0xa3,0,0,0, 13}
+    char *           ={0xa4,0,0,0, 13, 0xa5,0,0,0, 13, 0xa6,0,0,0, 13, 0xa7,0,0,0, 13}
+    char *           ={0xa8,0,0,0, 13, 0xa9,0,0,0, 13, 0xaa,0,0,0, 13, 0xab,0,0,0, 13}
+    char *           ={0xac,0,0,0, 13, 0xad,0,0,0, 13, 0xae,0,0,0, 13, 0xaf,0,0,0, 13}
+    char *           ={0xb0,0,0,0, 13, 0xb1,0,0,0, 13, 0xb2,0,0,0, 13, 0xb3,0,0,0, 13}
+    char *           ={0xb4,0,0,0, 13, 0xb5,0,0,0, 13, 0xb6,0,0,0, 13, 0xb7,0,0,0, 13}
+    char *           ={0xb8,0,0,0, 13, 0xb9,0,0,0, 13, 0xba,0,0,0, 13, 0xbb,0,0,0, 13}
+    char *           ={0xbc,0,0,0, 13, 0xbd,0,0,0, 13, 0xbe,0,0,0, 13, 0xbf,0,0,0, 13}
+    char *           ={0x40,0,0,0, 11, 0x41,0,0,0, 11, 0x42,0,0,0, 11, 0x43,0,0,0, 11}
+    char *           ={0x44,0,0,0, 11, 0x45,0,0,0, 11, 0x46,0,0,0, 11, 0x47,0,0,0, 11}
+    char *           ={0x48,0,0,0, 11, 0x49,0,0,0, 11, 0x4a,0,0,0, 11, 0x4b,0,0,0, 11}
+    char *           ={0x4c,0,0,0, 11, 0x4d,0,0,0, 11, 0x4e,0,0,0, 11, 0x4f,0,0,0, 11}
+    char *           ={0x50,0,0,0, 11, 0x51,0,0,0, 11, 0x52,0,0,0, 11, 0x53,0,0,0, 11}
+    char *           ={0x54,0,0,0, 11, 0x55,0,0,0, 11, 0x56,0,0,0, 11, 0x57,0,0,0, 11}
+    char *           ={0x58,0,0,0, 11, 0x59,0,0,0, 11, 0x5a,0,0,0, 11, 0x5b,0,0,0, 11}
+    char *           ={0x5c,0,0,0, 11, 0x5d,0,0,0, 11, 0x5e,0,0,0, 11, 0x5f,0,0,0, 11}
+    char *           ={0x20,0,0,0, 9,  0x21,0,0,0, 9,  0x22,0,0,0, 9,  0x23,0,0,0, 9}
+    char *           ={0x24,0,0,0, 9,  0x25,0,0,0, 9,  0x26,0,0,0, 9,  0x27,0,0,0, 9}
+    char *           ={0x28,0,0,0, 9,  0x29,0,0,0, 9,  0x2a,0,0,0, 9,  0x2b,0,0,0, 9}
+    char *           ={0x2c,0,0,0, 9,  0x2d,0,0,0, 9,  0x2e,0,0,0, 9,  0x2f,0,0,0, 9}
+    char *           ={0x10,0,0,0, 7,  0x11,0,0,0, 7,  0x12,0,0,0, 7,  0x13,0,0,0, 7}
+    char *           ={0x14,0,0,0, 7,  0x15,0,0,0, 7,  0x16,0,0,0, 7,  0x17,0,0,0, 7}
+    char *           ={0x10,0,0,0, 6,  0x11,0,0,0, 6,  0x12,0,0,0, 6,  0x13,0,0,0, 6}
+    char *           ={0x08,0,0,0, 4,  0x09,0,0,0, 4,  0x06,0,0,0, 3,  0x03,0,0,0, 3}
+    char *           ={0x07,0,0,0, 3,  0x0a,0,0,0, 4,  0x0b,0,0,0, 4,  0x14,0,0,0, 6}
+    char *           ={0x15,0,0,0, 6,  0x16,0,0,0, 6,  0x17,0,0,0, 6,  0x18,0,0,0, 7}
+    char *           ={0x19,0,0,0, 7,  0x1a,0,0,0, 7,  0x1b,0,0,0, 7,  0x1c,0,0,0, 7}
+    char *           ={0x1d,0,0,0, 7,  0x1e,0,0,0, 7,  0x1f,0,0,0, 7,  0x30,0,0,0, 9}
+    char *           ={0x31,0,0,0, 9,  0x32,0,0,0, 9,  0x33,0,0,0, 9,  0x34,0,0,0, 9}
+    char *           ={0x35,0,0,0, 9,  0x36,0,0,0, 9,  0x37,0,0,0, 9,  0x38,0,0,0, 9}
+    char *           ={0x39,0,0,0, 9,  0x3a,0,0,0, 9,  0x3b,0,0,0, 9,  0x3c,0,0,0, 9}
+    char *           ={0x3d,0,0,0, 9,  0x3e,0,0,0, 9,  0x3f,0,0,0, 9,  0x60,0,0,0, 11}
+    char *           ={0x61,0,0,0, 11, 0x62,0,0,0, 11, 0x63,0,0,0, 11, 0x64,0,0,0, 11}
+    char *           ={0x65,0,0,0, 11, 0x66,0,0,0, 11, 0x67,0,0,0, 11, 0x68,0,0,0, 11}
+    char *           ={0x69,0,0,0, 11, 0x6a,0,0,0, 11, 0x6b,0,0,0, 11, 0x6c,0,0,0, 11}
+    char *           ={0x6d,0,0,0, 11, 0x6e,0,0,0, 11, 0x6f,0,0,0, 11, 0x70,0,0,0, 11}
+    char *           ={0x71,0,0,0, 11, 0x72,0,0,0, 11, 0x73,0,0,0, 11, 0x74,0,0,0, 11}
+    char *           ={0x75,0,0,0, 11, 0x76,0,0,0, 11, 0x77,0,0,0, 11, 0x78,0,0,0, 11}
+    char *           ={0x79,0,0,0, 11, 0x7a,0,0,0, 11, 0x7b,0,0,0, 11, 0x7c,0,0,0, 11}
+    char *           ={0x7d,0,0,0, 11, 0x7e,0,0,0, 11, 0x7f,0,0,0, 11, 0xc0,0,0,0, 13}
+    char *           ={0xc1,0,0,0, 13, 0xc2,0,0,0, 13, 0xc3,0,0,0, 13, 0xc4,0,0,0, 13}
+    char *           ={0xc5,0,0,0, 13, 0xc6,0,0,0, 13, 0xc7,0,0,0, 13, 0xc8,0,0,0, 13}
+    char *           ={0xc9,0,0,0, 13, 0xca,0,0,0, 13, 0xcb,0,0,0, 13, 0xcc,0,0,0, 13}
+    char *           ={0xcd,0,0,0, 13, 0xce,0,0,0, 13, 0xcf,0,0,0, 13, 0xd0,0,0,0, 13}
+    char *           ={0xd1,0,0,0, 13, 0xd2,0,0,0, 13, 0xd3,0,0,0, 13, 0xd4,0,0,0, 13}
+    char *           ={0xd5,0,0,0, 13, 0xd6,0,0,0, 13, 0xd7,0,0,0, 13, 0xd8,0,0,0, 13}
+    char *           ={0xd9,0,0,0, 13, 0xda,0,0,0, 13, 0xdb,0,0,0, 13, 0xdc,0,0,0, 13}
+    char *           ={0xdd,0,0,0, 13, 0xde,0,0,0, 13, 0xdf,0,0,0, 13, 0xe0,0,0,0, 13}
+    char *           ={0xe1,0,0,0, 13, 0xe2,0,0,0, 13, 0xe3,0,0,0, 13, 0xe4,0,0,0, 13}
+    char *           ={0xe5,0,0,0, 13, 0xe6,0,0,0, 13, 0xe7,0,0,0, 13, 0xe8,0,0,0, 13}
+    char *           ={0xe9,0,0,0, 13, 0xea,0,0,0, 13, 0xeb,0,0,0, 13, 0xec,0,0,0, 13}
+    char *           ={0xed,0,0,0, 13, 0xee,0,0,0, 13, 0xef,0,0,0, 13, 0xf0,0,0,0, 13}
+    char *           ={0xf1,0,0,0, 13, 0xf2,0,0,0, 13, 0xf3,0,0,0, 13, 0xf4,0,0,0, 13}
+    char *           ={0xf5,0,0,0, 13, 0xf6,0,0,0, 13, 0xf7,0,0,0, 13, 0xf8,0,0,0, 13}
+    char *           ={0xf9,0,0,0, 13, 0xfa,0,0,0, 13, 0xfb,0,0,0, 13, 0xfc,0,0,0, 13}
+    char *           ={0xfd,0,0,0, 13, 0xfe,0,0,0, 13, 0xff,0,0,0, 13, 0x80,1,0,0, 15}
+    char *           ={0x81,1,0,0, 15, 0x82,1,0,0, 15, 0x83,1,0,0, 15, 0x84,1,0,0, 15}
+    char *           ={0x85,1,0,0, 15, 0x86,1,0,0, 15, 0x87,1,0,0, 15, 0x88,1,0,0, 15}
+    char *           ={0x89,1,0,0, 15, 0x8a,1,0,0, 15, 0x8b,1,0,0, 15, 0x8c,1,0,0, 15}
+    char *           ={0x8d,1,0,0, 15, 0x8e,1,0,0, 15, 0x8f,1,0,0, 15, 0x90,1,0,0, 15}
+    char *           ={0x91,1,0,0, 15, 0x92,1,0,0, 15, 0x93,1,0,0, 15, 0x94,1,0,0, 15}
+    char *           ={0x95,1,0,0, 15, 0x96,1,0,0, 15, 0x97,1,0,0, 15, 0x98,1,0,0, 15}
+    char *           ={0x99,1,0,0, 15, 0x9a,1,0,0, 15, 0x9b,1,0,0, 15, 0x9c,1,0,0, 15}
+    char *           ={0x9d,1,0,0, 15, 0x9e,1,0,0, 15, 0x9f,1,0,0, 15, 0xa0,1,0,0, 15}
+    char *           ={0xa1,1,0,0, 15, 0xa2,1,0,0, 15, 0xa3,1,0,0, 15, 0xa4,1,0,0, 15}
+    char *           ={0xa5,1,0,0, 15, 0xa6,1,0,0, 15, 0xa7,1,0,0, 15, 0xa8,1,0,0, 15}
+    char *           ={0xa9,1,0,0, 15, 0xaa,1,0,0, 15, 0xab,1,0,0, 15, 0xac,1,0,0, 15}
+    char *           ={0xad,1,0,0, 15, 0xae,1,0,0, 15, 0xaf,1,0,0, 15, 0xb0,1,0,0, 15}
+    char *           ={0xb1,1,0,0, 15, 0xb2,1,0,0, 15, 0xb3,1,0,0, 15, 0xb4,1,0,0, 15}
+    char *           ={0xb5,1,0,0, 15, 0xb6,1,0,0, 15, 0xb7,1,0,0, 15, 0xb8,1,0,0, 15}
+    char *           ={0xb9,1,0,0, 15, 0xba,1,0,0, 15, 0xbb,1,0,0, 15, 0xbc,1,0,0, 15}
+    char *           ={0xbd,1,0,0, 15, 0xbe,1,0,0, 15, 0xbf,1,0,0, 15, 0xc0,1,0,0, 15}
+    char *           ={0xc1,1,0,0, 15, 0xc2,1,0,0, 15, 0xc3,1,0,0, 15, 0xc4,1,0,0, 15}
+    char *           ={0xc5,1,0,0, 15, 0xc6,1,0,0, 15, 0xc7,1,0,0, 15, 0xc8,1,0,0, 15}
+    char *           ={0xc9,1,0,0, 15, 0xca,1,0,0, 15, 0xcb,1,0,0, 15, 0xcc,1,0,0, 15}
+    char *           ={0xcd,1,0,0, 15, 0xce,1,0,0, 15, 0xcf,1,0,0, 15, 0xd0,1,0,0, 15}
+    char *           ={0xd1,1,0,0, 15, 0xd2,1,0,0, 15, 0xd3,1,0,0, 15, 0xd4,1,0,0, 15}
+    char *           ={0xd5,1,0,0, 15, 0xd6,1,0,0, 15, 0xd7,1,0,0, 15, 0xd8,1,0,0, 15}
+    char *           ={0xd9,1,0,0, 15, 0xda,1,0,0, 15, 0xdb,1,0,0, 15, 0xdc,1,0,0, 15}
+    char *           ={0xdd,1,0,0, 15, 0xde,1,0,0, 15, 0xdf,1,0,0, 15, 0xe0,1,0,0, 15}
+    char *           ={0xe1,1,0,0, 15, 0xe2,1,0,0, 15, 0xe3,1,0,0, 15, 0xe4,1,0,0, 15}
+    char *           ={0xe5,1,0,0, 15, 0xe6,1,0,0, 15, 0xe7,1,0,0, 15, 0xe8,1,0,0, 15}
+    char *           ={0xe9,1,0,0, 15, 0xea,1,0,0, 15, 0xeb,1,0,0, 15, 0xec,1,0,0, 15}
+    char *           ={0xed,1,0,0, 15, 0xee,1,0,0, 15, 0xef,1,0,0, 15, 0xf0,1,0,0, 15}
+    char *           ={0xf1,1,0,0, 15, 0xf2,1,0,0, 15, 0xf3,1,0,0, 15, 0xf4,1,0,0, 15}
+    char *           ={0xf5,1,0,0, 15, 0xf6,1,0,0, 15, 0xf7,1,0,0, 15, 0xf8,1,0,0, 15}
+    char *           ={0xf9,1,0,0, 15, 0xfa,1,0,0, 15, 0xfb,1,0,0, 15, 0xfc,1,0,0, 15}
+    char *           ={0xfd,1,0,0, 15, 0xfe,1,0,0, 15, 0xff,1,0,0, 15}
 
     sd ind
     set ind x
@@ -347,134 +347,134 @@ function dcy_tab(sd x,sd block)
 endfunction
 
 function dcc_tab(sd x,sd block)
-    chars dcc_tab_data={0x00,1,0,0, 16, 0x01,1,0,0, 16, 0x02,1,0,0, 16, 0x03,1,0,0, 16}
-    chars *      ={0x04,1,0,0, 16, 0x05,1,0,0, 16, 0x06,1,0,0, 16, 0x07,1,0,0, 16}
-    chars *      ={0x08,1,0,0, 16, 0x09,1,0,0, 16, 0x0a,1,0,0, 16, 0x0b,1,0,0, 16}
-    chars *      ={0x0c,1,0,0, 16, 0x0d,1,0,0, 16, 0x0e,1,0,0, 16, 0x0f,1,0,0, 16}
-    chars *      ={0x10,1,0,0, 16, 0x11,1,0,0, 16, 0x12,1,0,0, 16, 0x13,1,0,0, 16}
-    chars *      ={0x14,1,0,0, 16, 0x15,1,0,0, 16, 0x16,1,0,0, 16, 0x17,1,0,0, 16}
-    chars *      ={0x18,1,0,0, 16, 0x19,1,0,0, 16, 0x1a,1,0,0, 16, 0x1b,1,0,0, 16}
-    chars *      ={0x1c,1,0,0, 16, 0x1d,1,0,0, 16, 0x1e,1,0,0, 16, 0x1f,1,0,0, 16}
-    chars *      ={0x20,1,0,0, 16, 0x21,1,0,0, 16, 0x22,1,0,0, 16, 0x23,1,0,0, 16}
-    chars *      ={0x24,1,0,0, 16, 0x25,1,0,0, 16, 0x26,1,0,0, 16, 0x27,1,0,0, 16}
-    chars *      ={0x28,1,0,0, 16, 0x29,1,0,0, 16, 0x2a,1,0,0, 16, 0x2b,1,0,0, 16}
-    chars *      ={0x2c,1,0,0, 16, 0x2d,1,0,0, 16, 0x2e,1,0,0, 16, 0x2f,1,0,0, 16}
-    chars *      ={0x30,1,0,0, 16, 0x31,1,0,0, 16, 0x32,1,0,0, 16, 0x33,1,0,0, 16}
-    chars *      ={0x34,1,0,0, 16, 0x35,1,0,0, 16, 0x36,1,0,0, 16, 0x37,1,0,0, 16}
-    chars *      ={0x38,1,0,0, 16, 0x39,1,0,0, 16, 0x3a,1,0,0, 16, 0x3b,1,0,0, 16}
-    chars *      ={0x3c,1,0,0, 16, 0x3d,1,0,0, 16, 0x3e,1,0,0, 16, 0x3f,1,0,0, 16}
-    chars *      ={0x40,1,0,0, 16, 0x41,1,0,0, 16, 0x42,1,0,0, 16, 0x43,1,0,0, 16}
-    chars *      ={0x44,1,0,0, 16, 0x45,1,0,0, 16, 0x46,1,0,0, 16, 0x47,1,0,0, 16}
-    chars *      ={0x48,1,0,0, 16, 0x49,1,0,0, 16, 0x4a,1,0,0, 16, 0x4b,1,0,0, 16}
-    chars *      ={0x4c,1,0,0, 16, 0x4d,1,0,0, 16, 0x4e,1,0,0, 16, 0x4f,1,0,0, 16}
-    chars *      ={0x50,1,0,0, 16, 0x51,1,0,0, 16, 0x52,1,0,0, 16, 0x53,1,0,0, 16}
-    chars *      ={0x54,1,0,0, 16, 0x55,1,0,0, 16, 0x56,1,0,0, 16, 0x57,1,0,0, 16}
-    chars *      ={0x58,1,0,0, 16, 0x59,1,0,0, 16, 0x5a,1,0,0, 16, 0x5b,1,0,0, 16}
-    chars *      ={0x5c,1,0,0, 16, 0x5d,1,0,0, 16, 0x5e,1,0,0, 16, 0x5f,1,0,0, 16}
-    chars *      ={0x60,1,0,0, 16, 0x61,1,0,0, 16, 0x62,1,0,0, 16, 0x63,1,0,0, 16}
-    chars *      ={0x64,1,0,0, 16, 0x65,1,0,0, 16, 0x66,1,0,0, 16, 0x67,1,0,0, 16}
-    chars *      ={0x68,1,0,0, 16, 0x69,1,0,0, 16, 0x6a,1,0,0, 16, 0x6b,1,0,0, 16}
-    chars *      ={0x6c,1,0,0, 16, 0x6d,1,0,0, 16, 0x6e,1,0,0, 16, 0x6f,1,0,0, 16}
-    chars *      ={0x70,1,0,0, 16, 0x71,1,0,0, 16, 0x72,1,0,0, 16, 0x73,1,0,0, 16}
-    chars *      ={0x74,1,0,0, 16, 0x75,1,0,0, 16, 0x76,1,0,0, 16, 0x77,1,0,0, 16}
-    chars *      ={0x78,1,0,0, 16, 0x79,1,0,0, 16, 0x7a,1,0,0, 16, 0x7b,1,0,0, 16}
-    chars *      ={0x7c,1,0,0, 16, 0x7d,1,0,0, 16, 0x7e,1,0,0, 16, 0x7f,1,0,0, 16}
-    chars *      ={0x80,0,0,0, 14, 0x81,0,0,0, 14, 0x82,0,0,0, 14, 0x83,0,0,0, 14}
-    chars *      ={0x84,0,0,0, 14, 0x85,0,0,0, 14, 0x86,0,0,0, 14, 0x87,0,0,0, 14}
-    chars *      ={0x88,0,0,0, 14, 0x89,0,0,0, 14, 0x8a,0,0,0, 14, 0x8b,0,0,0, 14}
-    chars *      ={0x8c,0,0,0, 14, 0x8d,0,0,0, 14, 0x8e,0,0,0, 14, 0x8f,0,0,0, 14}
-    chars *      ={0x90,0,0,0, 14, 0x91,0,0,0, 14, 0x92,0,0,0, 14, 0x93,0,0,0, 14}
-    chars *      ={0x94,0,0,0, 14, 0x95,0,0,0, 14, 0x96,0,0,0, 14, 0x97,0,0,0, 14}
-    chars *      ={0x98,0,0,0, 14, 0x99,0,0,0, 14, 0x9a,0,0,0, 14, 0x9b,0,0,0, 14}
-    chars *      ={0x9c,0,0,0, 14, 0x9d,0,0,0, 14, 0x9e,0,0,0, 14, 0x9f,0,0,0, 14}
-    chars *      ={0xa0,0,0,0, 14, 0xa1,0,0,0, 14, 0xa2,0,0,0, 14, 0xa3,0,0,0, 14}
-    chars *      ={0xa4,0,0,0, 14, 0xa5,0,0,0, 14, 0xa6,0,0,0, 14, 0xa7,0,0,0, 14}
-    chars *      ={0xa8,0,0,0, 14, 0xa9,0,0,0, 14, 0xaa,0,0,0, 14, 0xab,0,0,0, 14}
-    chars *      ={0xac,0,0,0, 14, 0xad,0,0,0, 14, 0xae,0,0,0, 14, 0xaf,0,0,0, 14}
-    chars *      ={0xb0,0,0,0, 14, 0xb1,0,0,0, 14, 0xb2,0,0,0, 14, 0xb3,0,0,0, 14}
-    chars *      ={0xb4,0,0,0, 14, 0xb5,0,0,0, 14, 0xb6,0,0,0, 14, 0xb7,0,0,0, 14}
-    chars *      ={0xb8,0,0,0, 14, 0xb9,0,0,0, 14, 0xba,0,0,0, 14, 0xbb,0,0,0, 14}
-    chars *      ={0xbc,0,0,0, 14, 0xbd,0,0,0, 14, 0xbe,0,0,0, 14, 0xbf,0,0,0, 14}
-    chars *      ={0x40,0,0,0, 12, 0x41,0,0,0, 12, 0x42,0,0,0, 12, 0x43,0,0,0, 12}
-    chars *      ={0x44,0,0,0, 12, 0x45,0,0,0, 12, 0x46,0,0,0, 12, 0x47,0,0,0, 12}
-    chars *      ={0x48,0,0,0, 12, 0x49,0,0,0, 12, 0x4a,0,0,0, 12, 0x4b,0,0,0, 12}
-    chars *      ={0x4c,0,0,0, 12, 0x4d,0,0,0, 12, 0x4e,0,0,0, 12, 0x4f,0,0,0, 12}
-    chars *      ={0x50,0,0,0, 12, 0x51,0,0,0, 12, 0x52,0,0,0, 12, 0x53,0,0,0, 12}
-    chars *      ={0x54,0,0,0, 12, 0x55,0,0,0, 12, 0x56,0,0,0, 12, 0x57,0,0,0, 12}
-    chars *      ={0x58,0,0,0, 12, 0x59,0,0,0, 12, 0x5a,0,0,0, 12, 0x5b,0,0,0, 12}
-    chars *      ={0x5c,0,0,0, 12, 0x5d,0,0,0, 12, 0x5e,0,0,0, 12, 0x5f,0,0,0, 12}
-    chars *      ={0x20,0,0,0, 10, 0x21,0,0,0, 10, 0x22,0,0,0, 10, 0x23,0,0,0, 10}
-    chars *      ={0x24,0,0,0, 10, 0x25,0,0,0, 10, 0x26,0,0,0, 10, 0x27,0,0,0, 10}
-    chars *      ={0x28,0,0,0, 10, 0x29,0,0,0, 10, 0x2a,0,0,0, 10, 0x2b,0,0,0, 10}
-    chars *      ={0x2c,0,0,0, 10, 0x2d,0,0,0, 10, 0x2e,0,0,0, 10, 0x2f,0,0,0, 10}
-    chars *      ={0x10,0,0,0, 8,  0x11,0,0,0, 8,  0x12,0,0,0, 8,  0x13,0,0,0, 8}
-    chars *      ={0x14,0,0,0, 8,  0x15,0,0,0, 8,  0x16,0,0,0, 8,  0x17,0,0,0, 8}
-    chars *      ={0x08,0,0,0, 6,  0x09,0,0,0, 6,  0x0a,0,0,0, 6,  0x0b,0,0,0, 6}
-    chars *      ={0x04,0,0,0, 4,  0x05,0,0,0, 4,  0x04,0,0,0, 3,  0x03,0,0,0, 2}
-    chars *      ={0x05,0,0,0, 3,  0x06,0,0,0, 4,  0x07,0,0,0, 4,  0x0c,0,0,0, 6}
-    chars *      ={0x0d,0,0,0, 6,  0x0e,0,0,0, 6,  0x0f,0,0,0, 6,  0x18,0,0,0, 8}
-    chars *      ={0x19,0,0,0, 8,  0x1a,0,0,0, 8,  0x1b,0,0,0, 8,  0x1c,0,0,0, 8}
-    chars *      ={0x1d,0,0,0, 8,  0x1e,0,0,0, 8,  0x1f,0,0,0, 8,  0x30,0,0,0, 10}
-    chars *      ={0x31,0,0,0, 10, 0x32,0,0,0, 10, 0x33,0,0,0, 10, 0x34,0,0,0, 10}
-    chars *      ={0x35,0,0,0, 10, 0x36,0,0,0, 10, 0x37,0,0,0, 10, 0x38,0,0,0, 10}
-    chars *      ={0x39,0,0,0, 10, 0x3a,0,0,0, 10, 0x3b,0,0,0, 10, 0x3c,0,0,0, 10}
-    chars *      ={0x3d,0,0,0, 10, 0x3e,0,0,0, 10, 0x3f,0,0,0, 10, 0x60,0,0,0, 12}
-    chars *      ={0x61,0,0,0, 12, 0x62,0,0,0, 12, 0x63,0,0,0, 12, 0x64,0,0,0, 12}
-    chars *      ={0x65,0,0,0, 12, 0x66,0,0,0, 12, 0x67,0,0,0, 12, 0x68,0,0,0, 12}
-    chars *      ={0x69,0,0,0, 12, 0x6a,0,0,0, 12, 0x6b,0,0,0, 12, 0x6c,0,0,0, 12}
-    chars *      ={0x6d,0,0,0, 12, 0x6e,0,0,0, 12, 0x6f,0,0,0, 12, 0x70,0,0,0, 12}
-    chars *      ={0x71,0,0,0, 12, 0x72,0,0,0, 12, 0x73,0,0,0, 12, 0x74,0,0,0, 12}
-    chars *      ={0x75,0,0,0, 12, 0x76,0,0,0, 12, 0x77,0,0,0, 12, 0x78,0,0,0, 12}
-    chars *      ={0x79,0,0,0, 12, 0x7a,0,0,0, 12, 0x7b,0,0,0, 12, 0x7c,0,0,0, 12}
-    chars *      ={0x7d,0,0,0, 12, 0x7e,0,0,0, 12, 0x7f,0,0,0, 12, 0xc0,0,0,0, 14}
-    chars *      ={0xc1,0,0,0, 14, 0xc2,0,0,0, 14, 0xc3,0,0,0, 14, 0xc4,0,0,0, 14}
-    chars *      ={0xc5,0,0,0, 14, 0xc6,0,0,0, 14, 0xc7,0,0,0, 14, 0xc8,0,0,0, 14}
-    chars *      ={0xc9,0,0,0, 14, 0xca,0,0,0, 14, 0xcb,0,0,0, 14, 0xcc,0,0,0, 14}
-    chars *      ={0xcd,0,0,0, 14, 0xce,0,0,0, 14, 0xcf,0,0,0, 14, 0xd0,0,0,0, 14}
-    chars *      ={0xd1,0,0,0, 14, 0xd2,0,0,0, 14, 0xd3,0,0,0, 14, 0xd4,0,0,0, 14}
-    chars *      ={0xd5,0,0,0, 14, 0xd6,0,0,0, 14, 0xd7,0,0,0, 14, 0xd8,0,0,0, 14}
-    chars *      ={0xd9,0,0,0, 14, 0xda,0,0,0, 14, 0xdb,0,0,0, 14, 0xdc,0,0,0, 14}
-    chars *      ={0xdd,0,0,0, 14, 0xde,0,0,0, 14, 0xdf,0,0,0, 14, 0xe0,0,0,0, 14}
-    chars *      ={0xe1,0,0,0, 14, 0xe2,0,0,0, 14, 0xe3,0,0,0, 14, 0xe4,0,0,0, 14}
-    chars *      ={0xe5,0,0,0, 14, 0xe6,0,0,0, 14, 0xe7,0,0,0, 14, 0xe8,0,0,0, 14}
-    chars *      ={0xe9,0,0,0, 14, 0xea,0,0,0, 14, 0xeb,0,0,0, 14, 0xec,0,0,0, 14}
-    chars *      ={0xed,0,0,0, 14, 0xee,0,0,0, 14, 0xef,0,0,0, 14, 0xf0,0,0,0, 14}
-    chars *      ={0xf1,0,0,0, 14, 0xf2,0,0,0, 14, 0xf3,0,0,0, 14, 0xf4,0,0,0, 14}
-    chars *      ={0xf5,0,0,0, 14, 0xf6,0,0,0, 14, 0xf7,0,0,0, 14, 0xf8,0,0,0, 14}
-    chars *      ={0xf9,0,0,0, 14, 0xfa,0,0,0, 14, 0xfb,0,0,0, 14, 0xfc,0,0,0, 14}
-    chars *      ={0xfd,0,0,0, 14, 0xfe,0,0,0, 14, 0xff,0,0,0, 14, 0x80,1,0,0, 16}
-    chars *      ={0x81,1,0,0, 16, 0x82,1,0,0, 16, 0x83,1,0,0, 16, 0x84,1,0,0, 16}
-    chars *      ={0x85,1,0,0, 16, 0x86,1,0,0, 16, 0x87,1,0,0, 16, 0x88,1,0,0, 16}
-    chars *      ={0x89,1,0,0, 16, 0x8a,1,0,0, 16, 0x8b,1,0,0, 16, 0x8c,1,0,0, 16}
-    chars *      ={0x8d,1,0,0, 16, 0x8e,1,0,0, 16, 0x8f,1,0,0, 16, 0x90,1,0,0, 16}
-    chars *      ={0x91,1,0,0, 16, 0x92,1,0,0, 16, 0x93,1,0,0, 16, 0x94,1,0,0, 16}
-    chars *      ={0x95,1,0,0, 16, 0x96,1,0,0, 16, 0x97,1,0,0, 16, 0x98,1,0,0, 16}
-    chars *      ={0x99,1,0,0, 16, 0x9a,1,0,0, 16, 0x9b,1,0,0, 16, 0x9c,1,0,0, 16}
-    chars *      ={0x9d,1,0,0, 16, 0x9e,1,0,0, 16, 0x9f,1,0,0, 16, 0xa0,1,0,0, 16}
-    chars *      ={0xa1,1,0,0, 16, 0xa2,1,0,0, 16, 0xa3,1,0,0, 16, 0xa4,1,0,0, 16}
-    chars *      ={0xa5,1,0,0, 16, 0xa6,1,0,0, 16, 0xa7,1,0,0, 16, 0xa8,1,0,0, 16}
-    chars *      ={0xa9,1,0,0, 16, 0xaa,1,0,0, 16, 0xab,1,0,0, 16, 0xac,1,0,0, 16}
-    chars *      ={0xad,1,0,0, 16, 0xae,1,0,0, 16, 0xaf,1,0,0, 16, 0xb0,1,0,0, 16}
-    chars *      ={0xb1,1,0,0, 16, 0xb2,1,0,0, 16, 0xb3,1,0,0, 16, 0xb4,1,0,0, 16}
-    chars *      ={0xb5,1,0,0, 16, 0xb6,1,0,0, 16, 0xb7,1,0,0, 16, 0xb8,1,0,0, 16}
-    chars *      ={0xb9,1,0,0, 16, 0xba,1,0,0, 16, 0xbb,1,0,0, 16, 0xbc,1,0,0, 16}
-    chars *      ={0xbd,1,0,0, 16, 0xbe,1,0,0, 16, 0xbf,1,0,0, 16, 0xc0,1,0,0, 16}
-    chars *      ={0xc1,1,0,0, 16, 0xc2,1,0,0, 16, 0xc3,1,0,0, 16, 0xc4,1,0,0, 16}
-    chars *      ={0xc5,1,0,0, 16, 0xc6,1,0,0, 16, 0xc7,1,0,0, 16, 0xc8,1,0,0, 16}
-    chars *      ={0xc9,1,0,0, 16, 0xca,1,0,0, 16, 0xcb,1,0,0, 16, 0xcc,1,0,0, 16}
-    chars *      ={0xcd,1,0,0, 16, 0xce,1,0,0, 16, 0xcf,1,0,0, 16, 0xd0,1,0,0, 16}
-    chars *      ={0xd1,1,0,0, 16, 0xd2,1,0,0, 16, 0xd3,1,0,0, 16, 0xd4,1,0,0, 16}
-    chars *      ={0xd5,1,0,0, 16, 0xd6,1,0,0, 16, 0xd7,1,0,0, 16, 0xd8,1,0,0, 16}
-    chars *      ={0xd9,1,0,0, 16, 0xda,1,0,0, 16, 0xdb,1,0,0, 16, 0xdc,1,0,0, 16}
-    chars *      ={0xdd,1,0,0, 16, 0xde,1,0,0, 16, 0xdf,1,0,0, 16, 0xe0,1,0,0, 16}
-    chars *      ={0xe1,1,0,0, 16, 0xe2,1,0,0, 16, 0xe3,1,0,0, 16, 0xe4,1,0,0, 16}
-    chars *      ={0xe5,1,0,0, 16, 0xe6,1,0,0, 16, 0xe7,1,0,0, 16, 0xe8,1,0,0, 16}
-    chars *      ={0xe9,1,0,0, 16, 0xea,1,0,0, 16, 0xeb,1,0,0, 16, 0xec,1,0,0, 16}
-    chars *      ={0xed,1,0,0, 16, 0xee,1,0,0, 16, 0xef,1,0,0, 16, 0xf0,1,0,0, 16}
-    chars *      ={0xf1,1,0,0, 16, 0xf2,1,0,0, 16, 0xf3,1,0,0, 16, 0xf4,1,0,0, 16}
-    chars *      ={0xf5,1,0,0, 16, 0xf6,1,0,0, 16, 0xf7,1,0,0, 16, 0xf8,1,0,0, 16}
-    chars *      ={0xf9,1,0,0, 16, 0xfa,1,0,0, 16, 0xfb,1,0,0, 16, 0xfc,1,0,0, 16}
-    chars *      ={0xfd,1,0,0, 16, 0xfe,1,0,0, 16, 0xff,1,0,0, 16}
+    char dcc_tab_data={0x00,1,0,0, 16, 0x01,1,0,0, 16, 0x02,1,0,0, 16, 0x03,1,0,0, 16}
+    char *      ={0x04,1,0,0, 16, 0x05,1,0,0, 16, 0x06,1,0,0, 16, 0x07,1,0,0, 16}
+    char *      ={0x08,1,0,0, 16, 0x09,1,0,0, 16, 0x0a,1,0,0, 16, 0x0b,1,0,0, 16}
+    char *      ={0x0c,1,0,0, 16, 0x0d,1,0,0, 16, 0x0e,1,0,0, 16, 0x0f,1,0,0, 16}
+    char *      ={0x10,1,0,0, 16, 0x11,1,0,0, 16, 0x12,1,0,0, 16, 0x13,1,0,0, 16}
+    char *      ={0x14,1,0,0, 16, 0x15,1,0,0, 16, 0x16,1,0,0, 16, 0x17,1,0,0, 16}
+    char *      ={0x18,1,0,0, 16, 0x19,1,0,0, 16, 0x1a,1,0,0, 16, 0x1b,1,0,0, 16}
+    char *      ={0x1c,1,0,0, 16, 0x1d,1,0,0, 16, 0x1e,1,0,0, 16, 0x1f,1,0,0, 16}
+    char *      ={0x20,1,0,0, 16, 0x21,1,0,0, 16, 0x22,1,0,0, 16, 0x23,1,0,0, 16}
+    char *      ={0x24,1,0,0, 16, 0x25,1,0,0, 16, 0x26,1,0,0, 16, 0x27,1,0,0, 16}
+    char *      ={0x28,1,0,0, 16, 0x29,1,0,0, 16, 0x2a,1,0,0, 16, 0x2b,1,0,0, 16}
+    char *      ={0x2c,1,0,0, 16, 0x2d,1,0,0, 16, 0x2e,1,0,0, 16, 0x2f,1,0,0, 16}
+    char *      ={0x30,1,0,0, 16, 0x31,1,0,0, 16, 0x32,1,0,0, 16, 0x33,1,0,0, 16}
+    char *      ={0x34,1,0,0, 16, 0x35,1,0,0, 16, 0x36,1,0,0, 16, 0x37,1,0,0, 16}
+    char *      ={0x38,1,0,0, 16, 0x39,1,0,0, 16, 0x3a,1,0,0, 16, 0x3b,1,0,0, 16}
+    char *      ={0x3c,1,0,0, 16, 0x3d,1,0,0, 16, 0x3e,1,0,0, 16, 0x3f,1,0,0, 16}
+    char *      ={0x40,1,0,0, 16, 0x41,1,0,0, 16, 0x42,1,0,0, 16, 0x43,1,0,0, 16}
+    char *      ={0x44,1,0,0, 16, 0x45,1,0,0, 16, 0x46,1,0,0, 16, 0x47,1,0,0, 16}
+    char *      ={0x48,1,0,0, 16, 0x49,1,0,0, 16, 0x4a,1,0,0, 16, 0x4b,1,0,0, 16}
+    char *      ={0x4c,1,0,0, 16, 0x4d,1,0,0, 16, 0x4e,1,0,0, 16, 0x4f,1,0,0, 16}
+    char *      ={0x50,1,0,0, 16, 0x51,1,0,0, 16, 0x52,1,0,0, 16, 0x53,1,0,0, 16}
+    char *      ={0x54,1,0,0, 16, 0x55,1,0,0, 16, 0x56,1,0,0, 16, 0x57,1,0,0, 16}
+    char *      ={0x58,1,0,0, 16, 0x59,1,0,0, 16, 0x5a,1,0,0, 16, 0x5b,1,0,0, 16}
+    char *      ={0x5c,1,0,0, 16, 0x5d,1,0,0, 16, 0x5e,1,0,0, 16, 0x5f,1,0,0, 16}
+    char *      ={0x60,1,0,0, 16, 0x61,1,0,0, 16, 0x62,1,0,0, 16, 0x63,1,0,0, 16}
+    char *      ={0x64,1,0,0, 16, 0x65,1,0,0, 16, 0x66,1,0,0, 16, 0x67,1,0,0, 16}
+    char *      ={0x68,1,0,0, 16, 0x69,1,0,0, 16, 0x6a,1,0,0, 16, 0x6b,1,0,0, 16}
+    char *      ={0x6c,1,0,0, 16, 0x6d,1,0,0, 16, 0x6e,1,0,0, 16, 0x6f,1,0,0, 16}
+    char *      ={0x70,1,0,0, 16, 0x71,1,0,0, 16, 0x72,1,0,0, 16, 0x73,1,0,0, 16}
+    char *      ={0x74,1,0,0, 16, 0x75,1,0,0, 16, 0x76,1,0,0, 16, 0x77,1,0,0, 16}
+    char *      ={0x78,1,0,0, 16, 0x79,1,0,0, 16, 0x7a,1,0,0, 16, 0x7b,1,0,0, 16}
+    char *      ={0x7c,1,0,0, 16, 0x7d,1,0,0, 16, 0x7e,1,0,0, 16, 0x7f,1,0,0, 16}
+    char *      ={0x80,0,0,0, 14, 0x81,0,0,0, 14, 0x82,0,0,0, 14, 0x83,0,0,0, 14}
+    char *      ={0x84,0,0,0, 14, 0x85,0,0,0, 14, 0x86,0,0,0, 14, 0x87,0,0,0, 14}
+    char *      ={0x88,0,0,0, 14, 0x89,0,0,0, 14, 0x8a,0,0,0, 14, 0x8b,0,0,0, 14}
+    char *      ={0x8c,0,0,0, 14, 0x8d,0,0,0, 14, 0x8e,0,0,0, 14, 0x8f,0,0,0, 14}
+    char *      ={0x90,0,0,0, 14, 0x91,0,0,0, 14, 0x92,0,0,0, 14, 0x93,0,0,0, 14}
+    char *      ={0x94,0,0,0, 14, 0x95,0,0,0, 14, 0x96,0,0,0, 14, 0x97,0,0,0, 14}
+    char *      ={0x98,0,0,0, 14, 0x99,0,0,0, 14, 0x9a,0,0,0, 14, 0x9b,0,0,0, 14}
+    char *      ={0x9c,0,0,0, 14, 0x9d,0,0,0, 14, 0x9e,0,0,0, 14, 0x9f,0,0,0, 14}
+    char *      ={0xa0,0,0,0, 14, 0xa1,0,0,0, 14, 0xa2,0,0,0, 14, 0xa3,0,0,0, 14}
+    char *      ={0xa4,0,0,0, 14, 0xa5,0,0,0, 14, 0xa6,0,0,0, 14, 0xa7,0,0,0, 14}
+    char *      ={0xa8,0,0,0, 14, 0xa9,0,0,0, 14, 0xaa,0,0,0, 14, 0xab,0,0,0, 14}
+    char *      ={0xac,0,0,0, 14, 0xad,0,0,0, 14, 0xae,0,0,0, 14, 0xaf,0,0,0, 14}
+    char *      ={0xb0,0,0,0, 14, 0xb1,0,0,0, 14, 0xb2,0,0,0, 14, 0xb3,0,0,0, 14}
+    char *      ={0xb4,0,0,0, 14, 0xb5,0,0,0, 14, 0xb6,0,0,0, 14, 0xb7,0,0,0, 14}
+    char *      ={0xb8,0,0,0, 14, 0xb9,0,0,0, 14, 0xba,0,0,0, 14, 0xbb,0,0,0, 14}
+    char *      ={0xbc,0,0,0, 14, 0xbd,0,0,0, 14, 0xbe,0,0,0, 14, 0xbf,0,0,0, 14}
+    char *      ={0x40,0,0,0, 12, 0x41,0,0,0, 12, 0x42,0,0,0, 12, 0x43,0,0,0, 12}
+    char *      ={0x44,0,0,0, 12, 0x45,0,0,0, 12, 0x46,0,0,0, 12, 0x47,0,0,0, 12}
+    char *      ={0x48,0,0,0, 12, 0x49,0,0,0, 12, 0x4a,0,0,0, 12, 0x4b,0,0,0, 12}
+    char *      ={0x4c,0,0,0, 12, 0x4d,0,0,0, 12, 0x4e,0,0,0, 12, 0x4f,0,0,0, 12}
+    char *      ={0x50,0,0,0, 12, 0x51,0,0,0, 12, 0x52,0,0,0, 12, 0x53,0,0,0, 12}
+    char *      ={0x54,0,0,0, 12, 0x55,0,0,0, 12, 0x56,0,0,0, 12, 0x57,0,0,0, 12}
+    char *      ={0x58,0,0,0, 12, 0x59,0,0,0, 12, 0x5a,0,0,0, 12, 0x5b,0,0,0, 12}
+    char *      ={0x5c,0,0,0, 12, 0x5d,0,0,0, 12, 0x5e,0,0,0, 12, 0x5f,0,0,0, 12}
+    char *      ={0x20,0,0,0, 10, 0x21,0,0,0, 10, 0x22,0,0,0, 10, 0x23,0,0,0, 10}
+    char *      ={0x24,0,0,0, 10, 0x25,0,0,0, 10, 0x26,0,0,0, 10, 0x27,0,0,0, 10}
+    char *      ={0x28,0,0,0, 10, 0x29,0,0,0, 10, 0x2a,0,0,0, 10, 0x2b,0,0,0, 10}
+    char *      ={0x2c,0,0,0, 10, 0x2d,0,0,0, 10, 0x2e,0,0,0, 10, 0x2f,0,0,0, 10}
+    char *      ={0x10,0,0,0, 8,  0x11,0,0,0, 8,  0x12,0,0,0, 8,  0x13,0,0,0, 8}
+    char *      ={0x14,0,0,0, 8,  0x15,0,0,0, 8,  0x16,0,0,0, 8,  0x17,0,0,0, 8}
+    char *      ={0x08,0,0,0, 6,  0x09,0,0,0, 6,  0x0a,0,0,0, 6,  0x0b,0,0,0, 6}
+    char *      ={0x04,0,0,0, 4,  0x05,0,0,0, 4,  0x04,0,0,0, 3,  0x03,0,0,0, 2}
+    char *      ={0x05,0,0,0, 3,  0x06,0,0,0, 4,  0x07,0,0,0, 4,  0x0c,0,0,0, 6}
+    char *      ={0x0d,0,0,0, 6,  0x0e,0,0,0, 6,  0x0f,0,0,0, 6,  0x18,0,0,0, 8}
+    char *      ={0x19,0,0,0, 8,  0x1a,0,0,0, 8,  0x1b,0,0,0, 8,  0x1c,0,0,0, 8}
+    char *      ={0x1d,0,0,0, 8,  0x1e,0,0,0, 8,  0x1f,0,0,0, 8,  0x30,0,0,0, 10}
+    char *      ={0x31,0,0,0, 10, 0x32,0,0,0, 10, 0x33,0,0,0, 10, 0x34,0,0,0, 10}
+    char *      ={0x35,0,0,0, 10, 0x36,0,0,0, 10, 0x37,0,0,0, 10, 0x38,0,0,0, 10}
+    char *      ={0x39,0,0,0, 10, 0x3a,0,0,0, 10, 0x3b,0,0,0, 10, 0x3c,0,0,0, 10}
+    char *      ={0x3d,0,0,0, 10, 0x3e,0,0,0, 10, 0x3f,0,0,0, 10, 0x60,0,0,0, 12}
+    char *      ={0x61,0,0,0, 12, 0x62,0,0,0, 12, 0x63,0,0,0, 12, 0x64,0,0,0, 12}
+    char *      ={0x65,0,0,0, 12, 0x66,0,0,0, 12, 0x67,0,0,0, 12, 0x68,0,0,0, 12}
+    char *      ={0x69,0,0,0, 12, 0x6a,0,0,0, 12, 0x6b,0,0,0, 12, 0x6c,0,0,0, 12}
+    char *      ={0x6d,0,0,0, 12, 0x6e,0,0,0, 12, 0x6f,0,0,0, 12, 0x70,0,0,0, 12}
+    char *      ={0x71,0,0,0, 12, 0x72,0,0,0, 12, 0x73,0,0,0, 12, 0x74,0,0,0, 12}
+    char *      ={0x75,0,0,0, 12, 0x76,0,0,0, 12, 0x77,0,0,0, 12, 0x78,0,0,0, 12}
+    char *      ={0x79,0,0,0, 12, 0x7a,0,0,0, 12, 0x7b,0,0,0, 12, 0x7c,0,0,0, 12}
+    char *      ={0x7d,0,0,0, 12, 0x7e,0,0,0, 12, 0x7f,0,0,0, 12, 0xc0,0,0,0, 14}
+    char *      ={0xc1,0,0,0, 14, 0xc2,0,0,0, 14, 0xc3,0,0,0, 14, 0xc4,0,0,0, 14}
+    char *      ={0xc5,0,0,0, 14, 0xc6,0,0,0, 14, 0xc7,0,0,0, 14, 0xc8,0,0,0, 14}
+    char *      ={0xc9,0,0,0, 14, 0xca,0,0,0, 14, 0xcb,0,0,0, 14, 0xcc,0,0,0, 14}
+    char *      ={0xcd,0,0,0, 14, 0xce,0,0,0, 14, 0xcf,0,0,0, 14, 0xd0,0,0,0, 14}
+    char *      ={0xd1,0,0,0, 14, 0xd2,0,0,0, 14, 0xd3,0,0,0, 14, 0xd4,0,0,0, 14}
+    char *      ={0xd5,0,0,0, 14, 0xd6,0,0,0, 14, 0xd7,0,0,0, 14, 0xd8,0,0,0, 14}
+    char *      ={0xd9,0,0,0, 14, 0xda,0,0,0, 14, 0xdb,0,0,0, 14, 0xdc,0,0,0, 14}
+    char *      ={0xdd,0,0,0, 14, 0xde,0,0,0, 14, 0xdf,0,0,0, 14, 0xe0,0,0,0, 14}
+    char *      ={0xe1,0,0,0, 14, 0xe2,0,0,0, 14, 0xe3,0,0,0, 14, 0xe4,0,0,0, 14}
+    char *      ={0xe5,0,0,0, 14, 0xe6,0,0,0, 14, 0xe7,0,0,0, 14, 0xe8,0,0,0, 14}
+    char *      ={0xe9,0,0,0, 14, 0xea,0,0,0, 14, 0xeb,0,0,0, 14, 0xec,0,0,0, 14}
+    char *      ={0xed,0,0,0, 14, 0xee,0,0,0, 14, 0xef,0,0,0, 14, 0xf0,0,0,0, 14}
+    char *      ={0xf1,0,0,0, 14, 0xf2,0,0,0, 14, 0xf3,0,0,0, 14, 0xf4,0,0,0, 14}
+    char *      ={0xf5,0,0,0, 14, 0xf6,0,0,0, 14, 0xf7,0,0,0, 14, 0xf8,0,0,0, 14}
+    char *      ={0xf9,0,0,0, 14, 0xfa,0,0,0, 14, 0xfb,0,0,0, 14, 0xfc,0,0,0, 14}
+    char *      ={0xfd,0,0,0, 14, 0xfe,0,0,0, 14, 0xff,0,0,0, 14, 0x80,1,0,0, 16}
+    char *      ={0x81,1,0,0, 16, 0x82,1,0,0, 16, 0x83,1,0,0, 16, 0x84,1,0,0, 16}
+    char *      ={0x85,1,0,0, 16, 0x86,1,0,0, 16, 0x87,1,0,0, 16, 0x88,1,0,0, 16}
+    char *      ={0x89,1,0,0, 16, 0x8a,1,0,0, 16, 0x8b,1,0,0, 16, 0x8c,1,0,0, 16}
+    char *      ={0x8d,1,0,0, 16, 0x8e,1,0,0, 16, 0x8f,1,0,0, 16, 0x90,1,0,0, 16}
+    char *      ={0x91,1,0,0, 16, 0x92,1,0,0, 16, 0x93,1,0,0, 16, 0x94,1,0,0, 16}
+    char *      ={0x95,1,0,0, 16, 0x96,1,0,0, 16, 0x97,1,0,0, 16, 0x98,1,0,0, 16}
+    char *      ={0x99,1,0,0, 16, 0x9a,1,0,0, 16, 0x9b,1,0,0, 16, 0x9c,1,0,0, 16}
+    char *      ={0x9d,1,0,0, 16, 0x9e,1,0,0, 16, 0x9f,1,0,0, 16, 0xa0,1,0,0, 16}
+    char *      ={0xa1,1,0,0, 16, 0xa2,1,0,0, 16, 0xa3,1,0,0, 16, 0xa4,1,0,0, 16}
+    char *      ={0xa5,1,0,0, 16, 0xa6,1,0,0, 16, 0xa7,1,0,0, 16, 0xa8,1,0,0, 16}
+    char *      ={0xa9,1,0,0, 16, 0xaa,1,0,0, 16, 0xab,1,0,0, 16, 0xac,1,0,0, 16}
+    char *      ={0xad,1,0,0, 16, 0xae,1,0,0, 16, 0xaf,1,0,0, 16, 0xb0,1,0,0, 16}
+    char *      ={0xb1,1,0,0, 16, 0xb2,1,0,0, 16, 0xb3,1,0,0, 16, 0xb4,1,0,0, 16}
+    char *      ={0xb5,1,0,0, 16, 0xb6,1,0,0, 16, 0xb7,1,0,0, 16, 0xb8,1,0,0, 16}
+    char *      ={0xb9,1,0,0, 16, 0xba,1,0,0, 16, 0xbb,1,0,0, 16, 0xbc,1,0,0, 16}
+    char *      ={0xbd,1,0,0, 16, 0xbe,1,0,0, 16, 0xbf,1,0,0, 16, 0xc0,1,0,0, 16}
+    char *      ={0xc1,1,0,0, 16, 0xc2,1,0,0, 16, 0xc3,1,0,0, 16, 0xc4,1,0,0, 16}
+    char *      ={0xc5,1,0,0, 16, 0xc6,1,0,0, 16, 0xc7,1,0,0, 16, 0xc8,1,0,0, 16}
+    char *      ={0xc9,1,0,0, 16, 0xca,1,0,0, 16, 0xcb,1,0,0, 16, 0xcc,1,0,0, 16}
+    char *      ={0xcd,1,0,0, 16, 0xce,1,0,0, 16, 0xcf,1,0,0, 16, 0xd0,1,0,0, 16}
+    char *      ={0xd1,1,0,0, 16, 0xd2,1,0,0, 16, 0xd3,1,0,0, 16, 0xd4,1,0,0, 16}
+    char *      ={0xd5,1,0,0, 16, 0xd6,1,0,0, 16, 0xd7,1,0,0, 16, 0xd8,1,0,0, 16}
+    char *      ={0xd9,1,0,0, 16, 0xda,1,0,0, 16, 0xdb,1,0,0, 16, 0xdc,1,0,0, 16}
+    char *      ={0xdd,1,0,0, 16, 0xde,1,0,0, 16, 0xdf,1,0,0, 16, 0xe0,1,0,0, 16}
+    char *      ={0xe1,1,0,0, 16, 0xe2,1,0,0, 16, 0xe3,1,0,0, 16, 0xe4,1,0,0, 16}
+    char *      ={0xe5,1,0,0, 16, 0xe6,1,0,0, 16, 0xe7,1,0,0, 16, 0xe8,1,0,0, 16}
+    char *      ={0xe9,1,0,0, 16, 0xea,1,0,0, 16, 0xeb,1,0,0, 16, 0xec,1,0,0, 16}
+    char *      ={0xed,1,0,0, 16, 0xee,1,0,0, 16, 0xef,1,0,0, 16, 0xf0,1,0,0, 16}
+    char *      ={0xf1,1,0,0, 16, 0xf2,1,0,0, 16, 0xf3,1,0,0, 16, 0xf4,1,0,0, 16}
+    char *      ={0xf5,1,0,0, 16, 0xf6,1,0,0, 16, 0xf7,1,0,0, 16, 0xf8,1,0,0, 16}
+    char *      ={0xf9,1,0,0, 16, 0xfa,1,0,0, 16, 0xfb,1,0,0, 16, 0xfc,1,0,0, 16}
+    char *      ={0xfd,1,0,0, 16, 0xfe,1,0,0, 16, 0xff,1,0,0, 16}
 
     sd ind
     set ind x
--- ovideo-1.orig/src/media/mpeg_enc.s
+++ ovideo-1/src/media/mpeg_enc.s
@@ -5,8 +5,8 @@ include "../_include/include.h"
 
 #bool
 function mpeg_frame_block(sd max_y,sd max_x,sd type)
-    chars dct_codes#6*64*int16
-    chars qcoeff#6*64*int16
+    char dct_codes#6*64*int16
+    char qcoeff#6*64*int16
 
     data p_dct_codes^dct_codes
     data p_qcoeff^qcoeff
--- ovideo-1.orig/src/media/mpeg_init.s
+++ ovideo-1/src/media/mpeg_init.s
@@ -18,8 +18,8 @@ function vlc_tables_intra(sd action,sd n
     const vlc_array_size=2*64*64*VLC_size
     #[2][64][64]
     #data code
-    #chars len
-    chars vlc_data#vlc_array_size
+    #char len
+    char vlc_data#vlc_array_size
     if action==(value_set)
         #set tables to 0 or bad code can be written
         import "setmem" setmem
@@ -87,108 +87,108 @@ function vlc_coeff_tab_intra(sd i,sd blo
         #last  u8
         #run   u8
         #level i8
-    chars tab={2, 0,0,0,  2,    0, 0, 1}
-    chars *  ={15,0,0,0,  4,    0, 0, 3}
-    chars *  ={21,0,0,0,  6,    0, 0, 6}
-    chars *  ={23,0,0,0,  7,    0, 0, 9}
-    chars *  ={31,0,0,0,  8,    0, 0, 10}
-    chars *  ={37,0,0,0,  9,    0, 0, 13}
-    chars *  ={36,0,0,0,  9,    0, 0, 14}
-    chars *  ={33,0,0,0, 10,    0, 0, 17}
-    chars *  ={32,0,0,0, 10,    0, 0, 18}
-    chars *  ={ 7,0,0,0, 11,    0, 0, 21}
-    chars *  ={ 6,0,0,0, 11,    0, 0, 22}
-    chars *  ={32,0,0,0, 11,    0, 0, 23}
-    chars *  ={ 6,0,0,0,  3,    0, 0, 2}
-    chars *  ={20,0,0,0,  6,    0, 1, 2}
-    chars *  ={30,0,0,0,  8,    0, 0, 11}
-    chars *  ={15,0,0,0, 10,    0, 0, 19}
-    chars *  ={33,0,0,0, 11,    0, 0, 24}
-    chars *  ={80,0,0,0, 12,    0, 0, 25}
-    chars *  ={14,0,0,0,  4,    0, 1, 1}
-    chars *  ={29,0,0,0,  8,    0, 0, 12}
-    chars *  ={14,0,0,0, 10,    0, 0, 20}
-    chars *  ={81,0,0,0, 12,    0, 0, 26}
-    chars *  ={13,0,0,0,  5,    0, 0, 4}
-    chars *  ={35,0,0,0,  9,    0, 0, 15}
-    chars *  ={13,0,0,0, 10,    0, 1, 7}
-    chars *  ={12,0,0,0,  5,    0, 0, 5}
-    chars *  ={34,0,0,0,  9,    0, 4, 2}
-    chars *  ={82,0,0,0, 12,    0, 0, 27}
-    chars *  ={11,0,0,0,  5,    0, 2, 1}
-    chars *  ={12,0,0,0, 10,    0, 2, 4}
-    chars *  ={83,0,0,0, 12,    0, 1, 9}
-    chars *  ={19,0,0,0,  6,    0, 0, 7}
-    chars *  ={11,0,0,0, 10,    0, 3, 4}
-    chars *  ={84,0,0,0, 12,    0, 6, 3}
-    chars *  ={18,0,0,0,  6,    0, 0, 8}
-    chars *  ={10,0,0,0, 10,    0, 4, 3}
-    chars *  ={17,0,0,0,  6,    0, 3, 1}
-    chars *  ={ 9,0,0,0, 10,    0, 8, 2}
-    chars *  ={16,0,0,0,  6,    0, 4, 1}
-    chars *  ={ 8,0,0,0, 10,    0, 5, 3}
-    chars *  ={22,0,0,0,  7,    0, 1, 3}
-    chars *  ={85,0,0,0, 12,    0, 1, 10}
-    chars *  ={21,0,0,0,  7,    0, 2, 2}
-    chars *  ={20,0,0,0,  7,    0, 7, 1}
-    chars *  ={28,0,0,0,  8,    0, 1, 4}
-    chars *  ={27,0,0,0,  8,    0, 3, 2}
-    chars *  ={33,0,0,0,  9,    0, 0, 16}
-    chars *  ={32,0,0,0,  9,    0, 1, 5}
-    chars *  ={31,0,0,0,  9,    0, 1, 6}
-    chars *  ={30,0,0,0,  9,    0, 2, 3}
-    chars *  ={29,0,0,0,  9,    0, 3, 3}
-    chars *  ={28,0,0,0,  9,    0, 5, 2}
-    chars *  ={27,0,0,0,  9,    0, 6, 2}
-    chars *  ={26,0,0,0,  9,    0, 7, 2}
-    chars *  ={34,0,0,0, 11,    0, 1, 8}
-    chars *  ={35,0,0,0, 11,    0, 9, 2}
-    chars *  ={86,0,0,0, 12,    0, 2, 5}
-    chars *  ={87,0,0,0, 12,    0, 7, 3}
-    chars *  ={ 7,0,0,0,  4,    1, 0, 1}
-    chars *  ={25,0,0,0,  9,    0, 11, 1}
-    chars *  ={ 5,0,0,0, 11,    1, 0, 6}
-    chars *  ={15,0,0,0,  6,    1, 1, 1}
-    chars *  ={ 4,0,0,0, 11,    1, 0, 7}
-    chars *  ={14,0,0,0,  6,    1, 2, 1}
-    chars *  ={13,0,0,0,  6,    0, 5, 1}
-    chars *  ={12,0,0,0,  6,    1, 0, 2}
-    chars *  ={19,0,0,0,  7,    1, 5, 1}
-    chars *  ={18,0,0,0,  7,    0, 6, 1}
-    chars *  ={17,0,0,0,  7,    1, 3, 1}
-    chars *  ={16,0,0,0,  7,    1, 4, 1}
-    chars *  ={26,0,0,0,  8,    1, 9, 1}
-    chars *  ={25,0,0,0,  8,    0, 8, 1}
-    chars *  ={24,0,0,0,  8,    0, 9, 1}
-    chars *  ={23,0,0,0,  8,    0, 10, 1}
-    chars *  ={22,0,0,0,  8,    1, 0, 3}
-    chars *  ={21,0,0,0,  8,    1, 6, 1}
-    chars *  ={20,0,0,0,  8,    1, 7, 1}
-    chars *  ={19,0,0,0,  8,    1, 8, 1}
-    chars *  ={24,0,0,0,  9,    0, 12, 1}
-    chars *  ={23,0,0,0,  9,    1, 0, 4}
-    chars *  ={22,0,0,0,  9,    1, 1, 2}
-    chars *  ={21,0,0,0,  9,    1, 10, 1}
-    chars *  ={20,0,0,0,  9,    1, 11, 1}
-    chars *  ={19,0,0,0,  9,    1, 12, 1}
-    chars *  ={18,0,0,0,  9,    1, 13, 1}
-    chars *  ={17,0,0,0,  9,    1, 14, 1}
-    chars *  ={7, 0,0,0, 10,    0, 13, 1}
-    chars *  ={6, 0,0,0, 10,    1, 0, 5}
-    chars *  ={5, 0,0,0, 10,    1, 1, 3}
-    chars *  ={4, 0,0,0, 10,    1, 2, 2}
-    chars *  ={36,0,0,0, 11,    1, 3, 2}
-    chars *  ={37,0,0,0, 11,    1, 4, 2}
-    chars *  ={38,0,0,0, 11,    1, 15, 1}
-    chars *  ={39,0,0,0, 11,    1, 16, 1}
-    chars *  ={88,0,0,0, 12,    0, 14, 1}
-    chars *  ={89,0,0,0, 12,    1, 0, 8}
-    chars *  ={90,0,0,0, 12,    1, 5, 2}
-    chars *  ={91,0,0,0, 12,    1, 6, 2}
-    chars *  ={92,0,0,0, 12,    1, 17, 1}
-    chars *  ={93,0,0,0, 12,    1, 18, 1}
-    chars *  ={94,0,0,0, 12,    1, 19, 1}
-    chars *  ={95,0,0,0, 12,    1, 20, 1}
+    char tab={2, 0,0,0,  2,    0, 0, 1}
+    char *  ={15,0,0,0,  4,    0, 0, 3}
+    char *  ={21,0,0,0,  6,    0, 0, 6}
+    char *  ={23,0,0,0,  7,    0, 0, 9}
+    char *  ={31,0,0,0,  8,    0, 0, 10}
+    char *  ={37,0,0,0,  9,    0, 0, 13}
+    char *  ={36,0,0,0,  9,    0, 0, 14}
+    char *  ={33,0,0,0, 10,    0, 0, 17}
+    char *  ={32,0,0,0, 10,    0, 0, 18}
+    char *  ={ 7,0,0,0, 11,    0, 0, 21}
+    char *  ={ 6,0,0,0, 11,    0, 0, 22}
+    char *  ={32,0,0,0, 11,    0, 0, 23}
+    char *  ={ 6,0,0,0,  3,    0, 0, 2}
+    char *  ={20,0,0,0,  6,    0, 1, 2}
+    char *  ={30,0,0,0,  8,    0, 0, 11}
+    char *  ={15,0,0,0, 10,    0, 0, 19}
+    char *  ={33,0,0,0, 11,    0, 0, 24}
+    char *  ={80,0,0,0, 12,    0, 0, 25}
+    char *  ={14,0,0,0,  4,    0, 1, 1}
+    char *  ={29,0,0,0,  8,    0, 0, 12}
+    char *  ={14,0,0,0, 10,    0, 0, 20}
+    char *  ={81,0,0,0, 12,    0, 0, 26}
+    char *  ={13,0,0,0,  5,    0, 0, 4}
+    char *  ={35,0,0,0,  9,    0, 0, 15}
+    char *  ={13,0,0,0, 10,    0, 1, 7}
+    char *  ={12,0,0,0,  5,    0, 0, 5}
+    char *  ={34,0,0,0,  9,    0, 4, 2}
+    char *  ={82,0,0,0, 12,    0, 0, 27}
+    char *  ={11,0,0,0,  5,    0, 2, 1}
+    char *  ={12,0,0,0, 10,    0, 2, 4}
+    char *  ={83,0,0,0, 12,    0, 1, 9}
+    char *  ={19,0,0,0,  6,    0, 0, 7}
+    char *  ={11,0,0,0, 10,    0, 3, 4}
+    char *  ={84,0,0,0, 12,    0, 6, 3}
+    char *  ={18,0,0,0,  6,    0, 0, 8}
+    char *  ={10,0,0,0, 10,    0, 4, 3}
+    char *  ={17,0,0,0,  6,    0, 3, 1}
+    char *  ={ 9,0,0,0, 10,    0, 8, 2}
+    char *  ={16,0,0,0,  6,    0, 4, 1}
+    char *  ={ 8,0,0,0, 10,    0, 5, 3}
+    char *  ={22,0,0,0,  7,    0, 1, 3}
+    char *  ={85,0,0,0, 12,    0, 1, 10}
+    char *  ={21,0,0,0,  7,    0, 2, 2}
+    char *  ={20,0,0,0,  7,    0, 7, 1}
+    char *  ={28,0,0,0,  8,    0, 1, 4}
+    char *  ={27,0,0,0,  8,    0, 3, 2}
+    char *  ={33,0,0,0,  9,    0, 0, 16}
+    char *  ={32,0,0,0,  9,    0, 1, 5}
+    char *  ={31,0,0,0,  9,    0, 1, 6}
+    char *  ={30,0,0,0,  9,    0, 2, 3}
+    char *  ={29,0,0,0,  9,    0, 3, 3}
+    char *  ={28,0,0,0,  9,    0, 5, 2}
+    char *  ={27,0,0,0,  9,    0, 6, 2}
+    char *  ={26,0,0,0,  9,    0, 7, 2}
+    char *  ={34,0,0,0, 11,    0, 1, 8}
+    char *  ={35,0,0,0, 11,    0, 9, 2}
+    char *  ={86,0,0,0, 12,    0, 2, 5}
+    char *  ={87,0,0,0, 12,    0, 7, 3}
+    char *  ={ 7,0,0,0,  4,    1, 0, 1}
+    char *  ={25,0,0,0,  9,    0, 11, 1}
+    char *  ={ 5,0,0,0, 11,    1, 0, 6}
+    char *  ={15,0,0,0,  6,    1, 1, 1}
+    char *  ={ 4,0,0,0, 11,    1, 0, 7}
+    char *  ={14,0,0,0,  6,    1, 2, 1}
+    char *  ={13,0,0,0,  6,    0, 5, 1}
+    char *  ={12,0,0,0,  6,    1, 0, 2}
+    char *  ={19,0,0,0,  7,    1, 5, 1}
+    char *  ={18,0,0,0,  7,    0, 6, 1}
+    char *  ={17,0,0,0,  7,    1, 3, 1}
+    char *  ={16,0,0,0,  7,    1, 4, 1}
+    char *  ={26,0,0,0,  8,    1, 9, 1}
+    char *  ={25,0,0,0,  8,    0, 8, 1}
+    char *  ={24,0,0,0,  8,    0, 9, 1}
+    char *  ={23,0,0,0,  8,    0, 10, 1}
+    char *  ={22,0,0,0,  8,    1, 0, 3}
+    char *  ={21,0,0,0,  8,    1, 6, 1}
+    char *  ={20,0,0,0,  8,    1, 7, 1}
+    char *  ={19,0,0,0,  8,    1, 8, 1}
+    char *  ={24,0,0,0,  9,    0, 12, 1}
+    char *  ={23,0,0,0,  9,    1, 0, 4}
+    char *  ={22,0,0,0,  9,    1, 1, 2}
+    char *  ={21,0,0,0,  9,    1, 10, 1}
+    char *  ={20,0,0,0,  9,    1, 11, 1}
+    char *  ={19,0,0,0,  9,    1, 12, 1}
+    char *  ={18,0,0,0,  9,    1, 13, 1}
+    char *  ={17,0,0,0,  9,    1, 14, 1}
+    char *  ={7, 0,0,0, 10,    0, 13, 1}
+    char *  ={6, 0,0,0, 10,    1, 0, 5}
+    char *  ={5, 0,0,0, 10,    1, 1, 3}
+    char *  ={4, 0,0,0, 10,    1, 2, 2}
+    char *  ={36,0,0,0, 11,    1, 3, 2}
+    char *  ={37,0,0,0, 11,    1, 4, 2}
+    char *  ={38,0,0,0, 11,    1, 15, 1}
+    char *  ={39,0,0,0, 11,    1, 16, 1}
+    char *  ={88,0,0,0, 12,    0, 14, 1}
+    char *  ={89,0,0,0, 12,    1, 0, 8}
+    char *  ={90,0,0,0, 12,    1, 5, 2}
+    char *  ={91,0,0,0, 12,    1, 6, 2}
+    char *  ={92,0,0,0, 12,    1, 17, 1}
+    char *  ={93,0,0,0, 12,    1, 18, 1}
+    char *  ={94,0,0,0, 12,    1, 19, 1}
+    char *  ={95,0,0,0, 12,    1, 20, 1}
 
     data coeff_tab^tab
     data stride=4+1+3
@@ -246,23 +246,23 @@ endfunction
 ##3
 
 function vlc_tables_intra_maxrun(sd last,sd pos)
-    chars last0={0, 14, 9, 7, 3, 2, 1, 1}
-    chars *    ={1, 1,  1, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-
-    chars last1={0, 20, 6, 1, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char last0={0, 14, 9, 7, 3, 2, 1, 1}
+    char *    ={1, 1,  1, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+
+    char last1={0, 20, 6, 1, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
+    char *    ={0, 0,  0, 0, 0, 0, 0, 0}
 
     if last==0
         ss max0^last0
@@ -277,23 +277,23 @@ endfunction
 
 function vlc_tables_intra_maxlevel(sd last,sd pos)
     #u8
-    chars last0={27,10, 5, 4, 3, 3, 3, 3}
-    chars *    ={2,  2, 1, 1, 1, 1, 1, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0,  0, 0, 0, 0, 0, 0, 0}
-
-    chars last1={8, 3, 2, 2, 2, 2, 2, 1}
-    chars *    ={1, 1, 1, 1, 1, 1, 1, 1}
-    chars *    ={1, 1, 1, 1, 1, 0, 0, 0}
-    chars *    ={0, 0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0, 0, 0, 0, 0, 0, 0}
-    chars *    ={0, 0, 0, 0, 0, 0, 0, 0}
+    char last0={27,10, 5, 4, 3, 3, 3, 3}
+    char *    ={2,  2, 1, 1, 1, 1, 1, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+    char *    ={0,  0, 0, 0, 0, 0, 0, 0}
+
+    char last1={8, 3, 2, 2, 2, 2, 2, 1}
+    char *    ={1, 1, 1, 1, 1, 1, 1, 1}
+    char *    ={1, 1, 1, 1, 1, 0, 0, 0}
+    char *    ={0, 0, 0, 0, 0, 0, 0, 0}
+    char *    ={0, 0, 0, 0, 0, 0, 0, 0}
+    char *    ={0, 0, 0, 0, 0, 0, 0, 0}
+    char *    ={0, 0, 0, 0, 0, 0, 0, 0}
+    char *    ={0, 0, 0, 0, 0, 0, 0, 0}
 
     if last==0
         ss max0^last0
--- ovideo-1.orig/src/media/mpeg_pred.s
+++ ovideo-1/src/media/mpeg_pred.s
@@ -9,7 +9,7 @@ const horizontal=1
 #cbp
 function mpeg_mb_prediction(sd x,sd y,sd mb_width,sd qcoeff,sd acpred_direction)
     sd s=0
-    chars predictors_data#6*8*int16
+    char predictors_data#6*8*int16
     data predictors^predictors_data
 
     #sd scaler=default_scaler
@@ -164,9 +164,9 @@ function mpeg_predict_acdc(sd x,sd mb_wi
     #sd top_quant=DEFAULT_QUANT
 
     #int16
-    chars default_acdc_values={1024,1024/0x100}
-    chars *={0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0}
-    chars *={0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0}
+    char default_acdc_values={1024,1024/0x100}
+    char *={0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0}
+    char *={0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0}
 
     sd p_left^default_acdc_values
     sd p_top^default_acdc_values
@@ -396,7 +396,7 @@ function calc_acdc_bits(sd acpred_direct
     sd z2
     setcall z2 coef_intra_calc(qcoeff,(zig_zag))
 
-    chars tmp#8*int16
+    char tmp#8*int16
     data temp^tmp
     set i 1
     #apply ac prediction & calc cost
--- ovideo-1.orig/src/mem/alloc.s
+++ ovideo-1/src/mem/alloc.s
@@ -13,7 +13,7 @@ function memrealloc(sd block,sd size)
     sd newblock
     SetCall newblock realloc(block,size)
     If newblock==0
-            Chars newmem="Realloc failed with error: "
+            char newmem="Realloc failed with error: "
             str pnewmem^newmem
             call strerrno(pnewmem)
     EndIf
--- ovideo-1.orig/src/mem/op.s
+++ ovideo-1/src/mem/op.s
@@ -8,7 +8,7 @@ include "../_include/include.h"
 ##set
 
 #void
-function setmem(str pointer,data size,chars value)
+function setmem(str pointer,data size,char value)
     str end#1
     set end pointer
     add end size
@@ -20,7 +20,7 @@ endfunction
 
 #void
 function setmemzero(str pointer,data size)
-    chars zero=0
+    char zero=0
     call setmem(pointer,size,zero)
 endfunction
 
@@ -123,8 +123,8 @@ Function cmpmem(str m1,str m2,data size)
         Data equal=equalCompare
         Data notequal=differentCompare
 
-        Chars c1#1
-        Chars c2#1
+        char c1#1
+        char c2#1
         While size!=zero
                 Set c1 m1#
                 Set c2 m2#
@@ -165,10 +165,10 @@ endfunction
 ##valinmem
 
 #return the size of the value, if the delim is found the size counts until there
-Function valinmemsens(str content,data size,chars delim) #,data sens
+Function valinmemsens(str content,data size,char delim) #,data sens
         Data length#1
         Set length size
-        Chars byte#1
+        char byte#1
         Data zero=0
 
         If size==zero
--- ovideo-1.orig/src/obj/containers.s
+++ ovideo-1/src/obj/containers.s
@@ -134,7 +134,7 @@ import "cpymem" cpymem
 import "slen" slen
 #const modal_texter_draw_data_size=100
 function dialogfield_modal_texter_drawtext(sd procedure,sd text)
-	chars text_data#22+modal_texter_mark+1
+	char text_data#22+modal_texter_mark+1
 	vstr strtext^text_data
 	if procedure==(value_set)
 	#this is not main thread
--- ovideo-1.orig/src/obj/items.s
+++ ovideo-1/src/obj/items.s
@@ -186,7 +186,7 @@ function editfieldEnter(data container,d
     data GtkWidget#1
     setcall GtkWidget editfield(container,length)
 
-    chars key="key-press-event"
+    char key="key-press-event"
     str keypress^key
     data enter^recoverEnter
     data null=NULL
@@ -209,7 +209,7 @@ endfunction
 function printer(ss text)
     importx "_printf" printf
     call printf(text)
-    chars nl={0xa,0}
+    char nl={0xa,0}
     str newline^nl
     call printf(newline)
 endfunction
@@ -306,7 +306,7 @@ endfunction
 
 #field
 function edit_info_prepare_blue(ss text)
-    chars infocolors={0x00,0x00,0xff}
+    char infocolors={0x00,0x00,0xff}
     data infoptrcolors^infocolors
     sd widget
     setcall widget edit_info_prepare_texter(infoptrcolors,text,(NULL))
@@ -315,7 +315,7 @@ endfunction
 
 #field
 function edit_info_prepare_texter_green(ss text,sd p_texter)
-    chars infocolors={0x00,0xff,0x00}
+    char infocolors={0x00,0xff,0x00}
     data infoptrcolors^infocolors
     sd widget
     setcall widget edit_info_prepare_texter(infoptrcolors,text,p_texter)
@@ -331,7 +331,7 @@ function editinfofield_green(sd box)
 endfunction
 
 function editfield_with_int(sd int)
-    chars spc#sign_int_null
+    char spc#sign_int_null
     str intstring^spc
     str frm="%i"
     importx "_sprintf" sprintf
--- ovideo-1.orig/src/obj/tool.s
+++ ovideo-1/src/obj/tool.s
@@ -13,9 +13,9 @@ importx "_gtk_widget_modify_bg" gtk_widg
 #void
 function setWidgetBase(sd widget,ss in_colors)
 	data guint32_pixel=0
-	chars *=0;chars guint16_red#1
-	chars *=0;chars guint16_green#1
-	chars *=0;chars guint16_blue#1
+	char *=0;char guint16_red#1
+	char *=0;char guint16_green#1
+	char *=0;char guint16_blue#1
 	set guint16_red in_colors#
 	inc in_colors;set guint16_green in_colors#
 	inc in_colors;set guint16_blue in_colors#
@@ -83,7 +83,7 @@ import "getsubject" getsubject
 
 #integer to string to object name
 function object_set_dword_name(sd object,sd int_name)
-    chars str_name#dword_null
+    char str_name#dword_null
     str s_name^str_name
     str dw_str="%u"
     importx "_sprintf" sprintf
--- ovideo-1.orig/src/str/str.s
+++ ovideo-1/src/str/str.s
@@ -32,8 +32,8 @@ endfunction
 
 #e
 function slen_s(ss str,sd size,sd ptrszout)
-    Chars term={0}
-    Chars byte={0}
+    char term={0}
+    char byte={0}
     Data zero=0
     data one=1
     sd loop
@@ -75,7 +75,7 @@ endfunction
 function path_extension(ss path)
     sd len
     ss cursor
-    chars delim="."
+    char delim="."
 
     setcall len slen(path)
 
@@ -167,7 +167,7 @@ function memtostrFw_data(sd mem,sd size,
     dec size
     call cpymem(alloc,mem,size)
     add alloc size
-    chars n=0
+    char n=0
     set alloc# n
     sub alloc size
     call forward(alloc,data)
@@ -227,7 +227,7 @@ function string_alloc_escaped(ss unescap
     set cursor_escaped escaped
     while unescaped#!=0
         set cursor_escaped# unescaped#
-        chars bslash="\\"
+        char bslash="\\"
         if unescaped#==bslash
             inc cursor_escaped
             set cursor_escaped# bslash
--- ovideo-1.orig/src/util/numbers.s
+++ ovideo-1/src/util/numbers.s
@@ -72,9 +72,9 @@ endfunction
 
 
 #bool numeric
-Function numeric(chars c)
-        Chars zero="0"
-        Chars nine="9"
+Function numeric(char c)
+        char zero="0"
+        char nine="9"
         Data false=FALSE
         Data true=TRUE
         If c<zero
@@ -92,7 +92,7 @@ Function memtoint(str content,data size,
         return (FALSE)
     endif
     sd minusbool=FALSE
-    Chars negsign="-"
+    char negsign="-"
     If content#==negsign
         Inc content;Dec size
         If size==0
@@ -122,7 +122,7 @@ Function memtoint_add(str content,data s
         Dec content;Dec size
 
         Data bool#1
-        Chars byte#1
+        char byte#1
         Set byte content#
         SetCall bool numeric(byte)
         If bool==(FALSE)
--- ovideo-1.orig/src/util/update.s
+++ ovideo-1/src/util/update.s
@@ -60,7 +60,7 @@ function update_got_netversion(sd mem,sd
     if compare==different
         import "memtostrFw_s" memtostrFw_s
         const safeversion=1+1+3+1 #hard coded, hard to remember
-        chars newvers#safeversion
+        char newvers#safeversion
         vstr newv^newvers
         data sfsize=safeversion
         vdata fw^update_got_new
--- ovideo-1.orig/src/util/util.s
+++ ovideo-1/src/util/util.s
@@ -18,7 +18,7 @@ function strvaluedisp(str text,data part
     data su=stringUinteger
 
     const infomax=200
-    chars disp#infomax
+    char disp#infomax
     str display^disp
 
     import "slen" slen
@@ -26,7 +26,7 @@ function strvaluedisp(str text,data part
     data truncation#1
     data notruncation=0
     data dword=4
-    chars truncdata="..."
+    char truncdata="..."
     data truncdots^truncdata
 
     set truncation notruncation
