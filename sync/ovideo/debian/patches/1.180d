Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ovideo (1-180d) bionic; urgency=medium
 .
   * share prefix fix
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-05-27

--- ovideo-1.orig/.github/workflows/appimage.yml
+++ ovideo-1/.github/workflows/appimage.yml
@@ -9,6 +9,11 @@ on:
  # branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
+  inputs:
+   ppa:
+    description: "ppa sufix"
+   artifact:
+    description: "result is artifact"
 
 # A workflow run is made up of one or more jobs that can run sequentially or in parallel
 jobs:
@@ -29,14 +34,11 @@ jobs:
    #   repo: 'colin-i/test'
    #   file: 'ovideo.png'
    #   target: 'in/' #plague-linux.zip'
-   # #version: 'tags/1.1'
+   # #version: 'tags/1.5'
    # #token: ${{ secrets.PAT }}
    #Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
-      if [ -n "${{ env.init }}" ]; then
-       exit
-      fi
       mkdir -p AppDir
       file=runtime
       arch=-x86_64
@@ -56,7 +58,7 @@ jobs:
        if [ ! -e "${maindeb}" ]; then
         inter=Packages${2}${3}
         if [ ! -e "${inter}" ]; then
-         wget http://${1}/ubuntu/dists/bionic/main/binary-${2}/Packages.xz -O ${inter}.xz
+         wget http://${1}/ubuntu/dists/bionic/${5}/binary-${2}/Packages.xz -O ${inter}.xz
          xz -d ${inter}.xz #f for multiple times
         fi
         debfilename=`grep "^Filename.*/${4}_" ${inter} | tail -1 | cut -d ' ' -f 2`
@@ -69,8 +71,8 @@ jobs:
         #tar -xf data.tar -C AppDir
        fi
       }
-      downdeb "ppa.launchpadcontent.net/colin-i/ppa" i386 1 ovideo
-      downdeb "ro.archive.ubuntu.com" amd64 1 libc6-i386
+      downdeb "ppa.launchpadcontent.net/colin-i/ppa${{ github.event.inputs.ppa }}" i386 1 ovideo main
+      downdeb "ro.archive.ubuntu.com" amd64 1 libc6-i386 main
       array=( libgtk2.0-0 libpangocairo-1.0-0 libatk1.0-0 libcairo2 libgdk-pixbuf2.0-0 \
               libglib2.0-0 libpangoft2-1.0-0 libpango-1.0-0 libfontconfig1 libfreetype6 \
               libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 libjpeg-turbo8 libsoup2.4-1 libasound2 \
@@ -78,7 +80,9 @@ jobs:
               libpixman-1-0 libpng16-16 libxcb-shm0 libxcb1 libxcb-render0 \
               zlib1g libselinux1 libmount1   libharfbuzz0b libthai0   libexpat1 liborc-0.4-0 libffi6   libpcre3 \
               libxml2 libsqlite3-0 libgssapi-krb5-2 libxau6 libxdmcp6   libblkid1   libgraphite2-3 libdatrie1 libicu60   liblzma5 \
-              libkrb5-3 libk5crypto3   libcom-err2   libkrb5support0   libbsd0 libuuid1   libstdc++6   libgcc1 libkeyutils1 )
+              libkrb5-3 libk5crypto3   libcom-err2   libkrb5support0   libbsd0 libuuid1   libstdc++6   libgcc1 libkeyutils1 \
+              \
+              gstreamer1.0-plugins-good )
       #libgtk-x11-2.0.so.0 libpangocairo-1.0.so.0 libatk-1.0.so.0 libcairo.so.2 libgdk_pixbuf-2.0.so.0
       #libglib-2.0.so.0 libpangoft2-1.0.so.0 libpango-1.0.so.0 libfontconfig.so.1 libfreetype.so.6
       #libgstpbutils-1.0.so.0 libgstreamer-1.0.so.0 libjpeg.so.8 libsoup-2.4.so.1 libasound.so.2
@@ -90,8 +94,9 @@ jobs:
       for var in "${array[@]}"
       do
        #var=`echo $var | tr 'Q' '\n' | xargs echo `
-       downdeb "ro.archive.ubuntu.com" i386 2 ${var}
+       downdeb "ro.archive.ubuntu.com" i386 2 ${var} main
       done
+      downdeb "ro.archive.ubuntu.com" i386 3 gstreamer1.0-plugins-bad universe
       cd AppDir
       file2=AppRun
       if [ ! -e "${file2}" ]; then
@@ -106,7 +111,7 @@ jobs:
       fi
       pngfile=ovideo.png
       if [ ! -e "${pngfile}" ]; then
-       wget https://github.com/colin-i/test/releases/download/1.1/ovideo.png -O ${pngfile} #O for multiple times
+       wget https://github.com/colin-i/test/releases/download/1.5/ovideo.png -O ${pngfile} #O for multiple times
        cat > ovideo.desktop <<EOF
       [Desktop Entry]
       Type=Application
@@ -117,8 +122,22 @@ jobs:
       EOF
        ln -s ${pngfile} .DirIcon #f for multiple times
       fi
+      loader="./lib32/ld-linux.so.2 --library-path ./lib32:./usr/lib/i386-linux-gnu:./lib/i386-linux-gnu"
+      #pixbuf
+      gpixd=/usr/lib/i386-linux-gnu/gdk-pixbuf-2.0/
+      gpixf=${gpixd}`ls -1 .${gpixd} | head -1`/loaders
+      gpixc=.${gpixf}.cache
+      if [ ! -e "${gpixc}" ]; then
+       echo pixbuf
+       sudo mkdir -p ${gpixf}
+       sudo cp .${gpixf}/* ${gpixf}
+       ${loader} .${gpixd}gdk-pixbuf-query-loaders > ${gpixc}
+       sed -i -e "s|^\"/usr|\"./usr|g" "${gpixc}"
+      fi
+      #
       if [ ! -e "usr/bin/ostream" ]; then
-      cd usr/bin
+       echo launcher
+       cd usr/bin
        mv ovideo ostream
        #live64 is not having /lib/ld-linux.so.2. without librarypath will wrong libc bionic to jammy
        #../lib since zlib1g
@@ -126,12 +145,14 @@ jobs:
       #!/bin/bash
       cd "\$(dirname "\$0")"
       cd ../../
-      ./lib32/ld-linux.so.2 --library-path ./lib32:./usr/lib/i386-linux-gnu:./lib/i386-linux-gnu ./usr/bin/ostream `pwd`
+      GDK_PIXBUF_MODULE_FILE=${gpixc} ${loader} ./usr/bin/ostream "\`pwd\`"
       EOF
        chmod 755 ovideo
        cd ../../
       fi
+      #
       cd ..
+      #
       if [ ! -e "ovideo.AppImage" ]; then
        mksquashfs AppDir ovideo.squashfs -root-owned -noappend
        cat runtime >> ovideo.AppImage
@@ -141,9 +162,15 @@ jobs:
       #http://ro.archive.ubuntu.com/ubuntu/dists/bionic/main/binary-i386/Packages.xz
       #https://stackoverflow.com/questions/9981099/are-exported-private-keys-in-gpg-still-encrypted
       #echo -n ${{ secrets.PASS }} > pas.txt
-      #echo "tag=refs/tags/1.1" >> $GITHUB_ENV
+      #echo "tag=refs/tags/1.5" >> $GITHUB_ENV
       #echo $tag ${{ env.tag }}
       #ARCH=i686 ${file} ./ovideo.yml
+   - name: test artifact
+     if: ${{ github.event.inputs.artifact != '' }}
+     uses: actions/upload-artifact@v3
+     with:
+      name: appimage
+      path: ./*.AppImage
    #- name: Create Release
    #  id: create_release
    #  uses: actions/create-release@v1
@@ -153,7 +180,7 @@ jobs:
    #   tag_name: ${{ env.tag }}
    #   release_name: Release ${{ env.tag }}
    #   draft: false
-   #   rerelease: false
+   #   prerelease: false
    #- name: Upload Release Asset
    #  uses: actions/upload-release-asset@v1
    #  env:
--- ovideo-1.orig/.github/workflows/deb.yml
+++ ovideo-1/.github/workflows/deb.yml
@@ -7,7 +7,7 @@ on:
 # A workflow run is made up of one or more jobs that can run sequentially or in parallel
 jobs:
  # This workflow contains a single job called "build"
- build:
+ dbuild:
   # The type of runner that the job will run on
   runs-on: ubuntu-18.04
   # Steps represent a sequence of tasks that will be executed as part of the job
--- /dev/null
+++ ovideo-1/.github/workflows/rel.yml
@@ -0,0 +1,36 @@
+
+#name: appimage
+
+on:
+ # Triggers the workflow on push or pull request events but only for the main branch
+ #push:
+ # branches: [ main ]
+ #pull_request:
+ # branches: [ main ]
+ # Allows you to run this workflow manually from the Actions tab
+ workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+ # This workflow contains a single job called "build"
+ rbuild:
+  # The type of runner that the job will run on
+  runs-on: ubuntu-18.04
+  # Steps represent a sequence of tasks that will be executed as part of the job
+  steps:
+   - name: Run a multi-line script
+     run: |
+      #get the version from changelog/launchpad/input
+   - name: Create Release
+     id: create_release
+     uses: actions/create-release@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      tag_name: ${{ env.version }}
+      release_name: Release ${{ env.version }}
+      draft: false
+      prerelease: false
+   - name: Store upload url for assets
+     run: |
+      #store at id=67484178
--- /dev/null
+++ ovideo-1/.github/workflows/up.yml
@@ -0,0 +1,32 @@
+
+#name: appimage
+
+on:
+ # Triggers the workflow on push or pull request events but only for the main branch
+ #push:
+ # branches: [ main ]
+ #pull_request:
+ # branches: [ main ]
+ # Allows you to run this workflow manually from the Actions tab
+ workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+ # This workflow contains a single job called "build"
+ ubuild:
+  # The type of runner that the job will run on
+  runs-on: ubuntu-18.04
+  # Steps represent a sequence of tasks that will be executed as part of the job
+  steps:
+   - name: Run a multi-line script
+     run: |
+      echo test > test
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: https://uploads.github.com/repos/colin-i/test/releases/67474274/assets{?name,label}
+      asset_path: ./test
+      asset_name: test
+      asset_content_type: application/zip
--- ovideo-1.orig/src/_dif/dif~lin.s
+++ ovideo-1/src/_dif/dif~lin.s
@@ -19,7 +19,7 @@ function movetoScriptfolder(data forward
 	call prog_init()
 	sd f
 	sd err
-	setcall f share_folder(#err)
+	setcall f share_folder(#err,(NULL))
 	if err==(noerror)
 		setcall err move_to_folder(f)
 		if err==(noerror)
@@ -791,7 +791,7 @@ endfunction
 function move_to_share_v()
 	sd f
 	sd err
-	setcall f share_folder(#err)
+	setcall f share_folder(#err,(NULL))
 	if err==(noerror)
 		call dirch(f)
 	endif
@@ -803,10 +803,11 @@ function move_to_share_core(sv p)
 	if mem!=(NULL)
 		sd f
 		sd err
-		setcall f share_folder(#err)
+		ss prefix=""
+		setcall f share_folder(#err,#prefix)
 		if err==(noerror)
 			sd b
-			setcall b cat_absolute_verif(mem,f,p#,(NULL))
+			setcall b cat_absolute_verif(mem,prefix,f,p#)
 			if b==(TRUE)
 				set p# mem
 			endif
@@ -857,16 +858,18 @@ function init_args(sd argc,sv argv)
 	set shareprefix argv#
 endfunction
 #string
-function share_folder(sv p_err)
+function share_folder(sv p_err,sv prefix)
 	value a%shareprefix_p
 	if a#==(NULL)
 		set p_err# (noerror)
 		include "share.txt"
 	endif
-	setcall p_err# move_to_folder(a#)
-	if p_err#==(noerror)
-		return #prestart
-	endif
+	if prefix==(NULL)
+		setcall p_err# move_to_folder(a#)
+	else
+		set prefix# a#
+	endelse
+	return #prestart
 endfunction
 
 const PATH_MAX=4096
@@ -921,17 +924,13 @@ function cat_absolute_verif(sd mem,sd v,
 	setcall s strlen(v)
 	inc s
 	addcall s strlen(v2)
-	if v3!=(NULL)
-		inc s
-		addcall s strlen(v3)
-	endif
+	inc s
+	addcall s strlen(v3)
 	if s<(PATH_MAX)
 		sd n
 		setcall n sprintf(mem,"%s/%s",v,v2)
-		if v3!=(NULL)
-			add mem n
-			call sprintf(mem,"/%s",v3)
-		endif
+		add mem n
+		call sprintf(mem,"/%s",v3)
 		return (TRUE)
 	endif
 	call texter("path max error.")
