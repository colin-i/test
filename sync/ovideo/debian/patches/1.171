Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ovideo (1-171) xenial; urgency=medium
 .
   * async update check
Author: bc <bc@ubuntu>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- ovideo-1.orig/src/_exec/start.s
+++ ovideo-1/src/_exec/start.s
@@ -148,9 +148,6 @@ function sys_folder_enterleave(sd forwar
     call folder_enterleave(system,forward)
 endfunction
 
-importx "_free" free
-
-import "file_get_content" file_get_content
 import "init_user" init_user
 import "texter" texter
 
@@ -165,37 +162,14 @@ function callbackprocessfolder()
 	call img_folder_enterleave(imgforward)
 
 	sd err
-
-	str localversion="version.txt"
-	vstr mem#1
-	data size#1
-	sd ptrmem^mem
-	sd ptrsize^size
-	setcall err file_get_content(localversion,ptrsize,ptrmem)
+	setcall err init_user()
 	if err==(noerror)
-		call update_mem_version((NULL),mem,size)
-		setcall err init_user()
-		if err==(noerror)
-			#move to settings
-			data sysforward^setsystems
-			call sys_folder_enterleave(sysforward)
-		else
-			call texter(err)
-		endelse
-		call free(mem)
-	endif
-endfunction
-function update_mem_version(sd p,sd m,sd s)
-	vstr mem#1
-	data size#1
-	if p==(NULL)
-		set mem m
-		set size s
+		#move to settings
+		data sysforward^setsystems
+		call sys_folder_enterleave(sysforward)
 		return (void)
 	endif
-	set p# mem
-	incst p
-	set p# size
+	call texter(err)
 endfunction
 
 ######main
--- ovideo-1.orig/src/net/net-base.s
+++ ovideo-1/src/net/net-base.s
@@ -10,10 +10,13 @@ importx "_soup_session_sync_new" soup_se
 importx "_soup_message_new" soup_message_new
 importx "_soup_session_send_message" soup_session_send_message
 
-
-function getSessionMessageBody(data sessionMsg,data ptrmsgmem,data ptrmsgsize)
+#bool
+function getSessionMessageBody(sv sessionMsg,sv ptrmsgmem,sv ptrmsgsize)
 #    GObject             parent
 #All the fields in the GObject structure are private to the GObject implementation and should never be accessed directly.
+#		GTypeInstance g_type_instance; ulong at windows
+#		guint ref_count;
+#		GData *qdata;
 #    const char         *method;
 
 #    guint               status_code;
@@ -24,70 +27,83 @@ function getSessionMessageBody(data sess
 
 #    SoupMessageBody    *response_body;
 #    SoupMessageHeaders *response_headers;
-    data offset=3+5*4
-    add sessionMsg offset
 
-    data response_body#1
-    set response_body sessionMsg#
+	add sessionMsg (:+DWORD+:+          :)
+	sd status
+	set status sessionMsg#d^
+	if status!=(HTTP_STATUS_OK)
+		call uri_err(status)
+		return (FALSE)
+	endif
+	add sessionMsg (DWORD+:+:+:)
 
+	sd response_body#1
+	set response_body sessionMsg#
 
 #        const char *data;
 #        goffset     length;  (gint64)
-    set ptrmsgmem# response_body#
-    data valuesize=4
-    data greatest=8
-    add response_body valuesize
-    import "system_variables_alignment_pad" system_variables_alignment_pad
-    addcall response_body system_variables_alignment_pad(valuesize,greatest)
-    set ptrmsgsize# response_body#
+	set ptrmsgmem# response_body#
+	data valuesize=4
+	data greatest=8
+	add response_body valuesize
+	import "system_variables_alignment_pad" system_variables_alignment_pad
+	addcall response_body system_variables_alignment_pad(valuesize,greatest)
+	set ptrmsgsize# response_body#
+	return (TRUE)
 endfunction
 
-#err
-function uri_get_content(str uri,data ptrmsg,data ptrmsgmem,data ptrmsgsize)
-    data session#1
-    setcall session soup_session_sync_new()
-
-    str get="GET"
-    setcall ptrmsg# soup_message_new(get,uri)
-
-    data ok=HTTP_STATUS_OK
-    data status#1
-    setcall status soup_session_send_message(session,ptrmsg#)
-    if status!=ok
-        str urierr="Error status code: "
-        import "strvaluedisp" strvaluedisp
-        data su=stringUinteger
-        call strvaluedisp(urierr,status,su)
-        return urierr
-    endif
+importx "_soup_session_queue_message" soup_session_queue_message
+
+function uri_queue_content(ss uri,sd callback)
+	sd session
+	setcall session soup_session_sync_new()
+	sd msg
+	setcall msg soup_message_new("GET",uri)
+	call soup_session_queue_message(session,msg,callback,(NULL)) #msg transfer full
+	#If after returning from this callback the message has not been requeued, msg will be unreffed.
+	#call g_object_unref(session)
+	#assertion `queue->head == NULL' failed
+endfunction
+
+function uri_err(sd status)
+	vstr urierr="Error status code: "
+	import "strvaluedisp" strvaluedisp
+	data su=stringUinteger
+	call strvaluedisp(urierr,status,su)
+endfunction
 
-    importx "_g_object_unref" g_object_unref
-    call g_object_unref(session)
+importx "_g_object_unref" g_object_unref
+#msg
+function uri_get_content(ss uri)
+	sd session
+	setcall session soup_session_sync_new()
+
+	vstr get="GET"
+	sd msg
+	setcall msg soup_message_new(get,uri)
 
-    call getSessionMessageBody(ptrmsg#,ptrmsgmem,ptrmsgsize)
+	#setcall status soup_session_send_message(session,msg)
+	call soup_session_send_message(session,msg)
 
-    data noerr=noerror
-    return noerr
+	call g_object_unref(session)
+	return msg
 endfunction
 
 
-#v/e
+#void
 function uri_get_content_forward_data(ss uri,sd forward,sd data)
 #                        forward body and size
-    data err#1
-    data noerr=noerror
-    sd msg
-    sd body
-    sd size
-    sd ptrmsg^msg
-    sd ptrbody^body
-    sd ptrsize^size
-    setcall err uri_get_content(uri,ptrmsg,ptrbody,ptrsize)
-    if err!=noerr
-        return err
-    endif
-    call forward(body,size,data)
-    call g_object_unref(msg)
+	sd msg
+	sd body
+	sd size
+
+	setcall msg uri_get_content(uri)
+	sd bool
+	setcall bool getSessionMessageBody(msg,#body,#size)
+	if bool==(TRUE)
+		call forward(body,size,data)
+	endif
+	call g_object_unref(msg)
 endfunction
 
 #function uri_get_content_forward(ss uri,sd forward)
--- ovideo-1.orig/src/str/str.s
+++ ovideo-1/src/str/str.s
@@ -20,7 +20,7 @@ import "cpymem" cpymem
 function memtostrFw_s(str mem,data size,str dest,data destsize,data forward)
     if size>destsize
         import "texter" texter
-        str memtostrconflict="Mem2Str: destination is too small."
+        vstr memtostrconflict="Mem2Str: destination is too small."
         call texter(memtostrconflict)
     endif
 
--- ovideo-1.orig/src/util/update.s
+++ ovideo-1/src/util/update.s
@@ -6,68 +6,79 @@ format elfobj
 
 include "../_include/include.h"
 
-importx "_g_object_unref" g_object_unref
-
-import "uri_get_content" uri_get_content
 
 
 #v
-function update_got_new(str text)
-    str toupdate="Update available at site (to disable this notification uncheck 'Check for updates' from stage preferences). New version: "
+function update_got_new(ss text)
+    vstr toupdate="Update available at site (to disable this notification uncheck 'Check for updates' from stage preferences). New version: "
     data strtype=stringstring
     import "strvaluedisp" strvaluedisp
     call strvaluedisp(toupdate,text,strtype)
 endfunction
 
-#void/err
-function update_got_localversion(data mem,data size)
-    data msg#1
-    data ptrmsg^msg
-    str uri="https://gist.githubusercontent.com/colin-i/1c06e597689e204793a7e89fbcf2a481/raw/aa1c2e22f404aaa797ac24af20507a45e26178c6/gistfile1.txt"
-    str msgmem#1
-    data msgsize#1
-    data ptrmsgmem^msgmem
-    data ptrmsgsize^msgsize
-    data err#1
-    data noerr=noerror
-    setcall err uri_get_content(uri,ptrmsg,ptrmsgmem,ptrmsgsize)
-    if err!=noerr
-        return err
-    endif
+import "move_to_share_v" move_to_share_v
+importx "_g_object_unref" g_object_unref
+importx "_g_idle_add" g_idle_add
+
+#void
+function update_async_callback(sd ses,sd msg) #,sd data
+	sd netmem
+	sd netsize
+	import "getSessionMessageBody" getSessionMessageBody
+	sd bool
+	setcall bool getSessionMessageBody(msg,#netmem,#netsize)
+	if bool==(TRUE)
+		call move_to_share_v()
+		sd mem
+		sd size
+		import "file_get_content" file_get_content
+		sd err
+		setcall err file_get_content("version.txt",#size,#mem)
+		if err==(noerror)
+			call update_got_netversion(mem,size,netmem,netsize)
+			importx "_free" free
+			call free(mem)
+		endif
+	endif
+	call g_idle_add(update_async_sync,ses) #unref session later, not in session callback
+endfunction
 
+#bool
+function update_async_sync(sd ses)
+	call g_object_unref(ses)
+	return (FALSE)
+endfunction
+
+#void
+function update_got_netversion(sd mem,sd size,sd netmem,sd netsize)
     #forward to view if it is a new version
     data compare#1
     import "cmpmem_s" cmpmem_s
-    setcall compare cmpmem_s(msgmem,msgsize,mem,size)
+    setcall compare cmpmem_s(netmem,netsize,mem,size)
 
     data different=differentCompare
     if compare==different
         import "memtostrFw_s" memtostrFw_s
-        const safeversion=20
+        const safeversion=1+1+3+1 #hard coded, hard to remember
         chars newvers#safeversion
-        str newv^newvers
+        vstr newv^newvers
         data sfsize=safeversion
-        data fw^update_got_new
-        call memtostrFw_s(msgmem,msgsize,newv,sfsize,fw)
+        vdata fw^update_got_new
+        call memtostrFw_s(netmem,netsize,newv,sfsize,fw)
     endif
-    #
-
-    call g_object_unref(msg)
 endfunction
 
-import "update_mem_version" update_mem_version
-
 function update()
-    sd up
-    setcall up update_get()
-    if up==(FALSE)
-        return (void)
-    endif
-
-    vstr mem#1
-    data size#1
-    call update_mem_version(#mem)
-    call update_got_localversion(mem,size)
+	sd up
+	setcall up update_get()
+	if up==(FALSE)
+		return (void)
+	endif
+
+	import "uri_queue_content" uri_queue_content
+	ss s="https://gist.githubusercontent.com/colin-i/1c06e597689e204793a7e89fbcf2a481/raw/2e9c9720669d415bb649a0ba8ecaf26e446fc140/gistfile1.txt"
+	#ss s="http://localhost/b.php"
+	call uri_queue_content(s,update_async_callback)
 endfunction
 
 function update_path()
--- ovideo-1.orig/version.txt
+++ ovideo-1/version.txt
@@ -1 +1 @@
-1.166
\ No newline at end of file
+1.171
\ No newline at end of file
