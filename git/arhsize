
# optional 1 limit

if [ -z "${arhsizelimit}" ]; then arhsizelimit=$((100*1000*1000)); fi

#for tests main reason
if [ -z "${1}" ]; then
	maximumlimit=100
else
	maximumlimit=${1}
fi

s=0

while :
do
QUERY='
{"query": "
  query {
    viewer {
      repository(name: \"arh\") {
        releases (first:  '"${maximumlimit}"''"${cursor}"') {
          edges {
            node {
              releaseAssets (first:100){
                edges {
                  node {
                    size
                  }
                }
              }
              name
            }
            cursor
          }
        }
      }
    }
  }"
}'
	sleep 1
	raw=$(curl https://api.github.com/graphql -X POST -H "Authorization: bearer `cat ~/n/pat`" --data "$(echo $QUERY)")
	raw=`echo ${raw} | jq -r ".data.viewer.repository.releases.edges[]"`

	raw1=`echo ${raw} | jq -r " .cursor"`
	readarray -t data1 <<<"$raw1"
	if [ "${data1[0]}" = "" ]; then break;fi

	n=${#data1[@]}

	echo ${raw} | jq -r " .node.name" >> 1

	raw2=`echo ${raw} | jq -r " .node.releaseAssets.edges[] | .node.size"`
	readarray -t data2 <<<"$raw2"
	n2=${#data2[@]}

	echo ${n} ${n2}

	for ((i = 0; i < ${n2}; ))
	do
		a=${data2[${i}]}
		i=$((i+1))

		s=$((s+a))
	done

	if [ ${n} -lt ${maximumlimit} ]; then break; fi

	crs=${data1[n-1]}

	cursor=",after:\\\"${crs}\\\""
done

a=( `cat 1 | cut -d' ' -f1 | sort` )
rm 1
b=${a[0]}
i=0
for c in "${a[@]}"; do
	if [ ${b} = ${c} ]; then
		i=$((i+1))
	else
		echo ${b} ${i} >> 1
		b=${c}
		i=1
	fi
done
echo ${b} ${i} >> 1
sort -k2nr 1
rm 1

printf "%'d %'d\n" ${s} ${arhsizelimit}
if [ ${s} -gt ${arhsizelimit} ]; then echo big
else echo small; fi
