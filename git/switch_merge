
#1 switch to

if [ "${1}" = "" ]; then
	echo arg 1 required
	exit 1
fi
m=`git show-ref | grep master | head -1 | cut -d ' ' -f1`
if [ "${m}" = "" ]; then
	echo no master
	exit 1
fi
t=`git show-ref | grep test | head -1 | cut -d ' ' -f1`
if [ "${t}" = "" ]; then
	echo no test
	exit 1
fi

#current=`git rev-parse HEAD`
current=`git branch --show-current`

if [ "${1}" = "${current}" ]; then
	echo same branch, no switch
	exit 1
fi

git switch ${1}

z=


if [ "$m" != "$t" ]; then
	echo `git show -s --format="%ad" ${m}` `git show -s --format="%ad" ${t}`

	mt=`git show -s --format="%at" ${m}`
	tt=`git show -s --format="%at" ${t}`
	if [ "$1" = "master" ]; then
		if [ ${mt} -lt ${tt} ]; then
			z=test
		else
			echo is recent
		fi
	else
		if [ ${tt} -lt ${mt} ]; then
			z=master
		else
			echo is recent
		fi
	fi
else
	echo equal
fi

if [ "${z}" != "" ]; then
	echo merge ${z} \? y \?

	read -n1 -t $((60*60*24)) ans

	if [ "${ans}" = "y" ]; then
		echo yes
		git merge ${z}
	else
		echo no
	fi
else
echo no merge
fi
