#has_new when new segment ( no diff check. will add segment name to result )

pdb a.py && \
./b _new && ./b && \
./c _new
from_new_to_normal=$?
if [ ${from_new_to_normal} -eq 1 ]; then exit 1; fi
echo from_new_to_normal=${from_new_to_normal}. or added new at _new \? y \? && \
read -n1 -t $((60*60*24)) ans && \
if [ "${ans}" = "y" ] || [ ${from_new_to_normal} -eq 2 ]; then
	has_new=x ./c _new
fi && \
if [ ${from_new_to_normal} -eq 2 ]; then
	has_new=x ./c
else
	./c
fi

#at question(or when a.py):

#when new at _new, ./b _new, has_new=x ./c _new . then an ./n to see it on flow. at a.py can also use skipdate=x at ./b
#when from new to normal: move from: recs_new to recs, move from current_new to current, enter; after that also move from: new_new,ex_new,ex2_new
#when from normal to out: use python nlist.py , remove from: recs text text_last current new ex ex2
