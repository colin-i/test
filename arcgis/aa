
./b _new && ./c _new
r=$?
if [ ${r} -ne 0 ]; then
	if [ ${r} -eq 1 ]; then exit 1; fi
	echo is from new to normal \? y \?
	read -n1 -t $((60*60*24)) ans
else
	echo is added new at _new \? y \?
	read -n1 -t $((60*60*24)) ans
fi
if [ "${ans}" = "y" ]; then
	has_new=x ./c _new
fi

#at questions:
#when new at _new, ./b _new, has_new=x ./c _new . then an ./n to see it on flow. at a.py can also use skipdate=x at ./b
#when from new to normal: move from: recs_new to recs, move from current_new to current, enter; after that also move from: new_new,ex_new,ex2_new
