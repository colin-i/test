
#optional    1 dist  2 version

#name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
name=( `cat debian/control | grep "^Package" | grep -o [^\ ]*$ | xargs` )

if [ -z "${1}" ]; then
	dist=`cat debian/changelog | head -1 | grep -Poe "[^ ]*(?=;)"`
else
	dist=${1}
fi
if [ -z "${2}" ]; then
	version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
else
	version=${2}
fi
if [ -z "${ppa}" ]; then
	ppa=ppa
else
	ppa=${ppa}
fi
echo ${dist} ${version} ${ppa}

i=1
for n in "${name[@]}"; do
	echo ${n}
	source ~/test/publparh
	for var in "${arh[@]}"
	do
		echo ${var}
		counter=0
		AGAINST=
		while true
		do
			sleep 1   #if there is a Published loop
			OUTPUT=`python3 ~/test/lp.py ${ppa} ${dist} ${var} ${name} ${version} x | head -1`
			if [ "${OUTPUT}" != "${AGAINST}" ]; then
				counter=0
				AGAINST=${OUTPUT}
			fi
			counter=$((counter+1))
			echo ${counter} ${OUTPUT}
			if [ -n "${no_wait}" ]; then break; fi
			if [ "${OUTPUT}" = 'Published' ]; then
				if [ -e ~/stopwaitingflag ]; then
					rm ~/stopwaitingflag
				fi
				break
			elif [ -e ~/stopwaitingflag ]; then
				rm ~/stopwaitingflag
				echo stopped
				notify-send "stopped"
				exit 1
			fi
			sleep $((((counter/10)+1)*100))
		done
	done
	if [ -n "${terminator}" ]; then
		if [ ${terminator} -eq ${i} ]; then
			break
		fi
	fi
	i=$((i+1))
done
